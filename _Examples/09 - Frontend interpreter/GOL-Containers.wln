<|"notebook" -> <|"name" -> "Untitled", "id" -> "bedim-2c38d", 
   "kernel" -> LocalKernel, "objects" -> 
    <|"board" -> <|"json" -> "[\"List\",[\"List\",0,1,0,0,0,1,1,1,0,1,0,1,1,1\
,0,0,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,1,1,1,1,1,1,1],[\"List\",0,0,1,1,1,0,1\
,0,0,1,1,1,0,1,1,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,0,1,0,1,1,1,0,0,0,1],[\"List\"\
,0,0,0,1,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,1,0,1,1,1,0,1,\
1,1],[\"List\",0,1,0,0,1,0,1,1,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,1,0,1,1,\
0,0,1,1,1,1,0,0,0],[\"List\",0,1,0,1,0,0,1,1,0,1,0,0,1,0,0,1,1,0,0,1,1,0,1,1,\
1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1],[\"List\",0,1,0,1,0,1,1,1,0,0,1,0,0,1,0,0,0,\
1,0,0,1,1,0,0,1,0,1,0,1,0,0,1,1,0,0,0,0,0,1,0],[\"List\",0,0,1,1,1,0,1,0,1,1,\
1,0,1,1,1,1,1,1,0,1,1,0,0,0,1,1,1,0,1,0,1,1,0,1,0,0,1,0,0,0],[\"List\",0,1,0,\
1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,0,0,1,1,1,0,0,1,0,0,1,0,1,1,1,1,1,0,1,1,0,0],[\
\"List\",0,1,0,1,0,0,0,1,0,1,0,0,0,0,1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,1,1,0,1,1,\
0,0,0,1,0,1],[\"List\",1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,0,\
0,1,0,0,1,1,1,0,0,0,1,0,1],[\"List\",0,0,1,1,0,1,1,1,0,0,0,1,1,0,0,0,1,0,0,0,\
0,1,0,0,0,1,1,1,1,1,1,1,0,1,0,0,0,1,0,1],[\"List\",0,0,0,1,0,1,1,1,1,1,1,0,0,\
1,1,0,0,0,0,1,0,0,1,1,0,1,1,1,1,1,0,1,0,0,1,0,0,0,1,0],[\"List\",1,1,1,0,0,1,\
0,0,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,0,0,0,0,0,0,1,0,1],[\"List\
\",1,1,0,0,1,0,0,1,0,1,0,1,1,0,1,1,0,0,0,0,1,0,1,1,0,1,0,0,1,1,1,0,0,0,0,1,1,\
0,0,0],[\"List\",1,1,0,1,1,0,1,0,1,0,0,0,0,0,1,0,1,1,1,0,1,0,0,0,0,0,1,1,1,1,\
0,1,1,0,0,0,1,0,0,0],[\"List\",0,0,0,1,1,0,1,1,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0,\
1,0,0,0,1,1,0,1,1,1,1,0,1,1,0,0,0],[\"List\",0,1,1,1,0,1,0,0,0,1,0,0,0,0,1,0,\
0,0,0,1,0,0,0,0,1,1,1,0,0,1,1,0,0,1,0,0,0,1,0,0],[\"List\",0,0,1,1,1,0,0,1,1,\
0,0,0,1,0,1,1,0,1,1,1,0,1,0,0,1,0,0,0,1,1,0,0,0,1,0,1,0,1,1,0],[\"List\",1,0,\
0,1,0,1,1,0,0,1,0,0,1,1,0,1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,1,0,1,0,1,0,0,0,1],\
[\"List\",1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1,0,0,1,1,0,0,1,1,1,0,1,1,1,1\
,1,0,1,0,1,0],[\"List\",1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,0,0,1,1,0,0,0,1,0\
,0,0,0,1,0,1,0,0,0,0,0,0,0],[\"List\",1,1,1,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0\
,0,1,1,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,1,1],[\"List\",0,1,1,1,1,0,0,0,1,0,0,1,0\
,1,0,0,0,0,1,0,1,1,0,0,0,1,0,1,0,0,1,1,1,1,0,0,1,1,0,0],[\"List\",0,1,1,0,1,1\
,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,1,1,1,0,0,0,0,1,0,0,1],[\"List\
\",1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,1,1,0,1,1,1,1,0,1,0,0,0,\
0,0,0],[\"List\",0,1,1,0,1,1,1,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,1,0,1,0,0,\
1,1,1,1,1,1,1,0,0,1],[\"List\",0,0,1,1,1,1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,1,1,0,\
1,0,1,0,0,0,1,0,1,1,0,1,1,1,1,1,1],[\"List\",1,0,1,1,1,0,1,1,1,0,1,1,0,0,0,0,\
1,0,0,1,1,0,1,0,1,0,0,0,1,1,1,0,1,0,1,0,1,1,0,0],[\"List\",0,1,1,1,1,1,1,1,1,\
0,1,1,0,1,1,1,1,0,1,1,1,0,1,1,0,0,1,1,1,0,0,0,0,1,0,1,0,1,1,1],[\"List\",1,1,\
1,1,1,1,1,1,1,0,1,0,1,0,0,0,1,1,1,0,1,0,1,0,1,0,1,1,1,0,0,1,0,1,0,1,0,0,0,0],\
[\"List\",1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1\
,1,0,1,1,0,0],[\"List\",1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0\
,0,1,0,1,0,0,1,0,0,0,1,1,0],[\"List\",1,0,0,0,1,1,1,0,1,1,1,0,0,1,1,0,1,1,0,0\
,0,0,1,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,1,0],[\"List\",1,0,0,1,0,0,0,1,1,1,1,1,1\
,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,1,0,0,0,1,1,1,1,1,1,1],[\"List\",1,0,1,0,1,0\
,0,0,1,1,0,0,1,1,1,1,0,0,1,1,0,1,0,1,0,1,0,0,0,1,1,0,1,1,0,1,1,0,0,1],[\"List\
\",0,0,0,1,1,1,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,\
1,1,0],[\"List\",1,0,1,0,0,0,0,1,0,0,0,1,0,0,1,1,0,0,0,1,1,1,0,1,0,0,1,1,0,1,\
0,1,1,1,1,0,1,0,0,1],[\"List\",0,0,0,1,0,0,0,0,1,0,0,0,1,1,1,0,1,0,1,0,0,1,0,\
1,1,1,0,1,0,0,0,1,0,1,0,0,0,1,1,0],[\"List\",1,0,1,0,1,1,1,0,0,1,0,0,0,0,1,1,\
1,1,0,1,0,1,0,0,0,1,1,0,1,1,0,0,0,0,1,0,0,0,1,0],[\"List\",0,1,0,1,0,1,1,1,1,\
0,0,0,1,1,1,0,0,0,1,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,0,1,1,0,1]]", 
       "date" -> DateObject[{2023, 6, 19, 15, 33, 
          53.069497`8.477419946050041}, "Instant", "Gregorian", 3.]|>, 
     "8b02562a-29d0-491f-9b38-30db5af0ac94" -> 
      <|"json" -> "[\"MyFunction\",[\"Hold\",\"board\"]]", 
       "date" -> DateObject[{2023, 7, 28, 12, 13, 
          54.005485`8.485012845073918}, "Instant", "Gregorian", 2.]|>|>, 
   "path" -> "/Volumes/Data/Github/wolfram-js-frontend/Examples/Advanced/GOL-\
Containers.wln", "cell" -> 
    "bfbcf204-3c6e-43bf-a089-cb87d516e79c40d1a4769eff", 
   "date" -> DateObject[{2023, 9, 8, 21, 55, 36.033263`8.309278570875836}, 
     "Instant", "Gregorian", 3.], "symbols" -> 
    <|"board" -> <|"date" -> DateObject[{2023, 7, 28, 12, 13, 
          54.106309`8.48582288286753}, "Instant", "Gregorian", 2.]|>|>, 
   "channel" -> WebSocketChannel[
     KirillBelov`WebSocketHandler`WebSocketChannel`$23]|>, 
 "cells" -> {<|"id" -> "bfbcf204-3c6e-43bf-a089-cb87d516e79c40d1a4769eff710", 
    "type" -> "input", "data" -> ".md\n# GOL: Example with containers\nUsing \
the advanced frontend functions definition", "display" -> "codemirror", 
    "sign" -> "bedim-2c38d", "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "45e5f94c-dec0-4f64-ad84-d2256226dbf6eff710", 
    "type" -> "output", "data" -> "\n# GOL: Example with containers\nUsing \
the advanced frontend functions definition", "display" -> "markdown", 
    "sign" -> "bedim-2c38d", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "d8be1128-077a-4eb1-9871-95ca0f0a95791a4769eff710", 
    "type" -> "input", "data" -> ".js\n\n//constructor\ncore.MyFunction = \
async (args, env) => {\n  //just to make second object to be aware of the \
previous one\n  const data = await interpretate(args[0], env);\n  //create js \
canvas\n  const canvas = document.createElement(\"canvas\");\n  canvas.width \
= 400;\n  canvas.height = 400;\n\n  let context = \
canvas.getContext(\"2d\");\n  context.fillStyle = \"lightgray\";\n  \
context.fillRect(0, 0, 500, 500);\n\n  //an array to store the previous \
state\n  let old = new Array(40);\n  for (let i = 0; i < old.length; i++) {\n \
   old[i] = new Array(40).fill(0); \n  }\n\n  \
env.element.appendChild(canvas);\n  env.local.old = old;\n  env.local.ctx = \
context;\n}\n\n//on update\ncore.MyFunction.update = async (args, env) => {\n \
 const data = await interpretate(args[0], env);\n  console.log(env.local);\n  \
const context = env.local.ctx;\n  //draw our boxes\n  for(let i=0; i<40; ++i) \
{\n    for (let j=0; j<40; ++j) {\n      //old pixels will leave blue \
traces\n      if (env.local.old[i][j] > 0) {\n        context.fillStyle = \
\"rgba(0,0,255,0.2)\"; \n        context.fillRect(i*10 + 2, j*10 + 2, 6, \
6);\n      }\n      //new pixels\n      if (data[i][j] > 0) {\n        \
context.fillStyle = \"rgba(255,0,0,0.4)\"; \n        context.fillRect(i*10 + \
1, j*10 + 1, 8, 8);\n      } else {\n        context.fillStyle = \
\"rgba(255,255,255,0.4)\"; \n        context.fillRect(i*10 + 1, j*10 + 1, 8, \
8);\n      }\n    }\n  }\n\n  env.local.old = \
data;\n}\n\ncore.MyFunction.destroy = (args, env) => {}\n\nreturn null;", 
    "display" -> "codemirror", "sign" -> "bedim-2c38d", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "e6f137df-34a2-4c5d-abc3-b1cac46fbd62710", "type" -> "output", 
    "data" -> "\n\n//constructor\ncore.MyFunction = async (args, env) => {\n  \
//just to make second object to be aware of the previous one\n  const data = \
await interpretate(args[0], env);\n  //create js canvas\n  const canvas = \
document.createElement(\"canvas\");\n  canvas.width = 400;\n  canvas.height = \
400;\n\n  let context = canvas.getContext(\"2d\");\n  context.fillStyle = \
\"lightgray\";\n  context.fillRect(0, 0, 500, 500);\n\n  //an array to store \
the previous state\n  let old = new Array(40);\n  for (let i = 0; i < \
old.length; i++) {\n    old[i] = new Array(40).fill(0); \n  }\n\n  \
env.element.appendChild(canvas);\n  env.local.old = old;\n  env.local.ctx = \
context;\n}\n\n//on update\ncore.MyFunction.update = async (args, env) => {\n \
 const data = await interpretate(args[0], env);\n  console.log(env.local);\n  \
const context = env.local.ctx;\n  //draw our boxes\n  for(let i=0; i<40; ++i) \
{\n    for (let j=0; j<40; ++j) {\n      //old pixels will leave blue \
traces\n      if (env.local.old[i][j] > 0) {\n        context.fillStyle = \
\"rgba(0,0,255,0.2)\"; \n        context.fillRect(i*10 + 2, j*10 + 2, 6, \
6);\n      }\n      //new pixels\n      if (data[i][j] > 0) {\n        \
context.fillStyle = \"rgba(255,0,0,0.4)\"; \n        context.fillRect(i*10 + \
1, j*10 + 1, 8, 8);\n      } else {\n        context.fillStyle = \
\"rgba(255,255,255,0.4)\"; \n        context.fillRect(i*10 + 1, j*10 + 1, 8, \
8);\n      }\n    }\n  }\n\n  env.local.old = \
data;\n}\n\ncore.MyFunction.destroy = (args, env) => {}\n\nreturn null;", 
    "display" -> "js", "sign" -> "bedim-2c38d", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "cedcbe99-4dbf-45a3-8213-53adcee6d0a81a4769eff710", 
    "type" -> "input", "data" -> ".md\nWolfram Mathematica code", 
    "display" -> "codemirror", "sign" -> "bedim-2c38d", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "bc146593-4d0c-4e76-b9f3-dd4a4b98c8171a4769eff710", 
    "type" -> "output", "data" -> "\nWolfram Mathematica code", 
    "display" -> "markdown", "sign" -> "bedim-2c38d", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "78df3c38-ae0b-4921-b762-631de9ed2c95769eff710", 
    "type" -> "input", "data" -> "gameOfLife = {224, {2, {{2, 2, 2}, {2, 1, \
2}, {2, 2, 2}}}, {1, 1}};\nboard = RandomInteger[1, {40, \
40}];\n\nCreateFrontEndObject[MyFunction[board//Hold]]", 
    "display" -> "codemirror", "sign" -> "bedim-2c38d", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "19f8c827-15b9-4c0d-9a4b-f445e0bfad35710", "type" -> "output", 
    "data" -> "FrontEndExecutable[\"8b02562a-29d0-491f-9b38-30db5af0ac94\"]", 
    "display" -> "codemirror", "sign" -> "bedim-2c38d", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "aa43a734-9e0a-45d9-a32f-e4ef2db5ab0b769eff710", 
    "type" -> "input", "data" -> ".md\nPerform an update", 
    "display" -> "codemirror", "sign" -> "bedim-2c38d", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "2583976a-a6d5-481d-af80-c2e14faafa42769eff710", 
    "type" -> "output", "data" -> "\nPerform an update", 
    "display" -> "markdown", "sign" -> "bedim-2c38d", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "54b1b57e-0009-41c0-afc8-ef355973d6a61a4769eff710", 
    "type" -> "input", "data" -> "\nDo[\n  board = \
CellularAutomaton[gameOfLife, board, {{0, 1}}] // Last;\n  Pause[0.1];\n, \
{i,1,100}]", "display" -> "codemirror", "sign" -> "bedim-2c38d", 
    "props" -> <|"hidden" -> False|>|>}, "serializer" -> "jsfn3"|>
