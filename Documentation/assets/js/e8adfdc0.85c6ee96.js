"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[9120],{74668:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var t=r(17624),s=r(4552);const i={package:"wljs-graphics-d3",update:!1,source:"https://github.com/JerryI/wljs-graphics-d3/blob/dev/src/kernel.js"},c=void 0,a={id:"frontend/Reference/Graphics/FilledCurve",title:"FilledCurve",description:"where segments can be Line, BezierCurve.  For example",source:"@site/docs/frontend/Reference/Graphics/FilledCurve.md",sourceDirName:"frontend/Reference/Graphics",slug:"/frontend/Reference/Graphics/FilledCurve",permalink:"/frontend/Reference/Graphics/FilledCurve",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1725635478e3,frontMatter:{package:"wljs-graphics-d3",update:!1,source:"https://github.com/JerryI/wljs-graphics-d3/blob/dev/src/kernel.js"},sidebar:"tutorialSidebar",previous:{title:"EdgeForm",permalink:"/frontend/Reference/Graphics/EdgeForm"},next:{title:"GraphicsComplex",permalink:"/frontend/Reference/Graphics/GraphicsComplex"}},o={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",strong:"strong",...(0,s.M)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mathematica",children:"FilledCurve[{segments__}]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["where ",(0,t.jsx)(n.code,{children:"segments"})," can be ",(0,t.jsx)(n.a,{href:"/frontend/Reference/Graphics/Line",children:"Line"}),", ",(0,t.jsx)(n.a,{href:"/frontend/Reference/Graphics/BezierCurve",children:"BezierCurve"}),".  For example"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mathematica",children:"a = {{-1, 0}, {0, 1}, {1, 0}}; b = {{0, -(2/3)}, {-1, 0}};\nGraphics[FilledCurve[{BezierCurve[a], Line[b]}]]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["One can fill the shape defined by ",(0,t.jsx)(n.strong,{children:"components"})," using following pattern"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mathematica",children:"FilledCurve[{components__List}]\n"})}),"\n",(0,t.jsx)(n.p,{children:"For example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mathematica",children:"pts = {{0, 1}, {-1, -(1/2)}, {1, -(1/2)}};\nGraphics[FilledCurve[{{Line[2 pts]}, {Line[pts]}}]]\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"It uses even-odd rule for filling. The intersection will not be filled."})})]})}function p(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},4552:(e,n,r)=>{r.d(n,{I:()=>a,M:()=>c});var t=r(11504);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);