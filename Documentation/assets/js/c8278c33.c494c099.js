"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[7572],{36316:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var r=t(17624),o=t(4552);const s={env:["Wolfram Kernel"],source:"https://github.com/JerryI/wljs-editor/blob/dev/src/FrontSubmitKernel.wl",package:"wljs-editor",context:"Notebook`Editor`Kernel`FrontSubmitService`"},c=void 0,l={id:"frontend/Reference/Frontend IO/FrontFetchAsync",title:"FrontFetchAsync",description:"asynchronously evaluates (aka FrontSubmit) and fetches the resulting expression back to the Wolfram Kernel from the frontend (browser)",source:"@site/docs/frontend/Reference/Frontend IO/FrontFetchAsync.md",sourceDirName:"frontend/Reference/Frontend IO",slug:"/frontend/Reference/Frontend IO/FrontFetchAsync",permalink:"/frontend/Reference/Frontend IO/FrontFetchAsync",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1711835414,formattedLastUpdatedAt:"Mar 30, 2024",frontMatter:{env:["Wolfram Kernel"],source:"https://github.com/JerryI/wljs-editor/blob/dev/src/FrontSubmitKernel.wl",package:"wljs-editor",context:"Notebook`Editor`Kernel`FrontSubmitService`"},sidebar:"tutorialSidebar",previous:{title:"FrontFetch",permalink:"/frontend/Reference/Frontend IO/FrontFetch"},next:{title:"FrontSubmit",permalink:"/frontend/Reference/Frontend IO/FrontSubmit"}},i={},d=[{value:"Options",id:"options",level:2},{value:"<code>&quot;Window&quot;</code>",id:"window",level:3},{value:"<code>&quot;Format&quot;</code>",id:"format",level:3},{value:"Examples",id:"examples",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["asynchronously evaluates (aka ",(0,r.jsx)(n.a,{href:"/frontend/Reference/Frontend%20IO/FrontSubmit",children:"FrontSubmit"}),") and fetches the resulting expression back to the Wolfram Kernel from the frontend (browser)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:"FrontFetchAsync[expr_, opts___] _Promise\n"})}),"\n",(0,r.jsxs)(n.p,{children:["and returns ",(0,r.jsx)(n.a,{href:"/frontend/Reference/Misc/Promise",children:"Promise"})," object."]}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(n.h3,{id:"window",children:(0,r.jsx)(n.code,{children:'"Window"'})}),"\n",(0,r.jsxs)(n.p,{children:["specifies a window socket, to which an expression will be sent. Use ",(0,r.jsx)(n.a,{href:"/frontend/Reference/Frontend%20IO/CurrentWindow",children:"CurrentWindow"})," to fetch a window object from the evaluation context explicitly."]}),"\n",(0,r.jsx)(n.h3,{id:"format",children:(0,r.jsx)(n.code,{children:'"Format"'})}),"\n",(0,r.jsxs)(n.p,{children:["The default expression form used to import raw data acquired from the frontend. It effectively applies ",(0,r.jsx)(n.code,{children:"ImportString"})," on raw JSON data. The possible values"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"JSON"'})," (",(0,r.jsx)(n.em,{children:"the default"}),")"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'"ExpressionJSON"'})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"Raw"'})," bypasses and returns a string"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.p,{children:"To read the selected text from a cell and print it to another cell"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:'With[{win = CurrentWindow[], cell = ResultCell[]},\n  EventHandler[InputButton["Read selected text"], Function[Null, \n    \n      Then[FrontFetchAsync[FrontEditorSelected["Get"], "Window"->win], Function[result,\n      CellPrint[result \n        , "After"->cell];\n      ]\n    ]\n  ]]\n]\n'})}),"\n",(0,r.jsx)(n.p,{children:"or to read a clipboard of a user"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:'With[{win = CurrentWindow[], cell = ResultCell[]},\n  EventHandler[InputButton["Read clipboard"], Function[Null, \n    \n      Then[FrontFetchAsync[ReadClipboard[], "Window"->win], Function[result,\n      CellPrint[result \n        , "After"->cell];\n      ]\n    ]\n  ]]\n]\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>l,M:()=>c});var r=t(11504);const o={},s=r.createContext(o);function c(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);