"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[6064],{60776:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var n=r(17624),i=r(4552);const s={env:["WLJS"],context:"JerryI`Notebook`Graphics2D`",package:"wljs-graphics-d3",source:"https://github.com/JerryI/wljs-graphics-d3/blob/dev/src/kernel.js",update:!1},o=void 0,c={id:"frontend/Reference/Graphics/BezierCurve",title:"BezierCurve",description:"plots quadratic Bezier curve using every first point as a starting point and forth point as a destination. If there are more than 4 points provided, it will split them into multiple curves",source:"@site/docs/frontend/Reference/Graphics/BezierCurve.md",sourceDirName:"frontend/Reference/Graphics",slug:"/frontend/Reference/Graphics/BezierCurve",permalink:"/frontend/Reference/Graphics/BezierCurve",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1714762476,formattedLastUpdatedAt:"May 3, 2024",frontMatter:{env:["WLJS"],context:"JerryI`Notebook`Graphics2D`",package:"wljs-graphics-d3",source:"https://github.com/JerryI/wljs-graphics-d3/blob/dev/src/kernel.js",update:!1},sidebar:"tutorialSidebar",previous:{title:"Arrowheads",permalink:"/frontend/Reference/Graphics/Arrowheads"},next:{title:"Circle",permalink:"/frontend/Reference/Graphics/Circle"}},a={},p=[];function d(e){const t={code:"code",em:"em",p:"p",pre:"pre",...(0,i.M)(),...e.components},{Wl:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Wl",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-mathematica",children:"BezierCurve[{pts__List}]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["plots quadratic Bezier curve using every ",(0,n.jsx)(t.em,{children:"first point"})," as a starting point and ",(0,n.jsx)(t.em,{children:"forth point"})," as a destination. If there are more than 4 points provided, it will split them into multiple curves"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-mathematica",children:"pts = {{0, 0}, {1, 1}, {2, -1}, {3, 0}, {5, 2}, {6, -1}, {7, 3}};\nGraphics[{BezierCurve[pts], Green, Line[pts], Red, Point[pts]}]\n"})}),"\n",(0,n.jsx)(r,{children:"Graphics[{BezierCurve[{{0, 0}, {1, 1}, {2, -1}, {3, 0}, {5, 2}, {6, -1}, {7, 3}}], Green, Line[{{0, 0}, {1, 1}, {2, -1}, {3, 0}, {5, 2}, {6, -1}, {7, 3}}], Red, Point[{{0, 0}, {1, 1}, {2, -1}, {3, 0}, {5, 2}, {6, -1}, {7, 3}}]}]"})]})}function l(e={}){const{wrapper:t}={...(0,i.M)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},4552:(e,t,r)=>{r.d(t,{I:()=>c,M:()=>o});var n=r(11504);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);