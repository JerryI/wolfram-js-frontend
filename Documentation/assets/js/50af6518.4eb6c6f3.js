"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[4736],{15752:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var t=a(17624),s=a(4552);const i={authors:"jerryi",tags:["AI"],enableComments:!0},l="Converting JSON crystal data to Graphics using AI Assistant",r={permalink:"/blog/2024/05/13/json-llm",source:"@site/blog/2024-05-13-json-llm.md",title:"Converting JSON crystal data to Graphics using AI Assistant",description:"Working in condensed matter physics, I (JerryI) often need to represent crystal structures based on their CIF, JSON, or other formats. Sometimes, it is quite tricky to parse these data files since you also need to determine the given symmetry operation when constructing a unit cell. Here, we will do it using AI Copilot \ud83e\udd16",date:"2024-05-13T00:00:00.000Z",tags:[{label:"AI",permalink:"/blog/tags/ai"}],readingTime:3.23,hasTruncateMarker:!0,authors:[{name:"Kirill Vasin",title:"Maintainer",url:"https://github.com/JerryI",imageURL:"https://avatars.githubusercontent.com/u/4111822?s=48&v=4",key:"jerryi"}],frontMatter:{authors:"jerryi",tags:["AI"],enableComments:!0},unlisted:!1,nextItem:{title:"Bad Apple, but it\u2019s Wolfram Language Plot",permalink:"/blog/2024/05/01/badapple"}},o={authorsImageUrls:[void 0]},c=[{value:"Uranium",id:"uranium",level:2}];function d(e){const n={a:"a",annotation:"annotation",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",math:"math",mi:"mi",mn:"mn",mrow:"mrow",msub:"msub",p:"p",pre:"pre",semantics:"semantics",span:"span",...(0,s.M)(),...e.components},{Wl:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Wl",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Working in condensed matter physics, I (JerryI) often need to represent crystal structures based on their CIF, JSON, or other formats. Sometimes, it is quite tricky to parse these data files since you also need to determine the given symmetry operation when constructing a unit cell. Here, we will do it using AI Copilot \ud83e\udd16"}),"\n",(0,t.jsx)(n.h2,{id:"uranium",children:"Uranium"}),"\n",(0,t.jsxs)(n.p,{children:["When I was measuring the spectrum of ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"U"}),(0,t.jsxs)(n.msub,{children:[(0,t.jsx)(n.mi,{children:"O"}),(0,t.jsx)(n.mn,{children:"2"})]})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"U O_2"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.10903em"},children:"U"}),(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(n.span,{className:"msupsub",children:(0,t.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(n.span,{className:"vlist-r",children:[(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.3011em"},children:(0,t.jsxs)(n.span,{style:{top:"-2.55em",marginLeft:"-0.0278em",marginRight:"0.05em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"2"})})]})}),(0,t.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(n.span,{className:"vlist-r",children:(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.15em"},children:(0,t.jsx)(n.span,{})})})]})})]})]})})]})," at the Nijmegen High-Magnetic-Field Lab during the morning shift, I had to make a short summary report and needed a nice plot of a unit cell."]}),"\n",(0,t.jsxs)(n.p,{children:["GPT models can actually work with JSON data or Associations quite well. The first step is to get a CIF or JSON file on the crystal structure. This can be done using the ",(0,t.jsx)(n.a,{href:"https://next-gen.materialsproject.org/materials/mp-1597",children:"Materials Project database"}),". In the summary section, one can export a single JSON file and then import it into our notebook."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mathematica",children:'Import["UO2.json", "RawJSON"]\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mathematica",children:'<|"@module"->"pymatgen.core.structure","@class"->"Structure","charge"->0,"lattice"-><|"matrix"->{{5.45401004`,0.`,3.339617969001764`*^-16},{8.770717076887777`*^-16,5.45401004`,3.339617969001764`*^-16},{0.`,0.`,5.45401004`}},"pbc"->{True,True,True},"a"->5.45401004`,"b"->5.45401004`,"c"->5.45401004`,"alpha"->90.`,"beta"->90.`,"gamma"->90.`,"volume"->162.23621261866322`|>,"properties"-><||>,"sites"->{<|"species"->{<|"element"->"U","oxidation_state"->4,"spin"->Null,"occu"->1|>},"abc"->{0.5`,0.`,0.`},"xyz"->{2.72700502`,0.`,1.669808984500882`*^-16},"properties"-><||>,"label"->"U4+"|>,<|"species"->{<|"element"->"U","oxidation_state"->4,"spin"->Null,"occu"->1|>},"abc"->{0.5`,0.5`,0.5`},"xyz"->{2.7270050200000004`,2.72700502`,2.7270050200000004`},"properties"-><||>,"label"->"U4+"|>,<|"species"->{<|"element"->"U","oxidation_state"->4,"spin"->Null,"occu"->1|>},"abc"->{0.`,0.`,0.5`},"xyz"->{0.`,0.`,2.72700502`},"properties"-><||>,"label"->"U4+"|>,<|"species"->{<|"element"->"U","oxidation_state"->4,"spin"->Null,"occu"->1|>},"abc"->{0.`,0.5`,0.`},"xyz"->{4.3853585384438886`*^-16,2.72700502`,1.669808984500882`*^-16},"properties"-><||>,"label"->"U4+"|>,<|"species"->{<|"element"->"O","oxidation_state"->-2,"spin"->Null,"occu"->1|>},"abc"->{0.25`,0.75`,0.75`},"xyz"->{1.3635025100000007`,4.09050753`,4.09050753`},"properties"-><||>,"label"->"O2-"|>,<|"species"->{<|"element"->"O","oxidation_state"->-2,"spin"->Null,"occu"->1|>},"abc"->{0.25`,0.25`,0.75`},"xyz"->{1.3635025100000002`,1.36350251`,4.09050753`},"properties"-><||>,"label"->"O2-"|>,<|"species"->{<|"element"->"O","oxidation_state"->-2,"spin"->Null,"occu"->1|>},"abc"->{0.25`,0.25`,0.25`},"xyz"->{1.3635025100000002`,1.36350251`,1.3635025100000002`},"properties"-><||>,"label"->"O2-"|>,<|"species"->{<|"element"->"O","oxidation_state"->-2,"spin"->Null,"occu"->1|>},"abc"->{0.25`,0.75`,0.25`},"xyz"->{1.3635025100000007`,4.09050753`,1.3635025100000004`},"properties"-><||>,"label"->"O2-"|>,<|"species"->{<|"element"->"O","oxidation_state"->-2,"spin"->Null,"occu"->1|>},"abc"->{0.75`,0.75`,0.25`},"xyz"->{4.090507530000001`,4.09050753`,1.3635025100000004`},"properties"-><||>,"label"->"O2-"|>,<|"species"->{<|"element"->"O","oxidation_state"->-2,"spin"->Null,"occu"->1|>},"abc"->{0.75`,0.25`,0.25`},"xyz"->{4.09050753`,1.36350251`,1.3635025100000004`},"properties"-><||>,"label"->"O2-"|>,<|"species"->{<|"element"->"O","oxidation_state"->-2,"spin"->Null,"occu"->1|>},"abc"->{0.75`,0.25`,0.75`},"xyz"->{4.09050753`,1.36350251`,4.09050753`},"properties"-><||>,"label"->"O2-"|>,<|"species"->{<|"element"->"O","oxidation_state"->-2,"spin"->Null,"occu"->1|>},"abc"->{0.75`,0.75`,0.75`},"xyz"->{4.090507530000001`,4.09050753`,4.090507530000001`},"properties"-><||>,"label"->"O2-"|>}|>\n'})}),"\n",(0,t.jsx)(n.p,{children:"It looks quite ugly. Let's ask our AI assistant to convert it to a 3D plot using following prompt"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Ctrl/Cmd + P"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"and type"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"read crystal data in focused cell and draw a unit cell using 3D graphics and representing ions as spheres with different colors"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The generated cell is following (using ",(0,t.jsx)(n.code,{children:"GPT-4o"})," model Jun 2024)"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mathematica",children:"Module[{a = 5.45401004, unitCell, filledUnitCell},\n  unitCell = {\n    {Yellow, Sphere[{2.72700502, 0., 0.}, 0.5]},\n    {Yellow, Sphere[{2.72700502, 2.72700502, 2.72700502}, 0.5]},\n    {Yellow, Sphere[{0., 0., 2.72700502}, 0.5]},\n    {Yellow, Sphere[{0., 2.72700502, 0.}, 0.5]},\n    {Red, Sphere[{1.36350251, 4.09050753, 4.09050753}, 0.3]},\n    {Red, Sphere[{1.36350251, 1.36350251, 4.09050753}, 0.3]},\n    {Red, Sphere[{1.36350251, 1.36350251, 1.36350251}, 0.3]},\n    {Red, Sphere[{4.09050753, 1.36350251, 4.09050753}, 0.3]},\n    {Red, Sphere[{4.09050753, 4.09050753, 4.09050753}, 0.3]}\n  };\n\n  filledUnitCell = Flatten[Table[\n    Translate[unitCell, {i, j, k} a],\n    {i, 0, 1}, {j, 0, 1}, {k, 0, 1}\n  ], 3];\n\n  Graphics3D[{filledUnitCell}]\n]\n"})}),"\n",(0,t.jsx)(n.p,{children:"One can also ask it to add borders"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"edit your cell and add borders of the unit cell using black lines"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mathematica",children:"Module[{a = 5.45401004, unitCell, filledUnitCell, borders},\n  unitCell = {\n    {Yellow, Sphere[{2.72700502, 0., 0.}, 0.5]},\n    {Yellow, Sphere[{2.72700502, 2.72700502, 2.72700502}, 0.5]},\n    {Yellow, Sphere[{0., 0., 2.72700502}, 0.5]},\n    {Yellow, Sphere[{0., 2.72700502, 0.}, 0.5]},\n    {Red, Sphere[{1.36350251, 4.09050753, 4.09050753}, 0.3]},\n    {Red, Sphere[{1.36350251, 1.36350251, 4.09050753}, 0.3]},\n    {Red, Sphere[{1.36350251, 1.36350251, 1.36350251}, 0.3]},\n    {Red, Sphere[{4.09050753, 1.36350251, 4.09050753}, 0.3]},\n    {Red, Sphere[{4.09050753, 4.09050753, 4.09050753}, 0.3]}\n  };\n\n  filledUnitCell = Flatten[Table[\n    Translate[unitCell, {i, j, k} a],\n    {i, 0, 1}, {j, 0, 1}, {k, 0, 1}\n  ], 3];\n\n  borders = {\n    Line[{{0, 0, 0}, {a, 0, 0}}],\n    Line[{{0, 0, 0}, {0, a, 0}}],\n    Line[{{0, 0, 0}, {0, 0, a}}],\n    Line[{{a, a, 0}, {0, a, 0}}],\n    Line[{{a, a, 0}, {a, 0, 0}}],\n    Line[{{a, 0, a}, {a, 0, 0}}],\n    Line[{{a, 0, a}, {0, 0, a}}],\n    Line[{{0, a, a}, {0, 0, a}}],\n    Line[{{0, a, a}, {0, a, 0}}],\n    Line[{{a, a, a}, {0, a, a}}],\n    Line[{{a, a, a}, {a, 0, a}}],\n    Line[{{a, a, a}, {a, a, 0}}]\n  };\n\n  Graphics3D[{filledUnitCell, Black, borders}]\n]\n"})}),"\n",(0,t.jsx)(a,{children:"\nModule[{a = 5.45401004, unitCell, filledUnitCell, borders},\n  unitCell = {\n    {Yellow, Sphere[{2.72700502, 0., 0.}, 0.5]},\n    {Yellow, Sphere[{2.72700502, 2.72700502, 2.72700502}, 0.5]},\n    {Yellow, Sphere[{0., 0., 2.72700502}, 0.5]},\n    {Yellow, Sphere[{0., 2.72700502, 0.}, 0.5]},\n    {Red, Sphere[{1.36350251, 4.09050753, 4.09050753}, 0.3]},\n    {Red, Sphere[{1.36350251, 1.36350251, 4.09050753}, 0.3]},\n    {Red, Sphere[{1.36350251, 1.36350251, 1.36350251}, 0.3]},\n    {Red, Sphere[{4.09050753, 1.36350251, 4.09050753}, 0.3]},\n    {Red, Sphere[{4.09050753, 4.09050753, 4.09050753}, 0.3]}\n  };\n\n  filledUnitCell = Flatten[Table[\n    Translate[unitCell, {i, j, k} a],\n    {i, 0, 1}, {j, 0, 1}, {k, 0, 1}\n  ], 3];\n\n  borders = {\n    Line[{{0, 0, 0}, {a, 0, 0}}],\n    Line[{{0, 0, 0}, {0, a, 0}}],\n    Line[{{0, 0, 0}, {0, 0, a}}],\n    Line[{{a, a, 0}, {0, a, 0}}],\n    Line[{{a, a, 0}, {a, 0, 0}}],\n    Line[{{a, 0, a}, {a, 0, 0}}],\n    Line[{{a, 0, a}, {0, 0, a}}],\n    Line[{{0, a, a}, {0, 0, a}}],\n    Line[{{0, a, a}, {0, a, 0}}],\n    Line[{{a, a, a}, {0, a, a}}],\n    Line[{{a, a, a}, {a, 0, a}}],\n    Line[{{a, a, a}, {a, a, 0}}]\n  };\n\n  Graphics3D[{filledUnitCell, Black, borders}]\n]\n"}),"\n",(0,t.jsx)(n.p,{children:"This is amazing how modern LLM can read and parse any kind of data and convert them to the desired formats \ud83e\udd84"})]})}function p(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},4552:(e,n,a)=>{a.d(n,{I:()=>r,M:()=>l});var t=a(11504);const s={},i=t.createContext(s);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);