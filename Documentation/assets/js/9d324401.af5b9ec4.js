"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[9376],{50888:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=t(17624),a=t(4552);const r={sidebar_position:3},s="Animated Graphics",l={id:"frontend/Advanced/Slides/Widgets and components/animations",title:"Animated Graphics",description:"Interactive plots",source:"@site/docs/frontend/Advanced/Slides/Widgets and components/animations.md",sourceDirName:"frontend/Advanced/Slides/Widgets and components",slug:"/frontend/Advanced/Slides/Widgets and components/animations",permalink:"/frontend/Advanced/Slides/Widgets and components/animations",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1728808485e3,sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Widgets",permalink:"/frontend/Advanced/Slides/Widgets and components/Widgets"},next:{title:"Code highlighting",permalink:"/frontend/Advanced/Slides/Widgets and components/embed-wl"}},o={},d=[{value:"Interactive plots",id:"interactive-plots",level:2},{value:"Animation",id:"animation",level:2},{value:"Example 1 \ud83d\uddd2\ufe0f Dynamic plot, local event routing",id:"example-1-\ufe0f-dynamic-plot-local-event-routing",level:3},{value:"Example 2 \ud83e\uddec Fitting animation",id:"example-2--fitting-animation",level:3},{value:"Alternative version",id:"alternative-version",level:4},{value:"Example 3 \ud83d\udd0e Zoom",id:"example-3--zoom",level:3},{value:"Example 4 \ud83d\udd04 Simple stat counter",id:"example-4--simple-stat-counter",level:3},{value:"Append graphics to a slide",id:"append-graphics-to-a-slide",level:2},{value:"Buttons, sliders etc",id:"buttons-sliders-etc",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.M)(),...e.components},{CodeMirror:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("CodeMirror",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"animated-graphics",children:"Animated Graphics"}),"\n",(0,i.jsx)(n.h2,{id:"interactive-plots",children:"Interactive plots"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"By the default"}),", everything you plot using ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Plotting%20Functions/Plot",children:"Plot"})," or ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Graphics/",children:"Graphics"})," or ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Graphics3D/",children:"Graphics3D"})," can be dragged or panned or rotated. This behavior is controlled by the options and can be switched off if necessary. For example"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"Figure = Plot[{x, Sin[x], Sin[x]^2}, {x,0,2Pi}];\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:".slide\n\n# Simple plot\n\n<Figure/>\n\nTry to drag it using you mouse\n"})}),"\n",(0,i.jsx)(n.p,{children:"The result will look like following"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(98968).c+"",width:"600",height:"401"})}),"\n",(0,i.jsx)(n.h2,{id:"animation",children:"Animation"}),"\n",(0,i.jsx)(n.p,{children:"In general all visuals can be done in the same way as in regular cells, since it uses the same components."}),"\n",(0,i.jsxs)(n.p,{children:["When a slide becomes visible or a fragment got revealed (see ",(0,i.jsx)(n.a,{href:"/frontend/Advanced/Slides/#Transitions%20and%20fragments",children:"Transitions and fragments"}),") it fires an event, where all information is encoded. To enable this - use ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Slides/SlideEventListener",children:"SlideEventListener"})]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Put ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Slides/SlideEventListener",children:"SlideEventListener"})," anywhere on the slide to hook up WL Kernel to all events associated with it"]})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Keep the dynamic variables scoped using ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Misc/Language#%60LeakyModule%60",children:(0,i.jsx)(n.code,{children:"LeakyModule"})})," and use explicit event routing like in ",(0,i.jsx)(n.a,{href:"/frontend/Advanced/Events%20system/routing",children:"routing"}),". Later it will allow you to reuse your components for other slides much easier."]})}),"\n",(0,i.jsx)(n.h3,{id:"example-1-\ufe0f-dynamic-plot-local-event-routing",children:"Example 1 \ud83d\uddd2\ufe0f Dynamic plot, local event routing"}),"\n",(0,i.jsxs)(n.p,{children:["Here is an example of a widget, which plots 2D dataset and updates the content on the next click using ",(0,i.jsx)(n.a,{href:"/frontend/Advanced/Slides/Fragments",children:"Fragments"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'.wlx\n\nPlotWidget[OptionsPattern[]] := Module[{\n  data = OptionValue["DataA"]\n},\n\n  With[{\n    Canvas = Graphics[{\n      ColorData[97][1], Line[data // Offload]\n    }, Axes->True, ImageSize->500, TransitionDuration->1000],\n\n    uid = CreateUUID[],\n\n    dataA = OptionValue["DataA"],\n    dataB = OptionValue["DataB"]\n  },\n\n    EventHandler[uid, {\n      "fragment-1" -> Function[Null,\n        data = dataB\n      ],\n\n      ("Left" | "Destroy" | "Slide") -> Function[Null,\n        data = dataA\n      ]\n    }];\n\n    <div class="flex flex-col gap-y-2">\n      <Canvas/>\n      <div class="fragment">Dummy text</div>\n      <SlideEventListener Id={uid}/>\n    </div>\n  ]\n]\n\nOptions[PlotWidget] = {"DataA"->{}, "DataB"->{}};\n'})}),"\n",(0,i.jsx)(n.p,{children:"Now generate dummy dataset"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"{dataA, dataB} = {\n  Table[{x, Sin[x]}, {x,0,5Pi,0.1}],\n  Table[{x, Tan[x]}, {x,0,5Pi,0.1}]\n};\n"})}),"\n",(0,i.jsx)(n.p,{children:"And place it anywhere on a slide"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:".slide\n\n# Title\n\n<PlotWidget DataA={dataA} DataB={dataB}/>\n\n---\n\nGo back?\n"})}),"\n",(0,i.jsx)(n.p,{children:"The result"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(15512).c+"",width:"800",height:"456"})}),"\n",(0,i.jsx)(n.h3,{id:"example-2--fitting-animation",children:"Example 2 \ud83e\uddec Fitting animation"}),"\n",(0,i.jsxs)(n.p,{children:["Complex animations are better to prototype firstly inside a normal cell or ",(0,i.jsx)(n.a,{href:"/frontend/Cell%20types/WLX",children:"WLX"}),". Let us make one like that"]}),"\n",(0,i.jsx)(r,{children:'LeakyModule[{\n  buffer = {},\n  [Omega] = 7.,\n  text = "",\n  recalc,\n  target,\n  trigger = 0,\n  ev = CreateUUID[],\n  blocked = True,\n  p = 0.01\n},\n\n  blocked = False;\n\n  recalc[p_] := (\n    text = StringJoin["(*SbB[*)Subscript[\u03c9(*|*),(*|*)0](*]SbB*)  = ", Round[p [Omega], 0.01] // ToString, "(*SpB[*)Power[s(*|*),(*|*)-1](*]SpB*)"];\n    buffer = {#, Sin[p [Omega] (*SqB[*)Sqrt[#](*]SqB*)]} &/@ Range[0., 25., 0.1];\n  );\n\n  target = {#, Sin[[Omega] (*SqB[*)Sqrt[#](*]SqB*)]} &/@ Range[0., 25., 0.1];\n\n  recalc[0.01];\n  \n  EventHandler[ev, Function[Null,\n    If[blocked, Return[]];\n    trigger += 1;\n    If[Mod[trigger, 2] == 0,\n      recalc[p];\n      p = p + 0.05 (1.0033 - p);\n      If[Abs[p - 1.0] < (*SpB[*)Power[10(*|*),(*|*)-3](*]SpB*), blocked = True; Print["Stopped"]];\n    ];\n  ]];\n\n  {\n    {\n      EditorView["y(t) =  sin((*SbB[*)Subscript[\u03c9(*|*),(*|*)0](*]SbB*)(*SqB[*)Sqrt[t](*]SqB*))  "],\n\n      HTMLView["   "],\n      \n      EditorView[text // Offload]\n      \n    } // Column,\n    \n    Graphics[{\n      Blue, Line[target], Red, Line[buffer // Offload],\n      AnimationFrameListener[trigger // Offload, "Event"->ev]\n    }, Axes->True, Frame->True]\n  } // Row\n]'}),"\n",(0,i.jsx)(n.p,{children:"And now we have the following"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(49096).c+"",width:"588",height:"340"})}),"\n",(0,i.jsx)(n.p,{children:"The next step will be to assign triggers:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"enter the slide : start animation"}),"\n",(0,i.jsx)(n.li,{children:"left the slide : stop and reset"}),"\n",(0,i.jsx)(n.li,{children:"close presentation : stop and reset"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["and then turning it into widget using ",(0,i.jsx)(n.a,{href:"/frontend/Reference/GUI/EditorView",children:"EditorView"})," (since output forms of ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Decorations/Row",children:"Row"})," and ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Decorations/Column",children:"Column"})," are not defined in slides environment)"]}),"\n",(0,i.jsx)(r,{children:'Widget[Rule["Event", id_]] := LeakyModule[{\n  buffer = {},\n  [Omega] = 7.,\n  text = "",\n  recalc,\n  target,\n  trigger = 0,\n  ev = CreateUUID[],\n  blocked = True,\n  p = 0.01\n},\n\n  EventHandler[id, {\n    ("Left" | "Destroy") -> Function[Null,\n        blocked = True;\n    ],\n\n    "Slide" -> Function[Null,\n        SetTimeout[\n          blocked = False;\n          EventFire[ev, True];\n        , 500];\n    ]\n  }];\n  \n\n  recalc[p_] := (\n    text = StringJoin["(*SbB[*)Subscript[\u03c9(*|*),(*|*)0](*]SbB*)  = ", Round[p [Omega], 0.01] // ToString, "(*SpB[*)Power[s(*|*),(*|*)-1](*]SpB*)"];\n    buffer = {#, Sin[p [Omega] (*SqB[*)Sqrt[#](*]SqB*)]} &/@ Range[0., 25., 0.1];\n  );\n\n  target = {#, Sin[[Omega] (*SqB[*)Sqrt[#](*]SqB*)]} &/@ Range[0., 25., 0.1];\n\n  recalc[0.01];\n  \n  EventHandler[ev, Function[Null,\n    If[blocked, Return[]];\n    trigger += 1;\n    If[Mod[trigger, 2] == 0,\n      recalc[p];\n      p = p + 0.05 (1.0033 - p);\n      If[Abs[p - 1.0] < (*SpB[*)Power[10(*|*),(*|*)-3](*]SpB*), blocked = True; Print["Stopped"]];\n    ];\n  ]];\n\n  ToString[{\n    {\n      EditorView["y(t) =  sin((*SbB[*)Subscript[\u03c9(*|*),(*|*)0](*]SbB*)(*SqB[*)Sqrt[t](*]SqB*))  "],\n\n      HTMLView["   "],\n      \n      EditorView[text // Offload]\n      \n    } // Column,\n    \n    Graphics[{\n      Blue, Line[target], Red, Line[buffer // Offload],\n      AnimationFrameListener[trigger // Offload, "Event"->ev]\n    }, Axes->True, Frame->True, PlotRange->{{0,25}, {-1,1}}]\n  } // Row, StandardForm] // EditorView \n]'}),"\n",(0,i.jsxs)(n.p,{children:["Now place it on a slide and hook up it to ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Slides/SlideEventListener",children:"SlideEventListener"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-md",children:'.slide\n\n# Title\n\n<Widget Event={"slide-ev-name"}/>\n\n<SlideEventListener Id={"slide-ev-name"}/>\n'})}),"\n",(0,i.jsx)(n.h4,{id:"alternative-version",children:"Alternative version"}),"\n",(0,i.jsx)(n.p,{children:"using pure WLX one can stylize more things and use local event routing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'.wlx\n\nWLXWidget := LeakyModule[{\n  buffer = {},\n  Omega = 7.,\n  text = "",\n  recalc,\n  target,\n  trigger = 0,\n  ev = CreateUUID[],\n  id = CreateUUID[],\n  blocked = True,\n  p = 0.01,\n  EditorPart,\n  CanvasPart\n},\n\n  EventHandler[id, {\n    ("Left" | "Destroy") -> Function[Null,\n        blocked = True;\n    ],\n\n    "Slide" -> Function[Null,\n        SetTimeout[\n          blocked = False;\n          EventFire[ev, True];\n        , 500];\n    ]\n  }];\n  \n\n  recalc[p_] := (\n    text = StringJoin["(*SbB[*)Subscript[\u03c9(*|*),(*|*)0](*]SbB*)  = ", Round[p Omega, 0.01] // ToString, "(*SpB[*)Power[s(*|*),(*|*)-1](*]SpB*)"];\n    buffer = {#, Sin[p Omega (*SqB[*)Sqrt[#](*]SqB*)]} &/@ Range[0., 25., 0.1];\n  );\n\n  target = {#, Sin[Omega (*SqB[*)Sqrt[#](*]SqB*)]} &/@ Range[0., 25., 0.1];\n\n  recalc[0.01];\n  \n  EventHandler[ev, Function[Null,\n    If[blocked, Return[]];\n    trigger += 1;\n    If[Mod[trigger, 2] == 0,\n      recalc[p];\n      p = p + 0.05 (1.0033 - p);\n      If[Abs[p - 1.0] < (*SpB[*)Power[10(*|*),(*|*)-3](*]SpB*), blocked = True; Print["Stopped"]];\n    ];\n  ]];\n\n  CanvasPart = Graphics[{\n      Blue, Line[target], Red, Line[buffer // Offload],\n      AnimationFrameListener[trigger // Offload, "Event"->ev]\n    }, Axes->True, Frame->True, PlotRange->{{0,25}, {-1,1}}];\n\n  EditorPart[Rule["P", 1]] = EditorView["y(t) =  sin((*SbB[*)Subscript[\u03c9(*|*),(*|*)0](*]SbB*)(*SqB[*)Sqrt[t](*]SqB*))  "] ;\n\n  EditorPart[Rule["P", 2]] = EditorView[text // Offload] ;    \n  \n        \n  <div class="flex flex-row" >\n    <div class="flex flex-col text-left" style="padding: 2rem 0">\n      <EditorPart P={1}/>\n      <EditorPart P={2}/>\n    </div>\n    <CanvasPart/>\n    <div class="fragment"></div>\n    <SlideEventListener Id={id}/>\n  </div>\n]\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-md",children:".slide\n\n# Title\n\n<WLXWidget/>\n\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-3--zoom",children:"Example 3 \ud83d\udd0e Zoom"}),"\n",(0,i.jsx)(n.p,{children:"Zoom in to the graph"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 1"',children:'Plt[OptionsPattern[]] := With[{ev = OptionValue["Zoom"], win = CurrentWindow[]},\n  EventHandler[ev, {\n    "Slide" -> Function[Null,\n      FrontSubmit[ZoomAt[1], MetaMarker["marked"], "Window"->win]\n    ],\n\n    "fragment-1" -> Function[Null,\n      FrontSubmit[ZoomAt[2], MetaMarker["marked"], "Window"->win]\n    ]\n  }];\n  \n  Plot[Sinc[x], {x,-10,10}, Epilog->{MetaMarker["marked"]}]\n]\n\nOptions[Plt] = {"Zoom"->""}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:'title="cell 2"',children:'.slide\n\n# Zoom in\n\n---\n\n<Plt Zoom={"vslide"}/>\n\nZoom \x3c!-- .element: class="fragment fade-in" data-fragment-index="1" --\x3e \n\n<SlideEventListener Id={"vslide"}/>\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(54966).c+"",width:"800",height:"378"})}),"\n",(0,i.jsx)(n.h3,{id:"example-4--simple-stat-counter",children:"Example 4 \ud83d\udd04 Simple stat counter"}),"\n",(0,i.jsx)(n.p,{children:"What if you need to add some dynamic stats to your presentation? One can make an independent component for that"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'.wlx\n\nStat[Text_, OptionsPattern[]] := LeakyModule[{\n  cnt = 0, \n  task\n}, With[{\n  ev = CreateUUID[],\n  HTMLCounter = HTMLView[cnt // Offload],\n  max = OptionValue["Count"]\n},\n  EventHandler[ev, {\n    "Destroy" -> Function[Null,\n      EventRemove[ev]; \n      If[task["TaskStatus"] === "Running", TaskRemove[task]];\n      ClearAll[task];\n    ],\n\n    "Left" -> Function[Null,\n      cnt = 0;\n    ],\n\n    "Slide" -> Function[Null,\n      If[task["TaskStatus"] === "Running", TaskRemove[task]];\n      task = SetInterval[\n        If[cnt < max, cnt = cnt + 1,\n          TaskRemove[task];\n        ];\n      , 15];\n    ]\n  }];\n\n  <div class="text-center text-gray-600 m-4 p-4 rounded bg-gray-100 flex flex-col">\n    <HTMLCounter/>\n    <span class="text-md"><Text/></span>\n    <SlideEventListener Id={ev}/>\n  </div>\n] ]\n\nOptions[Stat] = {"Count"->1};\n'})}),"\n",(0,i.jsx)(n.p,{children:"You can put them on any slide (as many as you want)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'.slide\n\n# Dynamic stats\nHere is our data\n\n<div class="justify-center flex flex-row ml-auto mr-auto">\n\n<Stat Count={128}>Label 1</Stat>\n<Stat Count={256}>Label 2</Stat>\n\n</div>\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"Here is the result"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(49238).c+"",width:"800",height:"313"})}),"\n",(0,i.jsx)(n.h2,{id:"append-graphics-to-a-slide",children:"Append graphics to a slide"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/frontend/Reference/Frontend%20IO/MetaMarker",children:"MetaMarker"})," can work well in a case if one wants to append some data on the existing graphics canvas"]}),"\n",(0,i.jsx)(n.h2,{id:"buttons-sliders-etc",children:"Buttons, sliders etc"}),"\n",(0,i.jsxs)(n.p,{children:["See examples ",(0,i.jsx)(n.a,{href:"/frontend/Reference/GUI/InputRange",children:"InputRange"})]})]})}function p(e={}){const{wrapper:n}={...(0,a.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},54966:(e,n,t)=>{t.d(n,{c:()=>i});const i=t.p+"assets/images/ZoomIn video to gif-ae93b6a3aa56851f320253d991ed9a81.gif"},15512:(e,n,t)=>{t.d(n,{c:()=>i});const i=t.p+"assets/images/aniamtion_dummy-ezgif.com-optimize-3bbed0df2b3ce2440b75744649cc99d3.gif"},49238:(e,n,t)=>{t.d(n,{c:()=>i});const i=t.p+"assets/images/dynamicstats-ezgif.com-video-to-gif-converter-13d823691347f3aaccfa0df001852a7e.gif"},98968:(e,n,t)=>{t.d(n,{c:()=>i});const i=t.p+"assets/images/ezgif.com-optimize 1-15bea37613ccb30c3df8c4bfa4db1f5a.gif"},49096:(e,n,t)=>{t.d(n,{c:()=>i});const i=t.p+"assets/images/nice0animation-ezgif.com-video-to-gif-converter-79bc0c7f8a4ee716eba6da5840c45688.gif"},4552:(e,n,t)=>{t.d(n,{I:()=>l,M:()=>s});var i=t(11504);const a={},r=i.createContext(a);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);