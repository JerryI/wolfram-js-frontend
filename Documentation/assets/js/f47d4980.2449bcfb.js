"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[8512],{58660:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var o=t(17624),r=t(4552);const s={},a="Routing",i={id:"frontend/Advanced/Events system/routing",title:"Routing",description:"Remember the number 1 rule: 1 pattern of an event object = 1 handler",source:"@site/docs/frontend/Advanced/Events system/routing.md",sourceDirName:"frontend/Advanced/Events system",slug:"/frontend/Advanced/Events system/routing",permalink:"/frontend/Advanced/Events system/routing",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1714762476e3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Promises",permalink:"/frontend/Advanced/Events system/promises"},next:{title:"Editor manipulation",permalink:"/frontend/Advanced/Frontend interpretation/Editor manipulation"}},l={},d=[];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,r.M)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"routing",children:"Routing"}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsxs)(n.p,{children:["Remember the number 1 rule: ",(0,o.jsx)(n.strong,{children:"1 pattern of an event object"})," = ",(0,o.jsx)(n.strong,{children:"1 handler"})]}),(0,o.jsxs)(n.p,{children:["To assign more, you need to clone (",(0,o.jsx)(n.a,{href:"/frontend/Reference/Misc/Events#%60EventClone%60",children:(0,o.jsx)(n.code,{children:"EventClone"})}),") the original object or use other pattern or topic."]})]}),"\n",(0,o.jsx)(n.p,{children:"Since the notebook is usually a playground, you need to have an opportunity to undo actions, when you reevaluate the cell. Therefore there is concept of explicit routing of one event to some other handlers."}),"\n",(0,o.jsx)(n.p,{children:"For example you have a generator of events (does not necessary has to be a button)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-mathematica",children:'generator[uid_String] := With[{btn = InputButton["Click"]},\n\t(* we use input button only for demonstration purposes *)\n\t(* one can fire any EventObject manually using EventFire[] *)\n\n\tEventHandler[btn, Function[Null,\n\t\tEventFire[uid, "some data"];\n\t]];\n\t\n\tbtn\n]\n'})}),"\n",(0,o.jsxs)(n.p,{children:["here we used the representation of events object as a string ",(0,o.jsx)(n.code,{children:"uid"})," (it is also valid) and fire it using a button (which also returns ",(0,o.jsx)(n.a,{href:"/frontend/Reference/Misc/Events#%60EventObject%60",children:(0,o.jsx)(n.code,{children:"EventObject"})}),")."]}),"\n",(0,o.jsx)(n.p,{children:"Now we need an arbitrary handler"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-mathematica",children:'handler[uid_String, func_:Print] := With[{ev = EventClone[uid]},\n\t(* clean up, if the cell has been destroyed *)\n\tEventHandler[ResultCell[], {"Destroy" -> Function[Null, Delete[ev]]}];\n\n\t(* assign Print for instance *)\n\tEventHandler[ev, func];\n]\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["You do not need to clone ",(0,o.jsx)(n.a,{href:"/frontend/Reference/Cells%20and%20Notebook/EvaluationCell",children:"EvaluationCell"})," or ",(0,o.jsx)(n.a,{href:"/frontend/Reference/Cells%20and%20Notebook/ResultCell",children:"ResultCell"})," to assign many handlers to it. it is cloned automatically once appeared in ",(0,o.jsx)(n.a,{href:"/frontend/Reference/Misc/Events#%60EventHandler%60",children:(0,o.jsx)(n.code,{children:"EventHandler"})})]})}),"\n",(0,o.jsxs)(n.p,{children:["The cool thing, that we can have many of those ",(0,o.jsx)(n.code,{children:"handler"}),"s attached to the same event, since it clones it every-time and removes handler function, when you reevaluate the cell. Let us see it on the following example"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-mathematica",children:'generator["random-word-you-like"]\nhandler["random-word-you-like"]\n'})}),"\n",(0,o.jsx)(n.p,{children:"and in some other cell, if you like you can add other handler to the same event"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-mathematica",children:'handler["random-word-you-like", FrontSubmit[Alert[#]]&]\n'})}),"\n",(0,o.jsx)(n.p,{children:"By pressing the button, it will call the whole list of attached handlers."}),"\n",(0,o.jsxs)(n.p,{children:["This approach comes very handy, when you are constructing complex animation on ",(0,o.jsx)(n.a,{href:"/frontend/Cell%20types/Slides",children:"Slides"})]})]})}function h(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>i,M:()=>a});var o=t(11504);const r={},s=o.createContext(r);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);