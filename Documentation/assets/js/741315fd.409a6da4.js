"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[1356],{47036:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var i=t(17624),s=t(4552);const a={},r="Graphics animation & interaction",o={id:"frontend/Advanced/Slides/animations",title:"Graphics animation & interaction",description:"Interactive plots",source:"@site/docs/frontend/Advanced/Slides/animations.md",sourceDirName:"frontend/Advanced/Slides",slug:"/frontend/Advanced/Slides/animations",permalink:"/frontend/Advanced/Slides/animations",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1711450580,formattedLastUpdatedAt:"Mar 26, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Code highlighting",permalink:"/frontend/Advanced/Slides/embed-wl"},next:{title:"Components",permalink:"/frontend/Advanced/Slides/components"}},l={},d=[{value:"Interactive plots",id:"interactive-plots",level:2},{value:"Animation",id:"animation",level:2},{value:"Append graphics on slide",id:"append-graphics-on-slide",level:3},{value:"Buttons, sliders etc",id:"buttons-sliders-etc",level:2}];function c(e){const n={a:"a",admonition:"admonition",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",math:"math",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",...(0,s.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"graphics-animation--interaction",children:"Graphics animation & interaction"}),"\n",(0,i.jsx)(n.h2,{id:"interactive-plots",children:"Interactive plots"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"By the default"}),", everything you plot using ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Plotting%20Functions/Plot",children:"Plot"})," or ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Graphics/",children:"Graphics"})," or ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Graphics3D/",children:"Graphics3D"})," can be dragged or panned or rotated. This behavior is controlled by the options and can be switched off if necessary. For example"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"Figure = Plot[{x, Sin[x], Sin[x]^2}, {x,0,2Pi}];\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:".slide\n\n# Simple plot\n\n<Figure/>\n\nTry to drag it using you mouse\n"})}),"\n",(0,i.jsx)(n.p,{children:"The result will look like following"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(98968).c+"",width:"600",height:"401"})}),"\n",(0,i.jsx)(n.h2,{id:"animation",children:"Animation"}),"\n",(0,i.jsx)(n.p,{children:"In general all visuals can be done in the same way as in regular cells, since it uses the same components."}),"\n",(0,i.jsxs)(n.p,{children:["When a slide becomes visible or a fragment got revealed (see ",(0,i.jsx)(n.a,{href:"/frontend/Advanced/Slides/intro#Transitions%20and%20fragments",children:"Transitions and fragments"}),") it fires an event, where all information is encoded. To enable this - use ",(0,i.jsx)(n.a,{href:"../../Reference/Tools/Slides/SlideEventListener.md",children:"SlideEventListener"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Put ",(0,i.jsx)(n.a,{href:"../../Reference/Tools/Slides/SlideEventListener.md",children:"SlideEventListener"})," anywhere on the slide to hook up WL Kernel to all events associated with it"]})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Keep the dynamic variables scoped using ",(0,i.jsx)(n.a,{href:"../../Reference/Tools/LeakyModule.md",children:"LeakyModule"})," and allow use explicit event routing like in ",(0,i.jsx)(n.a,{href:"../Dynamics/Scoping.md",children:"Scoping"})," and ",(0,i.jsx)(n.a,{href:"/frontend/Advanced/Events%20system/routing",children:"routing"}),". Later it will allow you to reuse your components for other slides much easier."]})}),"\n",(0,i.jsx)(n.p,{children:"Let us see the simples example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'.slide\n\n# Animation example\n\n<Figure Id={"routed-event"}/>\n\nThe figure will be changed, when the fragment below is revealed\n\n<span style="color:red">Magic</span> \x3c!-- .element: class="fragment" data-fragment-index="1" --\x3e\n\n<SlideEventListener Id={"routed-event"}/>\n\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"SlideEventListener"})," is attached only to the slide, where it has been placed."]}),"\n",(0,i.jsx)(n.p,{children:"Now let us make a simple figure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'Figure[OptionsPattern[]] := With[{event = EventClone[OptionValue["Id"]]},\n\tEventHandler[EvaluationCell[], {"Destroy" -> Function[Null, Delete[event]]}];\n\t\n\t...\n]\n\nOptions[Figure] = {"Id"->""}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Here we clone a slide event (this is a safe way, if more than 1 handlers will be involved). Afterwards we need to make sure that if one reevaluate the cell, the handler will be removed automatically. That's how you can clean-up handlers after the evaluation."}),"\n",(0,i.jsx)(n.p,{children:"Now the content"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'Figure[OptionsPatten[]] := With[{event = EventClone[OptionValue["Id"]]},\n\tEventHandler[EvaluationCell[], {"Destroy" -> Function[Null, Delete[event]]}];\n\t\n\tLeakyModule[{points},\n\t\t(* initial state *)\n\t\tpoints = RandomReal[{-1,1}, {40,2}];\n\t\t\n\t\tEventHandler[event, {"fragment-1" -> Function[Null, \n\t\t\t(* act when the event happend *)\n\t\t\tpoints = {Sin[#], Cos[#]} &/@ Range[40]\n\t\t]}];\n\t\t\n\t\tGraphics[{Red, Line[points // Offload]}]\n\t]\n]\n\nOptions[Figure] = {"Id"->""}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["This little script will plot randomly distributed points as lines for its initial state. When the ",(0,i.jsx)(n.code,{children:"event"})," is fired, it changes the distribution of ",(0,i.jsx)(n.code,{children:"points"})," to a circle. The animation is done by ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Graphics/",children:"Graphics"}),"  (i.e. it is a native feature of it and has nothing to do with slides)."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Consider options ",(0,i.jsx)(n.code,{children:'"TransitionType"'})," and ",(0,i.jsx)(n.code,{children:'"TransitionDuration"'})," of ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Graphics/",children:"Graphics"})," to control the transition animation."]})}),"\n",(0,i.jsx)(n.p,{children:"The expected result will be"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(94816).c+"",width:"600",height:"395"})}),"\n",(0,i.jsxs)(n.p,{children:["Sure the state is not reservable in this case. You need to manage it by your own considering more events generated by ",(0,i.jsx)(n.a,{href:"../../Reference/Tools/Slides/SlideEventListener.md",children:"SlideEventListener"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"However, in practice reports are usually linear and do not require to repeat all animations again."}),"\n",(0,i.jsx)(n.h3,{id:"append-graphics-on-slide",children:"Append graphics on slide"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"../../../../interpreter/Advanced/meta-markers.md",children:"Meta-markers"})," can work well in a case if one wants to append some data on the existing graphics canvas."]}),"\n",(0,i.jsx)(n.h2,{id:"buttons-sliders-etc",children:"Buttons, sliders etc"}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["To be written. Check shipped examples (",(0,i.jsx)(n.code,{children:"File"}),(0,i.jsxs)(n.span,{className:"katex",children:[(0,i.jsx)(n.span,{className:"katex-mathml",children:(0,i.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(n.semantics,{children:[(0,i.jsx)(n.mrow,{children:(0,i.jsx)(n.mo,{children:"\u2192"})}),(0,i.jsx)(n.annotation,{encoding:"application/x-tex",children:"\\rightarrow"})]})})}),(0,i.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"0.3669em"}}),(0,i.jsx)(n.span,{className:"mrel",children:"\u2192"})]})})]})," ",(0,i.jsx)(n.code,{children:"Open Examples"}),") for that.\nIn principle just follow ",(0,i.jsx)(n.a,{href:"/frontend/Tutorial/Dynamics",children:"Dynamics"})," tutorial"]})})]})}function h(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},98968:(e,n,t)=>{t.d(n,{c:()=>i});const i=t.p+"assets/images/ezgif.com-optimize 1-15bea37613ccb30c3df8c4bfa4db1f5a.gif"},94816:(e,n,t)=>{t.d(n,{c:()=>i});const i=t.p+"assets/images/ezgif.com-video-to-gif 1-4c8934f8dec9251a05356f718152b388.gif"},4552:(e,n,t)=>{t.d(n,{I:()=>o,M:()=>r});var i=t(11504);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);