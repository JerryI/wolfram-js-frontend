"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[7896],{63692:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(17624),o=t(4552);const i={env:["Wolfram Kernel"],update:null,needsContainer:null,origin:"https://reference.wolfram.com/language/ref/ArrayPlot.html"},a=void 0,l={id:"frontend/Reference/Plotting Functions/ArrayPlot",title:"ArrayPlot",description:"Generates a plot, where values are shown in a discrete array of blocks",source:"@site/docs/frontend/Reference/Plotting Functions/ArrayPlot.md",sourceDirName:"frontend/Reference/Plotting Functions",slug:"/frontend/Reference/Plotting Functions/ArrayPlot",permalink:"/frontend/Reference/Plotting Functions/ArrayPlot",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:171482423e4,frontMatter:{env:["Wolfram Kernel"],update:null,needsContainer:null,origin:"https://reference.wolfram.com/language/ref/ArrayPlot.html"},sidebar:"tutorialSidebar",previous:{title:"AnimatePlot",permalink:"/frontend/Reference/Plotting Functions/AnimatePlot"},next:{title:"BarChart",permalink:"/frontend/Reference/Plotting Functions/BarChart"}},s={},c=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",strong:"strong",...(0,o.M)(),...e.components},{Wl:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Wl",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Generates a plot, where values are shown in a discrete array of blocks"}),"\n",(0,r.jsx)(n.admonition,{type:"danger",children:(0,r.jsxs)(n.p,{children:["Since ",(0,r.jsx)(n.a,{href:"/frontend/Reference/Graphics/",children:"Graphics"})," in this implementation cannot guess the plot range, you need to provide this explicitly. Use ",(0,r.jsx)(n.a,{href:"/frontend/Reference/Plotting%20Functions/MatrixPlot",children:"MatrixPlot"})," if you want it to happen automatically."]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:"ArrayPlot[{{1, 0, 0, Pink}, {1, 1, 0, Pink}, {1, 0, 1, Red}}];\nInsert[%, PlotRange->{{0,4}, {0,3}}, 2]\n"})}),"\n",(0,r.jsx)(t,{children:"Insert[ArrayPlot[{{1, 0, 0, Pink}, {1, 1, 0, Pink}, {1, 0, 1, Red}}, ImageSize->500], PlotRange->{{0,4}, {0,3}}, 2]"}),"\n",(0,r.jsxs)(n.p,{children:["Combining it with ",(0,r.jsx)(n.code,{children:"Controls"})," option for ",(0,r.jsx)(n.code,{children:"Graphics"}),", you ",(0,r.jsx)(n.strong,{children:"can zoom and pan the plot using your mouse"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:"ArrayPlot[Table[Sin[x y], {x, -40, 40}, {y, -40, 40}]];\nInsert[%, PlotRange->{{0,80}, {0,80}}, 2];\nInsert[%, Controls->True, 2]\n"})}),"\n",(0,r.jsx)(t,{children:"Insert[Insert[ArrayPlot[Table[Sin[x y], {x, -40, 40}, {y, -40, 40}], ImageSize->500], PlotRange->{{0,80}, {0,80}}, 2], Controls->True, 2]"})]})}function u(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>l,M:()=>a});var r=t(11504);const o={},i=r.createContext(o);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);