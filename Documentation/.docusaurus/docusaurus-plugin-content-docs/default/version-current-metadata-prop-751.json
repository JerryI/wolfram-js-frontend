{
  "pluginId": "default",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "noIndex": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "tutorialSidebar": [
      {
        "type": "link",
        "label": "Quick start",
        "href": "/wljs-docs/",
        "className": "green",
        "docId": "frontend/instruction",
        "unlisted": false
      },
      {
        "type": "category",
        "label": "Tutorials",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "Overview",
            "href": "/wljs-docs/frontend/Tutorial/Overview",
            "docId": "frontend/Tutorial/Overview",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Dynamics",
            "href": "/wljs-docs/frontend/Tutorial/Dynamics",
            "docId": "frontend/Tutorial/Dynamics",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Input elements",
            "href": "/wljs-docs/frontend/Tutorial/Input elements",
            "docId": "frontend/Tutorial/Input elements",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Export notebook",
            "href": "/wljs-docs/frontend/Tutorial/Export notebook",
            "docId": "frontend/Tutorial/Export notebook",
            "unlisted": false
          }
        ],
        "href": "/wljs-docs/category/tutorials"
      },
      {
        "type": "category",
        "label": "Cell types",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "Wolfram Language",
            "href": "/wljs-docs/frontend/Cell types/Wolfram Language",
            "docId": "frontend/Cell types/Wolfram Language",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Markdown",
            "href": "/wljs-docs/frontend/Cell types/Markdown",
            "docId": "frontend/Cell types/Markdown",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "HTML",
            "href": "/wljs-docs/frontend/Cell types/HTML",
            "docId": "frontend/Cell types/HTML",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Javascript",
            "href": "/wljs-docs/frontend/Cell types/Javascript",
            "docId": "frontend/Cell types/Javascript",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Files",
            "href": "/wljs-docs/frontend/Cell types/Files",
            "docId": "frontend/Cell types/Files",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Many more...",
            "href": "/wljs-docs/frontend/Cell types/Many more...",
            "docId": "frontend/Cell types/Many more...",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Slides",
            "href": "/wljs-docs/frontend/Cell types/Slides",
            "docId": "frontend/Cell types/Slides",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "WLX",
            "href": "/wljs-docs/frontend/Cell types/WLX",
            "docId": "frontend/Cell types/WLX",
            "unlisted": false
          }
        ],
        "href": "/wljs-docs/category/cell-types"
      },
      {
        "type": "link",
        "label": "Expressions representation",
        "href": "/wljs-docs/frontend/Expressions representation",
        "docId": "frontend/Expressions representation",
        "unlisted": false
      },
      {
        "type": "category",
        "label": "Advanced",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "category",
            "label": "Events system",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "event-generators",
                "href": "/wljs-docs/frontend/Advanced/Events system/event-generators",
                "docId": "frontend/Advanced/Events system/event-generators",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Promises",
                "href": "/wljs-docs/frontend/Advanced/Events system/promises",
                "docId": "frontend/Advanced/Events system/promises",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Routing",
                "href": "/wljs-docs/frontend/Advanced/Events system/routing",
                "docId": "frontend/Advanced/Events system/routing",
                "unlisted": false
              }
            ]
          },
          {
            "type": "category",
            "label": "Slides",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Basics",
                "href": "/wljs-docs/frontend/Advanced/Slides/intro",
                "docId": "frontend/Advanced/Slides/intro",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Code highlighting",
                "href": "/wljs-docs/frontend/Advanced/Slides/embed-wl",
                "docId": "frontend/Advanced/Slides/embed-wl",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Graphics animation & interaction",
                "href": "/wljs-docs/frontend/Advanced/Slides/animations",
                "docId": "frontend/Advanced/Slides/animations",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Components",
                "href": "/wljs-docs/frontend/Advanced/Slides/components",
                "docId": "frontend/Advanced/Slides/components",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Large tables of data",
                "href": "/wljs-docs/frontend/Advanced/Slides/tables",
                "docId": "frontend/Advanced/Slides/tables",
                "unlisted": false
              }
            ]
          }
        ],
        "href": "/wljs-docs/category/advanced"
      },
      {
        "type": "category",
        "label": "Exporting formats",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "HTML file",
            "href": "/wljs-docs/frontend/Export/HTML file",
            "docId": "frontend/Export/HTML file",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "PDF",
            "href": "/wljs-docs/frontend/Export/PDF",
            "docId": "frontend/Export/PDF",
            "unlisted": false
          }
        ],
        "href": "/wljs-docs/category/exporting-formats"
      },
      {
        "type": "link",
        "label": "Troubleshooting",
        "href": "/wljs-docs/frontend/Troubleshooting",
        "docId": "frontend/Troubleshooting",
        "unlisted": false
      },
      {
        "type": "category",
        "label": "Reference",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "category",
            "label": "Decorations",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Column",
                "href": "/wljs-docs/frontend/Reference/Decorations/Column",
                "docId": "frontend/Reference/Decorations/Column",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Framed",
                "href": "/wljs-docs/frontend/Reference/Decorations/Framed",
                "docId": "frontend/Reference/Decorations/Framed",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Grid",
                "href": "/wljs-docs/frontend/Reference/Decorations/Grid",
                "docId": "frontend/Reference/Decorations/Grid",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "HTMLForm",
                "href": "/wljs-docs/frontend/Reference/Decorations/HTMLForm",
                "docId": "frontend/Reference/Decorations/HTMLForm",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "InputForm",
                "href": "/wljs-docs/frontend/Reference/Decorations/InputForm",
                "docId": "frontend/Reference/Decorations/InputForm",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Interpretation",
                "href": "/wljs-docs/frontend/Reference/Decorations/Interpretation",
                "docId": "frontend/Reference/Decorations/Interpretation",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "InterpretationBox",
                "href": "/wljs-docs/frontend/Reference/Decorations/InterpretationBox",
                "docId": "frontend/Reference/Decorations/InterpretationBox",
                "unlisted": false
              },
              {
                "type": "category",
                "label": "Low level",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "link",
                    "label": "BoxBox",
                    "href": "/wljs-docs/frontend/Reference/Decorations/Low level/BoxBox",
                    "docId": "frontend/Reference/Decorations/Low level/BoxBox",
                    "unlisted": false
                  },
                  {
                    "type": "link",
                    "label": "ViewBox",
                    "href": "/wljs-docs/frontend/Reference/Decorations/Low level/ViewBox",
                    "docId": "frontend/Reference/Decorations/Low level/ViewBox",
                    "unlisted": false
                  }
                ]
              },
              {
                "type": "link",
                "label": "MakeBoxes",
                "href": "/wljs-docs/frontend/Reference/Decorations/MakeBoxes",
                "docId": "frontend/Reference/Decorations/MakeBoxes",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "MatrixForm",
                "href": "/wljs-docs/frontend/Reference/Decorations/MatrixForm",
                "docId": "frontend/Reference/Decorations/MatrixForm",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Row",
                "href": "/wljs-docs/frontend/Reference/Decorations/Row",
                "docId": "frontend/Reference/Decorations/Row",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "SVGForm",
                "href": "/wljs-docs/frontend/Reference/Decorations/SVGForm",
                "docId": "frontend/Reference/Decorations/SVGForm",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Style",
                "href": "/wljs-docs/frontend/Reference/Decorations/Style",
                "docId": "frontend/Reference/Decorations/Style",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "TableForm",
                "href": "/wljs-docs/frontend/Reference/Decorations/TableForm",
                "docId": "frontend/Reference/Decorations/TableForm",
                "unlisted": false
              }
            ]
          },
          {
            "type": "category",
            "label": "Dynamics",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "CreateFrontEndObject",
                "href": "/wljs-docs/frontend/Reference/Dynamics/CreateFrontEndObject",
                "docId": "frontend/Reference/Dynamics/CreateFrontEndObject",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Dynamic",
                "href": "/wljs-docs/frontend/Reference/Dynamics/Dynamic",
                "docId": "frontend/Reference/Dynamics/Dynamic",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "DynamicModule",
                "href": "/wljs-docs/frontend/Reference/Dynamics/DynamicModule",
                "docId": "frontend/Reference/Dynamics/DynamicModule",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "FrontEndVirtual",
                "href": "/wljs-docs/frontend/Reference/Dynamics/FrontEndVirtual",
                "docId": "frontend/Reference/Dynamics/FrontEndVirtual",
                "unlisted": false
              },
              {
                "type": "category",
                "label": "Internals",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "link",
                    "label": "FrontEndExecutable",
                    "href": "/wljs-docs/frontend/Reference/Dynamics/Internals/FrontEndExecutable",
                    "docId": "frontend/Reference/Dynamics/Internals/FrontEndExecutable",
                    "unlisted": false
                  },
                  {
                    "type": "link",
                    "label": "FrontEndExecutableInline",
                    "href": "/wljs-docs/frontend/Reference/Dynamics/Internals/FrontEndExecutableInline",
                    "docId": "frontend/Reference/Dynamics/Internals/FrontEndExecutableInline",
                    "unlisted": false
                  },
                  {
                    "type": "link",
                    "label": "FrontEndOnly",
                    "href": "/wljs-docs/frontend/Reference/Dynamics/Internals/FrontEndOnly",
                    "docId": "frontend/Reference/Dynamics/Internals/FrontEndOnly",
                    "unlisted": false
                  },
                  {
                    "type": "link",
                    "label": "FrontEndRef",
                    "href": "/wljs-docs/frontend/Reference/Dynamics/Internals/FrontEndRef",
                    "docId": "frontend/Reference/Dynamics/Internals/FrontEndRef",
                    "unlisted": false
                  }
                ]
              },
              {
                "type": "link",
                "label": "Manipulate",
                "href": "/wljs-docs/frontend/Reference/Dynamics/Manipulate",
                "docId": "frontend/Reference/Dynamics/Manipulate",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Offload",
                "href": "/wljs-docs/frontend/Reference/Dynamics/Offload",
                "docId": "frontend/Reference/Dynamics/Offload",
                "unlisted": false
              }
            ]
          },
          {
            "type": "category",
            "label": "Graphics",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "AbsoluteThickness",
                "href": "/wljs-docs/frontend/Reference/Graphics/AbsoluteThickness",
                "docId": "frontend/Reference/Graphics/AbsoluteThickness",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Arrow",
                "href": "/wljs-docs/frontend/Reference/Graphics/Arrow",
                "docId": "frontend/Reference/Graphics/Arrow",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Directive",
                "href": "/wljs-docs/frontend/Reference/Graphics/Directive",
                "docId": "frontend/Reference/Graphics/Directive",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "GraphicsComplex",
                "href": "/wljs-docs/frontend/Reference/Graphics/GraphicsComplex",
                "docId": "frontend/Reference/Graphics/GraphicsComplex",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Image",
                "href": "/wljs-docs/frontend/Reference/Graphics/Image",
                "docId": "frontend/Reference/Graphics/Image",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Inset",
                "href": "/wljs-docs/frontend/Reference/Graphics/Inset",
                "docId": "frontend/Reference/Graphics/Inset",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Line",
                "href": "/wljs-docs/frontend/Reference/Graphics/Line",
                "docId": "frontend/Reference/Graphics/Line",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "SVGAttribute",
                "href": "/wljs-docs/frontend/Reference/Graphics/SVGAttribute",
                "docId": "frontend/Reference/Graphics/SVGAttribute",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Show",
                "href": "/wljs-docs/frontend/Reference/Graphics/Show",
                "docId": "frontend/Reference/Graphics/Show",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Style",
                "href": "/wljs-docs/frontend/Reference/Graphics/Style",
                "docId": "frontend/Reference/Graphics/Style",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Text",
                "href": "/wljs-docs/frontend/Reference/Graphics/Text",
                "docId": "frontend/Reference/Graphics/Text",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Translate",
                "href": "/wljs-docs/frontend/Reference/Graphics/Translate",
                "docId": "frontend/Reference/Graphics/Translate",
                "unlisted": false
              }
            ],
            "href": "/wljs-docs/frontend/Reference/Graphics/"
          },
          {
            "type": "category",
            "label": "Graphics3D",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "SpotLight",
                "href": "/wljs-docs/frontend/Reference/Graphics3D/SpotLight",
                "docId": "frontend/Reference/Graphics3D/SpotLight",
                "unlisted": false
              }
            ]
          },
          {
            "type": "category",
            "label": "Inputs",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "EditorView",
                "href": "/wljs-docs/frontend/Reference/Inputs/EditorView",
                "docId": "frontend/Reference/Inputs/EditorView",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "InputButton",
                "href": "/wljs-docs/frontend/Reference/Inputs/InputButton",
                "docId": "frontend/Reference/Inputs/InputButton",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "InputFile",
                "href": "/wljs-docs/frontend/Reference/Inputs/InputFile",
                "docId": "frontend/Reference/Inputs/InputFile",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "InputGroup",
                "href": "/wljs-docs/frontend/Reference/Inputs/InputGroup",
                "docId": "frontend/Reference/Inputs/InputGroup",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "InputRange",
                "href": "/wljs-docs/frontend/Reference/Inputs/InputRange",
                "docId": "frontend/Reference/Inputs/InputRange",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "InputTable",
                "href": "/wljs-docs/frontend/Reference/Inputs/InputTable",
                "docId": "frontend/Reference/Inputs/InputTable",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "InputText",
                "href": "/wljs-docs/frontend/Reference/Inputs/InputText",
                "docId": "frontend/Reference/Inputs/InputText",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Slider",
                "href": "/wljs-docs/frontend/Reference/Inputs/Slider",
                "docId": "frontend/Reference/Inputs/Slider",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "TextView",
                "href": "/wljs-docs/frontend/Reference/Inputs/TextView",
                "docId": "frontend/Reference/Inputs/TextView",
                "unlisted": false
              }
            ]
          },
          {
            "type": "category",
            "label": "Misc",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Async",
                "href": "/wljs-docs/frontend/Reference/Misc/Async",
                "docId": "frontend/Reference/Misc/Async",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Events",
                "href": "/wljs-docs/frontend/Reference/Misc/Events",
                "docId": "frontend/Reference/Misc/Events",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Language",
                "href": "/wljs-docs/frontend/Reference/Misc/Language",
                "docId": "frontend/Reference/Misc/Language",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Promise",
                "href": "/wljs-docs/frontend/Reference/Misc/Promise",
                "docId": "frontend/Reference/Misc/Promise",
                "unlisted": false
              }
            ]
          },
          {
            "type": "category",
            "label": "Plotting",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "ArrayPlot",
                "href": "/wljs-docs/frontend/Reference/Plotting/ArrayPlot",
                "docId": "frontend/Reference/Plotting/ArrayPlot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "BarChart",
                "href": "/wljs-docs/frontend/Reference/Plotting/BarChart",
                "docId": "frontend/Reference/Plotting/BarChart",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "BubbleChart",
                "href": "/wljs-docs/frontend/Reference/Plotting/BubbleChart",
                "docId": "frontend/Reference/Plotting/BubbleChart",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "ContourPlot",
                "href": "/wljs-docs/frontend/Reference/Plotting/ContourPlot",
                "docId": "frontend/Reference/Plotting/ContourPlot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "DensityPlot",
                "href": "/wljs-docs/frontend/Reference/Plotting/DensityPlot",
                "docId": "frontend/Reference/Plotting/DensityPlot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "ListContourPlot",
                "href": "/wljs-docs/frontend/Reference/Plotting/ListContourPlot",
                "docId": "frontend/Reference/Plotting/ListContourPlot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "ListCurvePathPlot",
                "href": "/wljs-docs/frontend/Reference/Plotting/ListCurvePathPlot",
                "docId": "frontend/Reference/Plotting/ListCurvePathPlot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "ListLinePlot",
                "href": "/wljs-docs/frontend/Reference/Plotting/ListLinePlot",
                "docId": "frontend/Reference/Plotting/ListLinePlot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "ListLinePlotly",
                "href": "/wljs-docs/frontend/Reference/Plotting/ListLinePlotly",
                "docId": "frontend/Reference/Plotting/ListLinePlotly",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "ListStepPlot",
                "href": "/wljs-docs/frontend/Reference/Plotting/ListStepPlot",
                "docId": "frontend/Reference/Plotting/ListStepPlot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "ListVectorPlot",
                "href": "/wljs-docs/frontend/Reference/Plotting/ListVectorPlot",
                "docId": "frontend/Reference/Plotting/ListVectorPlot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "MatrixPlot",
                "href": "/wljs-docs/frontend/Reference/Plotting/MatrixPlot",
                "docId": "frontend/Reference/Plotting/MatrixPlot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Plot",
                "href": "/wljs-docs/frontend/Reference/Plotting/Plot",
                "docId": "frontend/Reference/Plotting/Plot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Plotly",
                "href": "/wljs-docs/frontend/Reference/Plotting/Plotly",
                "docId": "frontend/Reference/Plotting/Plotly",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "RandomImage",
                "href": "/wljs-docs/frontend/Reference/Plotting/RandomImage",
                "docId": "frontend/Reference/Plotting/RandomImage",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "StackedListPlot",
                "href": "/wljs-docs/frontend/Reference/Plotting/StackedListPlot",
                "docId": "frontend/Reference/Plotting/StackedListPlot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "StreamPlot",
                "href": "/wljs-docs/frontend/Reference/Plotting/StreamPlot",
                "docId": "frontend/Reference/Plotting/StreamPlot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "VectorPlot",
                "href": "/wljs-docs/frontend/Reference/Plotting/VectorPlot",
                "docId": "frontend/Reference/Plotting/VectorPlot",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "VectorPlot3D",
                "href": "/wljs-docs/frontend/Reference/Plotting/VectorPlot3D",
                "docId": "frontend/Reference/Plotting/VectorPlot3D",
                "unlisted": false
              }
            ]
          }
        ]
      }
    ]
  },
  "docs": {
    "frontend/Advanced/Events system/event-generators": {
      "id": "frontend/Advanced/Events system/event-generators",
      "title": "event-generators",
      "description": "As a short summary - where you can use event-handlers",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Advanced/Events system/promises": {
      "id": "frontend/Advanced/Events system/promises",
      "title": "Promises",
      "description": "This chapter is in development. Please see References Promise",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Advanced/Events system/routing": {
      "id": "frontend/Advanced/Events system/routing",
      "title": "Routing",
      "description": "Remember the number 1 rule: 1 event object = 1 handler",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Advanced/Slides/animations": {
      "id": "frontend/Advanced/Slides/animations",
      "title": "Graphics animation & interaction",
      "description": "Interactive plots",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Advanced/Slides/components": {
      "id": "frontend/Advanced/Slides/components",
      "title": "Components",
      "description": "Making presentation is quite repetitive process. It is quite common to have some common element shared between different slides.",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Advanced/Slides/embed-wl": {
      "id": "frontend/Advanced/Slides/embed-wl",
      "title": "Code highlighting",
      "description": "Since it support WLX syntax as well, one can combine the copied text from the normal Wolfram Language cell into a EditorView component",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Advanced/Slides/intro": {
      "id": "frontend/Advanced/Slides/intro",
      "title": "Basics",
      "description": "You can use pure Markdown, HTML, CSS or WLX languages while making slides",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Advanced/Slides/tables": {
      "id": "frontend/Advanced/Slides/tables",
      "title": "Large tables of data",
      "description": "One can utilize component InputTable, that originally stands for editing table, but can be used just to view them as well. The good thing about it that it supports infinitely large tables since the actual content is loaded by parts (and unloads if no longer needed)",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Cell types/Files": {
      "id": "frontend/Cell types/Files",
      "title": "Files",
      "description": "Image viewer",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Cell types/HTML": {
      "id": "frontend/Cell types/HTML",
      "title": "HTML",
      "description": "Github repo",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Cell types/Javascript": {
      "id": "frontend/Cell types/Javascript",
      "title": "Javascript",
      "description": "WebGL demo",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Cell types/Many more...": {
      "id": "frontend/Cell types/Many more...",
      "title": "Many more...",
      "description": "You can extend output cell types via a few lines of code and you favorite framework / package",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Cell types/Markdown": {
      "id": "frontend/Cell types/Markdown",
      "title": "Markdown",
      "description": "Github repo",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Cell types/Slides": {
      "id": "frontend/Cell types/Slides",
      "title": "Slides",
      "description": "One can also make presentations using WLJS Frontend. This is provided by wljs-revealjs, that integrates RevealJS and WLX language to provide components approach on making presentations as well as add interactivity and all features of frontend's cells like this",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Cell types/WLX": {
      "id": "frontend/Cell types/WLX",
      "title": "WLX",
      "description": "It allows to use Wolfram Language XML in your cell. It comes handy when making a a complex cell structure or stylizing it using the power of HTML/CSS/JS.",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Cell types/Wolfram Language": {
      "id": "frontend/Cell types/Wolfram Language",
      "title": "Wolfram Language",
      "description": "Github repo",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Export/HTML file": {
      "id": "frontend/Export/HTML file",
      "title": "HTML file",
      "description": "Is in development",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Export/PDF": {
      "id": "frontend/Export/PDF",
      "title": "PDF",
      "description": "Is in development",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Expressions representation": {
      "id": "frontend/Expressions representation",
      "title": "Expressions representation",
      "description": "The aim is to make a compromise between DisplayForm and InputForm representations Wolfram Expressions on the frontend's side.",
      "sidebar": "tutorialSidebar"
    },
    "frontend/instruction": {
      "id": "frontend/instruction",
      "title": "Quick start",
      "description": "Wolfram Language Notebook requires  wolframscript (see Freeware Wolfram Engine or Wolfram Kernel) installed on your PC/Mac. This application will check all paths and ask to locate a Wolfram executable if nothing is found.",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/Column": {
      "id": "frontend/Reference/Decorations/Column",
      "title": "Column",
      "description": "shows the list of any Wolfram Expressions in a single column acting as a decoration",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/Framed": {
      "id": "frontend/Reference/Decorations/Framed",
      "title": "Framed",
      "description": "Acts like a Style box, but wrapped into a frame",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/Grid": {
      "id": "frontend/Reference/Decorations/Grid",
      "title": "Grid",
      "description": "Spawns a grid of WL editors with an arbitrary objects inside",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/HTMLForm": {
      "id": "frontend/Reference/Decorations/HTMLForm",
      "title": "HTMLForm",
      "description": "renders HTML tags to the output cell",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/InputForm": {
      "id": "frontend/Reference/Decorations/InputForm",
      "title": "InputForm",
      "description": "Prevents decorations to be set",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/Interpretation": {
      "id": "frontend/Reference/Decorations/Interpretation",
      "title": "Interpretation",
      "description": "allows to alter the displayed expression",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/InterpretationBox": {
      "id": "frontend/Reference/Decorations/InterpretationBox",
      "title": "InterpretationBox",
      "description": "Make a formatting structure whose interpretation is not based on its appearance",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/Low level/BoxBox": {
      "id": "frontend/Reference/Decorations/Low level/BoxBox",
      "title": "BoxBox",
      "description": "Used to decorate Wolfram Expression with custom HTML elements",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/Low level/ViewBox": {
      "id": "frontend/Reference/Decorations/Low level/ViewBox",
      "title": "ViewBox",
      "description": "Used to replace wrapped Wolfram Expression with custom HTML elements",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/MakeBoxes": {
      "id": "frontend/Reference/Decorations/MakeBoxes",
      "title": "MakeBoxes",
      "description": "is a general expression used in UpValues of other expressions to change the visual representation (see Decorations) in the notebook.",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/MatrixForm": {
      "id": "frontend/Reference/Decorations/MatrixForm",
      "title": "MatrixForm",
      "description": "shows the given matrix (list of lists) in a traditional form using Grid decoration",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/Row": {
      "id": "frontend/Reference/Decorations/Row",
      "title": "Row",
      "description": "shows the list of any Wolfram Expressions in a row acting as a decoration",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/Style": {
      "id": "frontend/Reference/Decorations/Style",
      "title": "Style",
      "description": "Styling box used as a decoration for an arbitrary Wolfram Expressions",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/SVGForm": {
      "id": "frontend/Reference/Decorations/SVGForm",
      "title": "SVGForm",
      "description": "exports as SVG any Wolfram Expressions and plots it inside a cell.",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Decorations/TableForm": {
      "id": "frontend/Reference/Decorations/TableForm",
      "title": "TableForm",
      "description": "shows the given table (list) in a traditional form using Grid decoration",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Dynamics/CreateFrontEndObject": {
      "id": "frontend/Reference/Dynamics/CreateFrontEndObject",
      "title": "CreateFrontEndObject",
      "description": "Creates a container for the inner expression and stores it into frontend objects storage shared with Kernel and Notebook",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Dynamics/Dynamic": {
      "id": "frontend/Reference/Dynamics/Dynamic",
      "title": "Dynamic",
      "description": "This concept is different from Mathematica. Please, use event-based approach instead - Dynamics",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Dynamics/DynamicModule": {
      "id": "frontend/Reference/Dynamics/DynamicModule",
      "title": "DynamicModule",
      "description": "This concept is different from Mathematica. Please, use event-based approach instead - Dynamics",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Dynamics/FrontEndVirtual": {
      "id": "frontend/Reference/Dynamics/FrontEndVirtual",
      "title": "FrontEndVirtual",
      "description": "It is a virtual container wrapper for any expressions evaluated on WLJS",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Dynamics/Internals/FrontEndExecutable": {
      "id": "frontend/Reference/Dynamics/Internals/FrontEndExecutable",
      "title": "FrontEndExecutable",
      "description": "An replacement decoration and a reference to the frontend object aka  container in the shared objects storage with a corresponding id",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Dynamics/Internals/FrontEndExecutableInline": {
      "id": "frontend/Reference/Dynamics/Internals/FrontEndExecutableInline",
      "title": "FrontEndExecutableInline",
      "description": "The same as FrontEndExecutable, but does not require a dedicated storage, the data is stored as a compressed string",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Dynamics/Internals/FrontEndOnly": {
      "id": "frontend/Reference/Dynamics/Internals/FrontEndOnly",
      "title": "FrontEndOnly",
      "description": "An synonym for Offload",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Dynamics/Internals/FrontEndRef": {
      "id": "frontend/Reference/Dynamics/Internals/FrontEndRef",
      "title": "FrontEndRef",
      "description": "An invisible replacement for FrontEndExecutable, which is not replaced by a widget in the editor and Wolfram Kernel.",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Dynamics/Manipulate": {
      "id": "frontend/Reference/Dynamics/Manipulate",
      "title": "Manipulate",
      "description": "This is not supported. Please, use Dynamics instead",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Dynamics/Offload": {
      "id": "frontend/Reference/Dynamics/Offload",
      "title": "Offload",
      "description": "Holds (or offloads) an expression to be evaluated on frontend (WLJS)",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/AbsoluteThickness": {
      "id": "frontend/Reference/Graphics/AbsoluteThickness",
      "title": "AbsoluteThickness",
      "description": "is used to control the visible thickness of lines used in Graphics. The displayed is not affected by scaling or zooming the plot.",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/Arrow": {
      "id": "frontend/Reference/Graphics/Arrow",
      "title": "Arrow",
      "description": "Plots an arrow with a fixed head-size from point 1 to point 2",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/Directive": {
      "id": "frontend/Reference/Graphics/Directive",
      "title": "Directive",
      "description": "Used for styling plots or 2D graphics",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/Graphics": {
      "id": "frontend/Reference/Graphics/Graphics",
      "title": "Graphics",
      "description": "represents a two-dimensional graphical image. This is a fundamental expression, which is produced by all 2D plotting functions",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/GraphicsComplex": {
      "id": "frontend/Reference/Graphics/GraphicsComplex",
      "title": "GraphicsComplex",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/Image": {
      "id": "frontend/Reference/Graphics/Image",
      "title": "Image",
      "description": "Represents a raster image and plots the list of pixel's colors to a canvas used in notebooks",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/Inset": {
      "id": "frontend/Reference/Graphics/Inset",
      "title": "Inset",
      "description": "a graphics object, that allows to put another Graphics into the canvas. pos has to be a 2D vector, that specifies the position of the inset.",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/Line": {
      "id": "frontend/Reference/Graphics/Line",
      "title": "Line",
      "description": "the representation of a line going though the points {x1,y1}, {x2,y2}",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/Show": {
      "id": "frontend/Reference/Graphics/Show",
      "title": "Show",
      "description": "Is not supported in wljs-graphics-d3 for now",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/Style": {
      "id": "frontend/Reference/Graphics/Style",
      "title": "Style",
      "description": "A wrapper that can be used for Text . The following options can be provided",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/SVGAttribute": {
      "id": "frontend/Reference/Graphics/SVGAttribute",
      "title": "SVGAttribute",
      "description": "Allows to directly set SVG attribute to a 2D graphics object",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/Text": {
      "id": "frontend/Reference/Graphics/Text",
      "title": "Text",
      "description": "Represents an arbitrary text label placed as a Graphics object",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics/Translate": {
      "id": "frontend/Reference/Graphics/Translate",
      "title": "Translate",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Graphics3D/SpotLight": {
      "id": "frontend/Reference/Graphics3D/SpotLight",
      "title": "SpotLight",
      "description": "places a fake source of light in a 3D scene (see Graphics3D)",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Inputs/EditorView": {
      "id": "frontend/Reference/Inputs/EditorView",
      "title": "EditorView",
      "description": "A view component to spawn an code-editor (fully functional)",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Inputs/InputButton": {
      "id": "frontend/Reference/Inputs/InputButton",
      "title": "InputButton",
      "description": "creates a button component and returns EventObject.",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Inputs/InputFile": {
      "id": "frontend/Reference/Inputs/InputFile",
      "title": "InputFile",
      "description": "outputs as a drag & drop file-form used to handle file input",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Inputs/InputGroup": {
      "id": "frontend/Reference/Inputs/InputGroup",
      "title": "InputGroup",
      "description": "groups different event-generators such as InputRange, InputButton or in general EventObject into a new EventObject",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Inputs/InputRange": {
      "id": "frontend/Reference/Inputs/InputRange",
      "title": "InputRange",
      "description": "creates a basic combo of a slider and numerical input field and returns EventObject.",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Inputs/InputTable": {
      "id": "frontend/Reference/Inputs/InputTable",
      "title": "InputTable",
      "description": "it places a sort of small Excel-like table editor for list provided. This is a great solution for a large tables, since it does support lazy loading from a server",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Inputs/InputText": {
      "id": "frontend/Reference/Inputs/InputText",
      "title": "InputText",
      "description": "creates an event-generator for an input-text field and returns EventObject",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Inputs/Slider": {
      "id": "frontend/Reference/Inputs/Slider",
      "title": "Slider",
      "description": "This is not supported. Please, use alternative way InputRange",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Inputs/TextView": {
      "id": "frontend/Reference/Inputs/TextView",
      "title": "TextView",
      "description": "This is an internal part of InputText",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Misc/Async": {
      "id": "frontend/Reference/Misc/Async",
      "title": "Async",
      "description": "SetTimeout",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Misc/Events": {
      "id": "frontend/Reference/Misc/Events",
      "title": "Events",
      "description": "EventObject",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Misc/Language": {
      "id": "frontend/Reference/Misc/Language",
      "title": "Language",
      "description": "LeakyModule",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Misc/Promise": {
      "id": "frontend/Reference/Misc/Promise",
      "title": "Promise",
      "description": "Promise",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/ArrayPlot": {
      "id": "frontend/Reference/Plotting/ArrayPlot",
      "title": "ArrayPlot",
      "description": "Generates a plot, where values are shown in a discrete array of blocks",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/BarChart": {
      "id": "frontend/Reference/Plotting/BarChart",
      "title": "BarChart",
      "description": "generates a bar chart for a list of heights",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/BubbleChart": {
      "id": "frontend/Reference/Plotting/BubbleChart",
      "title": "BubbleChart",
      "description": "creates a bubble chart for a list of triples",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/ContourPlot": {
      "id": "frontend/Reference/Plotting/ContourPlot",
      "title": "ContourPlot",
      "description": "Generates a contour plot of $f$ as a function of $x$ and $y$",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/DensityPlot": {
      "id": "frontend/Reference/Plotting/DensityPlot",
      "title": "DensityPlot",
      "description": "makes a density plot of f as a function of x and y",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/ListContourPlot": {
      "id": "frontend/Reference/Plotting/ListContourPlot",
      "title": "ListContourPlot",
      "description": "A list version of ContourPlot",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/ListCurvePathPlot": {
      "id": "frontend/Reference/Plotting/ListCurvePathPlot",
      "title": "ListCurvePathPlot",
      "description": "Plots a curve that corresponds to a smooth path through the specified points",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/ListLinePlot": {
      "id": "frontend/Reference/Plotting/ListLinePlot",
      "title": "ListLinePlot",
      "description": "Plots a line like Plot through the list of points provided",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/ListLinePlotly": {
      "id": "frontend/Reference/Plotting/ListLinePlotly",
      "title": "ListLinePlotly",
      "description": "An alternative plotting function to ListLinePlot, that supports dynamic updates, panning, zoom out of the box",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/ListStepPlot": {
      "id": "frontend/Reference/Plotting/ListStepPlot",
      "title": "ListStepPlot",
      "description": "plots the values $y1$, $y2$ ... in steps",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/ListVectorPlot": {
      "id": "frontend/Reference/Plotting/ListVectorPlot",
      "title": "ListVectorPlot",
      "description": "Plot the vector field interpolated from a specified set of vectors",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/MatrixPlot": {
      "id": "frontend/Reference/Plotting/MatrixPlot",
      "title": "MatrixPlot",
      "description": "Plots a 2D array with an arbitrary data inside with axes",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/Plot": {
      "id": "frontend/Reference/Plotting/Plot",
      "title": "Plot",
      "description": "A Swiss knife for displaying 2D data",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/Plotly": {
      "id": "frontend/Reference/Plotting/Plotly",
      "title": "Plotly",
      "description": "An alternative plotting function to Plot that uses Plotly.js",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/RandomImage": {
      "id": "frontend/Reference/Plotting/RandomImage",
      "title": "RandomImage",
      "description": "Generates a raster Image with a given size and distribution. Only RGB space is supported. The maximum value is limited to 255 for each channel",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/StackedListPlot": {
      "id": "frontend/Reference/Plotting/StackedListPlot",
      "title": "StackedListPlot",
      "description": "plots lines for each of the $datai$, with the $i^$ curve being the accumulation of values in $data1$ through $data_i$",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/StreamPlot": {
      "id": "frontend/Reference/Plotting/StreamPlot",
      "title": "StreamPlot",
      "description": "Generates a stream plot of the vector field ${vx,vy}$ as a function of $x$ and $y$",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/VectorPlot": {
      "id": "frontend/Reference/Plotting/VectorPlot",
      "title": "VectorPlot",
      "description": "Generates a vector plot of the vector field ${vx,vy}$ as a function of $x$ and $y$",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Reference/Plotting/VectorPlot3D": {
      "id": "frontend/Reference/Plotting/VectorPlot3D",
      "title": "VectorPlot3D",
      "description": "Generates a 3D vector plot of the vector field {vx,vy,vz} as a function of $x$, $y$, and $z$",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Troubleshooting": {
      "id": "frontend/Troubleshooting",
      "title": "Troubleshooting",
      "description": "If something is not working as intended, please, post an issue on a Github with the data evaluated on your Wolfram Kernel, such as",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Tutorial/Dynamics": {
      "id": "frontend/Tutorial/Dynamics",
      "title": "Dynamics",
      "description": "The way how dynamics work is quite different compared to Wolfram Mathematica. The key changes were made for the sake of performance and control (or imagination of  @JerryI - maintainer)",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Tutorial/Export notebook": {
      "id": "frontend/Tutorial/Export notebook",
      "title": "Export notebook",
      "description": "Since all magic happens inside the browser using plain Javascript, it is extremely easy to export notebook to a standalone HTML file or even React component to embed it on website (blog).",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Tutorial/Input elements": {
      "id": "frontend/Tutorial/Input elements",
      "title": "Input elements",
      "description": "Elements are provided by the independent plugin/library wljs-inputs.",
      "sidebar": "tutorialSidebar"
    },
    "frontend/Tutorial/Overview": {
      "id": "frontend/Tutorial/Overview",
      "title": "Overview",
      "description": "The whole notebook interface is made using plain Javascript, HTML powered by a Wolfram WebServer  and WLX running locally on a Wolfram Kernel. It means you can work remotely by running a server anywhere you want.",
      "sidebar": "tutorialSidebar"
    },
    "imgs/FE data binding.excalidraw 1": {
      "id": "imgs/FE data binding.excalidraw 1",
      "title": "FE data binding.excalidraw 1",
      "description": "==⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠=="
    },
    "imgs/feinput.gif": {
      "id": "imgs/feinput.gif",
      "title": "feinput.gif",
      "description": ""
    },
    "imgs/manipulate-frontend-example.excalidraw": {
      "id": "imgs/manipulate-frontend-example.excalidraw",
      "title": "manipulate-frontend-example.excalidraw",
      "description": "==⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠=="
    },
    "interpreter/Advanced/architecture": {
      "id": "interpreter/Advanced/architecture",
      "title": "Architecture of symbols",
      "description": "Features"
    },
    "interpreter/Advanced/containers": {
      "id": "interpreter/Advanced/containers",
      "title": "Containers",
      "description": "The general definition will be"
    },
    "interpreter/Advanced/meta-markers": {
      "id": "interpreter/Advanced/meta-markers",
      "title": "Meta markers",
      "description": "You can think about them as a unique property assigned to the expression in order to use selectors on them. Sometimes it comes handy to attach or evaluate new object inside the existing instance"
    },
    "interpreter/Advanced/symbols": {
      "id": "interpreter/Advanced/symbols",
      "title": "Definitions",
      "description": "Let's make the things clear."
    },
    "interpreter/Basics/graphics": {
      "id": "interpreter/Basics/graphics",
      "title": "Working with graphics",
      "description": "Easy animations"
    },
    "interpreter/Basics/js-access": {
      "id": "interpreter/Basics/js-access",
      "title": "Javascript integration",
      "description": "For deep overview of functions, containers and advanced control of evaluation process, please, see pages symbols and containers"
    },
    "interpreter/Basics/scripts": {
      "id": "interpreter/Basics/scripts",
      "title": "Symbols and expressions",
      "description": "It is assumed, you have wljs-graphics-d3 (see Libraries @ syntax) library included in your page. Most examples depend on it."
    },
    "interpreter/Basics/syntax": {
      "id": "interpreter/Basics/syntax",
      "title": "Syntax",
      "description": "For the simplicity it is better to use wolframscript or Mathematica to transpile the source code to JSONExpression format using ExportString command."
    },
    "interpreter/Extras/implementation": {
      "id": "interpreter/Extras/implementation",
      "title": "How it works",
      "description": "The idea"
    },
    "interpreter/Extras/reference": {
      "id": "interpreter/Extras/reference",
      "title": "Reference",
      "description": "Please see interpretate and other pages there"
    },
    "interpreter/intro": {
      "id": "interpreter/intro",
      "title": "",
      "description": "Minimal Wolfram Language Interpreter"
    },
    "Reference/Misc/Promise": {
      "id": "Reference/Misc/Promise",
      "title": "Promise",
      "description": ""
    }
  }
}