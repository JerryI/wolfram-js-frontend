Component[OptionsPattern[]] := With[{Color = (If[StringQ[#], #, "teal"]&) @ OptionValue["Parameters"]["AccentColor"], Event = OptionValue["Event"], ExtesionInjector = OptionValue["ExtesionInjector"]},
  EventHandler[Event, {
    "CallDropdown" -> ((Print["CallDropdown!"]; WebUISubmit[Global`UICellsDropdown[#], Global`$Client])&)
  }];

  With[{Layout = 
    {
        <div class="py-0 px-2" role="none">
            <button data-name="ClearOutputs" class="block w-full hover:bg-{Color}-400 hover:text-white text-black group flex items-center px-1 my-1 py-1 rounded text-sm leading-4" role="menuitem" tabindex="-1">
            <svg class="mr-2 h-4 w-4 text-black" viewBox="18 18 43 43" fill="currentColor" aria-hidden="true">
	            <path stroke-linejoin="round" d="M 28.4718,42.9497L 33.4216,38L 28.4718,33.0502L 31.0502,30.4718L 36,35.4216L 40.9498,30.4718L 43.5282,33.0502L 38.5784,38L 43.5282,42.9497L 40.9498,45.5282L 36,40.5784L 31.0503,45.5282L 28.4718,42.9497 Z M 57.9853,41.5355L 49.0354,50.4854C 47.9317,51.589 47,52 45,52L 24,52C 21.2386,52 19,49.7614 19,47L 19,29C 19,26.2386 21.2386,24 24,24L 45,24C 47,24 47.9317,24.4113 49.0354,25.5149L 57.9853,34.4645C 59.9379,36.4171 59.9379,39.5829 57.9853,41.5355 Z M 45,49C 46,49 46.3952,48.8828 46.914,48.3641L 55.8639,39.4142C 56.645,38.6332 56.645,37.3669 55.8639,36.5858L 46.914,27.6362C 46.3952,27.1175 46,27 45,27.0001L 24,27.0001C 22.8954,27.0001 22,27.8955 22,29.0001L 22,47.0001C 22,48.1046 22.8954,49.0001 24,49.0001L 45,49 Z "/>
              </svg>
              Clear output
            </button>
            <button data-name="Project" class="block w-full hover:bg-{Color}-400 hover:text-white text-black group flex items-center px-1 my-1 py-1 rounded text-sm leading-4" role="menuitem" tabindex="-1">
            <svg class="mr-2 h-4 w-4 text-black" viewBox="18 18 43 43" fill="currentColor" aria-hidden="true">
	            <path stroke-linejoin="round" d="M 54,54L 54,40L 33,40L 33,54L 54,54 Z M 57,34L 57,57L 30,57L 30,34L 57,34 Z M 43,25L 22,25L 22,39L 27,39L 27,42L 19,42L 19,19L 46,19L 46,31L 43,31L 43,25 Z "/>
            </svg>
              Project to a window
            </button>
            <ExtesionInjector Template={"CellDropdown-Section-1"} Event={Event}/>
        </div>
        ,
          <div class="py-0 px-2" role="none">
            <button data-name="MakeInit" class="block w-full hover:bg-{Color}-400 hover:text-white text-black group flex items-center px-1 my-1 py-1 rounded text-sm leading-4" role="menuitem" tabindex="-1">
            <svg class="mr-2 h-4 w-4 text-black" viewBox="0 0 24 24" fill="none" >
                <path d="M10.07 2.82009L3.14002 8.37008C2.36002 8.99008 1.86002 10.3001 2.03002 11.2801L3.36002 19.2401C3.60002 20.6601 4.96002 21.8101 6.40002 21.8101H17.6C19.03 21.8101 20.4 20.6501 20.64 19.2401L21.97 11.2801C22.13 10.3001 21.63 8.99008 20.86 8.37008L13.93 2.8301C12.86 1.9701 11.13 1.97009 10.07 2.82009Z" stroke="currentColor" stroke-width="1.5"      stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M12 15.5C13.3807 15.5 14.5 14.3807 14.5 13C14.5 11.6193 13.3807 10.5 12 10.5C10.6193 10.5 9.5 11.6193 9.5 13C9.5 14.3807 10.6193 15.5 12 15.5Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
              Make initialization cell
            </button>
            <ExtesionInjector Template={"CellDropdown-Section-2"} Event={Event}/>
          </div>
          
        ,
          <div class="py-0 px-2" role="none">
            <button data-name="Fade" class="block w-full hover:bg-{Color}-400 hover:text-white text-black group flex items-center px-1 my-1 py-1 rounded text-sm leading-4" role="menuitem" tabindex="-1">
            <svg class="mr-2 h-4 w-4 text-black" viewBox="0 0 24 24" fill="none" >
              <path d="M5 14H10V19M19 10H14V5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
              Shrink / Expand
            </button>
          </div>
          
        ,        
          <div class="py-0 px-2" role="none">
            <button data-name="RemoveCell" class="block w-full hover:bg-{Color}-400 hover:text-white text-black group flex items-center px-1 my-1 py-1 rounded text-sm leading-4" role="menuitem" tabindex="-1">
              <svg class="mr-2 h-4 w-4 text-black" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M8.75 1A2.75 2.75 0 006 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 10.23 1.482l.149-.022.841 10.518A2.75 2.75 0 007.596 19h4.807a2.75 2.75 0 002.742-2.53l.841-10.52.149.023a.75.75 0 00.23-1.482A41.03 41.03 0 0014 4.193V3.75A2.75 2.75 0 0011.25 1h-2.5zM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4zM8.58 7.72a.75.75 0 00-1.5.06l.3 7.5a.75.75 0 101.5-.06l-.3-7.5zm4.34.06a.75.75 0 10-1.5-.06l-.3 7.5a.75.75 0 101.5.06l.3-7.5z" clip-rule="evenodd" />
              </svg>
              Delete
            </button>
          </div>
      }     

  },

    <div id="dropdown-float" class="hidden absolute right-0 z-inf mt-6 w-56 origin-top-right divide-y divide-gray-100 rounded backdrop-blur-xl bg-white/90 drop-shadow-xl outline outline-gray-300 outline-offset-0 outline-1 text-gray-800" style="top:0; box-shadow: 1px 1px 12px 3px rgba(0,0,0,0.2)" role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
        <Layout/>
        <script type="module">
            const holder = document.getElementById('dropdown-float');
            let currentCell;
            const close = () => {
                holder.classList.add('hidden');
                window.removeEventListener('click', close);
            }

            const buttons = holder.getElementsByTagName('button');
            
            for (let i=0; i<buttons.length; i++) {
                const el = buttons[i];
                el.addEventListener('click', () => {
                    server.emitt('<Event/>', '"'+currentCell+'"', el.dataset.name);
                });
            }

            core.UICellsDropdown = async (args, env) => {
                const uid = await interpretate(args[0], env);
                console.warn(uid);
                currentCell = uid;

                holder.classList.remove('hidden');
                
                const placeholder = document.getElementById('dropdown-holder-'+uid).getBoundingClientRect();
                console.log(placeholder);
                holder.style.top = - 25 + placeholder.bottom + 'px';
                holder.style.right = (window.innerWidth - placeholder.right) + 'px';
                //e.preventDefault();
                //e.stopPropagation();
                setTimeout(() => {
                    window.addEventListener('click', close);        
                }, 20);
            };            
        </script>
    </div>
  ]
];

Options[Component] = {"Event"->"", "Parameters"->Null, "ExtesionInjector"->( "" &)};

Script = "";

{Component, Script}