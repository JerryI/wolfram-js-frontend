LeftElement[OptionsPattern[]] := With[{cell = OptionValue["Cell"], Class = If[TrueQ[OptionValue["Cell"]["Props"]["Hidden"]], "rotate-90", ""]}, 
    <div class="grow-0 self-start pr-1 mb-4 group-hover:opacity-100 opacity-0 hidden md:flex">
        <button class="button-cadd">
            <svg class="w-5 h-5 text-gray-500" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M5 12H19"  stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M12 5L12 19"  stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
        </button>
        <button class="button-chide {Class}">
            <svg class="text-gray-500 h-5 w-5 shrink-0" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
            </svg>
        </button>
    </div>
]

RightElement[OptionsPattern[]] := With[{cell = OptionValue["Cell"], Uid = OptionValue["Cell"]["Hash"]}, 
    <div class="relative grow-0 self-end pl-1 mt-1 group-hover:opacity-100 opacity-0 hidden md:flex">
        <button class="button-cmore">
            <svg class="h-5 w-5 text-gray-500" viewBox="0 0 24 24" fill="none" >
                <circle cx="18" cy="12" r="1.5" transform="rotate(90 18 12)" fill="currentColor"/>
                <circle cx="12" cy="12" r="1.5" transform="rotate(90 12 12)" fill="currentColor"/>
                <circle cx="6" cy="12" r="1.5" transform="rotate(90 6 12)" fill="currentColor"/>
            </svg>
        </button>
        <button class="button-cplay">
            <svg class="text-gray-500 h-5 w-5 shrink-0" stroke-width="1.5" viewBox="0 0 24 24" aria-hidden="true" fill="none" stroke="currentColor">
                <path d="M17.2839 11.134C17.9506 11.5189 17.9506 12.4811 17.2839 12.866L6.71601 18.9674C6.04934 19.3523 5.21601 18.8712 5.21601 18.1014L5.21601 5.8986C5.21601 5.1288 6.04934 4.64768 6.71601 5.03258L17.2839 11.134Z"></path>
            </svg>
        </button>
        <div id="dropdown-holder-{Uid}"></div>
    </div>
]

Options[RightElement] = {"Cell"->""}
Options[LeftElement] = {"Cell"->""}

Script = With[{},
    <Placebo>
        const controls = (opts) => {
            const cell = opts.cell;
            const event = opts.event;
            
            if (cell.type != 'Input') return;
            const group = document.getElementById('group-'+cell.uid);

            {
                const button = group.getElementsByClassName('button-cadd')[0];
                console.log('new cell');
                console.log(button);
                console.log(group);
                button.addEventListener('click', () => {

                    server.emitt(event, '"'+cell.uid+'"', 'AddAfterOutputs');
                });
            };

            {
                const button = group.getElementsByClassName('button-cplay')[0];
                button.addEventListener('click', () => {
                    server.emitt(cell.channel, '"'+cell.uid+'"', 'Evaluate');
                });
            };  
            
            {
                const button = group.getElementsByClassName('button-cmore')[0];
                button.addEventListener('click', () => {
                    //alert('call!');
                    server.emitt(cell.channel, '"'+cell.uid+'"', "CallDropdown");
                });
            };              

            {
                const button = group.getElementsByClassName('button-chide')[0];
                console.log('hide cell');
                const separator = document.getElementById('separator-'+cell.uid);
                button.addEventListener('click', () => {
                    if (!cell.toggle()) return;
                    //inversed state already
                    if (!cell.props["Hidden"]) {
                        if (separator) separator.classList.remove('hidden');
                        button.classList.remove('rotate-90');
                    } else {
                        if (separator) separator.classList.add('hidden');
                        button.classList.add('rotate-90');
                    }
                });
            }            
        }

        //add it to the constructor
        CellWrapper.epilog.push(controls);
    </Placebo>
]


{LeftElement, RightElement, Script}