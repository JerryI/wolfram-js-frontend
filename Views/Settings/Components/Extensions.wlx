Checkbox = ImportComponent["UI/Checkbox.wlx"];
Knob     = ImportComponent["UI/Button.wlx"];

Secret = $Options["Secret"] // EventClone;

Messager = $Options["Messager"];

controller = CreateUUID[];
installEvent = CreateUUID[];
updateEvent = CreateUUID[];


categoryPackages = SortBy[#, Function[item, -WLJS`PM`Packages[item, "wljs-meta", "priority"]]] &/@ GroupBy[
    Association[(# -> (Function[c, If[MissingQ[c], "Misc", c]] @ WLJS`PM`Packages[#, "wljs-meta", "category"])) &/@ Keys[WLJS`PM`Packages]]
  
  , Identity, Keys]; 

EventHandler[Secret, {"Load" -> Function[Null,
    EventHandler[controller, {
        name_String :> Function[state,
            If[TrueQ[WLJS`PM`Packages[name,"wljs-meta","important"]], WebUISubmit[Alert["This is a core-package. Do it on your own risk!"], $Client]];
            WLJS`PM`Packages[name, "enabled"] = state;
            Echo["CHanged!"];
            EventFire[Messager, Notifications`NotificationMessage["Info"](*`*), "A restart is required"]
            WLJS`PM`SaveConfiguration;

        ]
    }];

    EventHandler[updateEvent, Function[Null,
        DeleteFile[".wljs_timestamp"];  
        DeleteFile[".wl_timestamp"]; 
        EventFire[Messager, Notifications`NotificationMessage["Info"](*`*), "Will be checked on the next startup."];
    ]];

    With[{socket = EventClone[$Client]},
        EventHandler[socket, {
            "Closed" -> Function[Null,
                EventRemove[socket];
                EventRemove[controller];
                EventRemove[updateEvent];
                EventRemove[Secret];
                EventRemove[installEvent];
                Echo["Extensions >> destoryed"];
            ]
        }]
    ];
]}];

EventHandler[installEvent, Function[val,
    With[{url = First[StringCases[val, RegularExpression["github\\.com\\/(.*)\\/(.*)\\/?"] :> {"$1", "$2"}] ] },
        With[{data = Import[StringTemplate["https://raw.githubusercontent.com/``/``/main/package.json"]@@url , "JSON"]}, 
            If[KeyExistsQ[Association[data], "wljs-meta"],
                With[{spinner = Notifications`Spinner["Topic"->"Installation", "Body"->StringTemplate["Please wait, until an intalation of `` is finished..."][Last @ url]] (*`*)},
                    EventFire[Messager, spinner, Null];
                    WLJS`PM`InstallByURL[val, Function[{result, message},
                        EventFire[spinner["Promise"], Resolve, True];
                        If[result,
                            EventFire[Messager, Notifications`NotificationMessage["Info"](*`*), message];
                            WLJS`PM`SaveConfiguration;
                        ,
                            EventFire[Messager, "Error", message];
                        ];
                    ]];

                ];
                
            ,
                EventFire[Messager, "Warning", "A link provided does not point to a valid package!"];
            ];
        ]
    ];
]];

{
    <div class="px-4 sm:px-0 pb-3 border-b border-gray-100">
        <h3 class="text-base font-semibold leading-7 text-gray-900 dark:text-gray-300">Extensions</h3>
        <p class="mt-1 max-w-2xl text-sm leading-6 text-gray-500 dark:text-gray-500">Manage or install new</p>
    </div>
,
    Table[
        With[{Tb = Table[
            With[{Name = WLJS`PM`Packages[key, "name"], Desc = WLJS`PM`Packages[key, "description"], enabled = WLJS`PM`Packages[key, "enabled"]},
                <Checkbox Label={Name} Event={controller} Topic={Name} Description={Desc} Checked={enabled}/>
            ]
        , {key, categoryPackages[CategoryName]}]},
            <div class="mt-4 overflow-y-auto" style="max-height:60%">   
                <span class="dark:text-gray-400"><CategoryName/></span>
                <StringRiffle><Tb/></StringRiffle>
            </div> 
        ]
    , {CategoryName, Complement[Keys @ categoryPackages, {"Internal"}] }] // StringRiffle
,
    <style>
        #github-link:focus-visible {
            outline:unset;
        }
        .w15 {
            width: 15rem;
        }
    </style>
,
    <div class="pb-10 pb-10 mt-5 gap-y-2 flex flex-col">
        <div class="rounded-md px-3 pb-3 pt-2.5 shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-indigo-600">
            <label for="name" class="block text-xs font-medium text-gray-900 dark:text-gray-400">Install a new one</label>
            <input type="text" id="github-link" class="block w-full border-0 p-0 dark:bg-gray-700 text-gray-900 dark:text-gray-300 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6" placeholder="Put a Github link and leave the focus"/>
            <WebUIEventListener Id={"github-link"} Type={"blur"} Event={installEvent}/>
        </div> 
        <Knob Label={"Check updates"} Event={updateEvent} Class={"w15"}/>
    </div>   
}