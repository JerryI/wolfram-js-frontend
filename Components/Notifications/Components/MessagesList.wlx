{GenericTemplate, GenericScript}  = ImportComponent["Generic.wlx"]; 

Component[OptionsPattern[]] := With[{Controller = OptionValue["Controller"]}, WebUILazyLoad[
  With[{
    MessageList = Table[
      With[{Msg = GenericTemplate[Item["Type"], Item["Message"], "Class"->""]["Data"]},
        <li class="my-2 list-none"><Msg/></li>
      ]
    , {Item, Reverse @ ReleaseHold @ OptionValue["Data"]}],

    UId = CreateUUID[]
  },

    EventHandler[UId, Function[Null,
      EventFire[Controller, "Remove", <|"Client"->Global`$Client (*`*)|>];
      EventRemove[UId];
    ]];

    <div class="relative z-inf" aria-labelledby="slide-over-title" role="dialog" aria-modal="true">
    <div class="fixed inset-0"></div>
    <div class="fixed inset-0 overflow-hidden">
        <div id="{UId}" class="transform ease-out duration-300 transition absolute inset-0 overflow-hidden translate-x-5 opacity-0">
            <div class="pointer-events-none h-full fixed inset-y-0 right-0 flex w-40 pl-10" style="width: 35vw; max-width: 400px;">
                <div class="pointer-events-auto w-screen max-w-md">
                    <div class="flex h-full flex-col overflow-y-scroll transform overflow-hidden rounded-md sc-b transition-all text-left text-gray-500 w-70 transparent pb-1 py-6">
                      <ul class="relative p-0 mt-2 flex-1 px-4"><MessageList/></ul>
                      </div>
                </div>
            </div>
        </div>
        <script type="module">
          const list = document.getElementById('<UId/>');
          setTimeout(() => {
            list.classList.remove('translate-x-5', 'opacity-0');
            list.classList.add('translate-x-0', 'opacity-100');
          }, 10);

          let handler;
          handler = (ev) => {
            console.log(ev.target.tagName);
            if (ev.target.tagName === 'UL' || ev.target.tagName === 'ul' || ev.target == list) {
              list.removeEventListener('click', handler);
              list.classList.add('translate-x-5', 'opacity-0');
              list.classList.remove('translate-x-0', 'opacity-100');
              setTimeout(() => {
                server.emitt('<UId/>', 'True', 'Remove');
              }, 300);
            }
            ev.stopPropagation();
          };

          list.addEventListener('click', handler);

         
        </script>
      </div>
    </div>
]
, "Event" -> Controller] ]

Options[Component] = {"Event" -> "BlackHole"}

Component