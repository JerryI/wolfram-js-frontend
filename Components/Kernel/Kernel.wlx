Item := ImportComponent["Item.wlx"];

appendHeld[Hold[list_], a_] := list = Append[list, a];
removeHeld[Hold[list_], a_] := list = (list /. a -> Nothing);
SetAttributes[appendHeld, HoldFirst];
SetAttributes[removeHeld, HoldFirst];

Component[OptionsPattern[]] := With[{Controller = CreateUUID[], ButtonId = CreateUUID[], LazyLoad = CreateUUID[], Messager=OptionValue["Messager"], KernelList = OptionValue["KernelList"]},
  EventHandler[ButtonId, Function[Null,
    With[{client = $Client, m = Messager, kernel = LocalKernel["Name"->RandomWord[]]},
        Print["Working!"];
        appendHeld[KernelList, kernel];
        EventHandler[EventClone[kernel], {
          "Exit" -> Function[Null, removeHeld[KernelList, kernel] ],
          "Connected" -> Function[Null, 
            kernel["Container"] = StandardEvaluator`Container[kernel](*`*);
            kernel["ContainerReadyQ"] = True;
            EventFire[kernel, "Initialization", "Complete"];
          ]
        }];

        EventFire[Controller, "Append", <|"Client"->client, "Data" -> Item["Messager"->m, "Kernel"->kernel, "Client"->client] |> ];
        kernel // Kernel`Start;
    ]    
  ]];

  {
    <div class="text-xs group items-center font-semibold px-4 leading-8 text-gray-454 flex">
      Kernels
      <button class="ml-auto" id="{ButtonId}">
      <svg  fill="currentColor" class="opacity-0 group-hover:opacity-100 h-4 w-4" viewBox="0 0 512 512" enable-background="new 0 0 512 512">
        <g>
          <g>
            <path d="M256,11C120.9,11,11,120.9,11,256s109.9,245,245,245s245-109.9,245-245S391.1,11,256,11z M256,460.2    c-112.6,0-204.2-91.6-204.2-204.2S143.4,51.8,256,51.8S460.2,143.4,460.2,256S368.6,460.2,256,460.2z"/>
            <path d="m357.6,235.6h-81.2v-81.2c0-11.3-9.1-20.4-20.4-20.4-11.3,0-20.4,9.1-20.4,20.4v81.2h-81.2c-11.3,0-20.4,9.1-20.4,20.4s9.1,20.4 20.4,20.4h81.2v81.2c0,11.3 9.1,20.4 20.4,20.4 11.3,0 20.4-9.1 20.4-20.4v-81.2h81.2c11.3,0 20.4-9.1 20.4-20.4s-9.1-20.4-20.4-20.4z"/>
          </g>
        </g>
      </svg>
      </button>
    </div>
  ,
    <WebUIEventListener Type={"click"} Id={ButtonId} Event={ButtonId} />
  ,
    With[{
      KernelListComponent := 
        Block[{client = $Client},
          Table[
            With[{component = Item["Messager"->Messager, "Kernel"->K, "Client"->client]},
              With[{Template = component["HTML"], Script = component["Script"]},
                {
                  <Template/>
                ,
                  <script>
                    <Script/>
                  </script>
                }
              ]
            ]
          , {K, ReleaseHold[KernelList]} ] // Flatten // ToStringRiffle
        ]
    },
  
    <WebUIContainer Event={Controller}>
      <div class="mt-0 shrink-0 gap-y-1 flex flex-col">
          <WebUILazyLoad Event={LazyLoad}>
            <KernelListComponent/>
          </WebUILazyLoad>
          <WebUIContainerChild/> 
          <WebUIOnLoad Event={LazyLoad} Type={"Load"}/>
      </div>  
    </WebUIContainer>
   ]
  }
];

Options[Component] = {"Messager"->""}

Component