<|"Notebook" -> <|"FocusedCell" -> CellObj[JerryI`Notebook`CellObj`$317], 
   "Objects" -> <||>, "Path" -> "/users/kirill/Library/CloudStorage/OneDrive-\
Personal/\:0414\:043e\:043a\:0443\:043c\:0435\:043d\:0442\:044b/\:041a\:043e\
\:043d\:0444\:0435\:0440\:0435\:043d\:0446\:0438\:0438/WL2024/Inverse \
kinematics.wln", "ReadOnly" -> False|>, 
 "Cells" -> {<|"Data" -> ".md\n# Planar Inverse \
Kinematics\n\n\n![](attachments/planar_ik.png)\n\n<small>src. \
[FOUNDRY](https://learn.foundry.com/modo/content/help/pages/animation/modifie\
rs/planar_ik.html)</small>\n\n", "Display" -> "codemirror", 
    "Hash" -> "4e76627d-1f0d-4ef3-b536-ed2ad76e56b2", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> "# Planar Inverse \
Kinematics\n\n\n![](attachments/planar_ik.png)\n\n<small>src. \
[FOUNDRY](https://learn.foundry.com/modo/content/help/pages/animation/modifie\
rs/planar_ik.html)</small>\n\n", "Display" -> "markdown", 
    "Hash" -> "2b445f49-70dc-42ce-b0a0-cdca13de4bc7", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> ".md\n*the actual implemntation is not well-optimized for \
Wolfram Language, but serves a good purpose for the demonstration*", 
    "Display" -> "codemirror", "Hash" -> 
     "9a42d881-69b9-47ce-a30e-d3f89c671eb5", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> "\n*the actual implemntation is not well-optimized for Wolfram \
Language, but serves a good purpose for the demonstration*", 
    "Display" -> "markdown", "Hash" -> 
     "7cb0961f-79c5-475c-9dab-96dfa79fdcd4", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> ".md\nDefine a bunch of points connect them into a segmented \
line with fixed length", "Display" -> "codemirror", 
    "Hash" -> "c5c38666-1e8a-4040-9c04-4e9e62ff32cd", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> "\nDefine a bunch of points connect them into a segmented line \
with fixed length", "Display" -> "markdown", 
    "Hash" -> "79bd876d-abb4-403a-ba42-6a6d0cb29939", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> "chain = Table[Exp[-\[Phi]]{-Cos[\[Phi]], Sin[\[Phi]]}, \
{\[Phi], 0, \[Pi] - \[Pi]/7, \[Pi]/7.0}];\nGraphics[{\n    Line[chain // \
Offload], Black, \n    PointSize[0.04], Point[chain // Offload], Red,\n    \
EventHandler[Point[chain // Last], {\n      \"drag\" -> handler\n    }]\n  \
},\n  Axes->True, PlotRange->{{-1,0.2}, {0,0.4}}, ImageSize->400\n]", 
    "Display" -> "codemirror", "Hash" -> 
     "760cb513-b707-4929-95f5-f0deae45ba54", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False, "init" -> False|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> ".md\n*Try to drag a red dot*", "Display" -> "codemirror", 
    "Hash" -> "371552c0-2e7d-4eb6-bff3-41a1cc4387cd", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> "*Try to drag a red dot*", "Display" -> "markdown", 
    "Hash" -> "86ee66fe-8ad8-42a3-b957-b8a3922f9a7d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> ".md\n## FABRIK Solver\nOriginal paper published in \
2011\n\n<iframe class=\"rounded-md border-0 mt-4\" style=\"width:600px; \
height:400px\" \
src=\"http://www.andreasaristidou.com/publications/papers/FABRIK.pdf\"></ifra\
me>", "Display" -> "codemirror", "Hash" -> 
     "48e94704-986a-4cc0-b721-9c40c707d68b", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> "## FABRIK Solver\nOriginal paper published in 2011\n\n<iframe \
class=\"rounded-md border-0 mt-4\" style=\"width:600px; height:400px\" \
src=\"http://www.andreasaristidou.com/publications/papers/FABRIK.pdf\"></ifra\
me>", "Display" -> "markdown", "Hash" -> 
     "f03d8dc5-b12a-41af-b593-c2ee6e49de00", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> ".md\nFor the demonstration purposes, we implemented this in \
the simples possible way.", "Display" -> "codemirror", 
    "Hash" -> "49a7b0f2-b8a7-4d83-aedc-1d2182914cff", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> "For the demonstration purposes, we implemented this in the \
simples possible way.", "Display" -> "markdown", 
    "Hash" -> "bad92897-429c-41b6-a32f-e5dddf98980f", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> "handler = Function[target,\n  Module[{buffer = chain, origin \
= {-1,0}, prev = chain, lengths = Norm /@ (chain // Reverse // Differences) \
// Reverse},\n    buffer = Table[With[{p = chain[[-i]]},\n      If[i === 1,\n \
       prev = target;\n        target\n      ,\n    \n        prev = prev - \
Normalize[(prev - p)] lengths[[1-i]];\n        prev \n      ]\n    ]   \n    \
, {i, chain // Length}] // Reverse;\n\n    buffer = Table[With[{p = \
buffer[[i]]},\n      If[i === 1,\n        prev = origin;\n        origin\n    \
  ,\n    \n        prev = prev - Normalize[(prev - p)] lengths[[i-1]];\n      \
  prev \n      ]\n    ]\n    , {i, chain // Length}];\n\n    chain = \
buffer;\n   ]\n];", "Display" -> "codemirror", 
    "Hash" -> "12fcb45d-6b5f-4514-a66d-56f9fe89eea9", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>, 
   <|"Data" -> " ", "Display" -> "codemirror", 
    "Hash" -> "128d776f-11ba-4330-a1ba-977eb842eceb", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "2aadc485-dddc-4520-b29f-cf4747c3ea74"|>}, "serializer" -> "jsfn4"|>
