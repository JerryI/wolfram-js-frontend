<|"Notebook" -> <|"FocusedCell" -> CellObj[JerryI`Notebook`CellObj`$57], 
   "Objects" -> <||>, "Path" -> "/users/kirill/Github/wolfram-js-frontend-dev\
/Demos/05 - Interaction/Inverse kinematics.wln", "ReadOnly" -> False|>, 
 "Cells" -> {<|"Data" -> ".md\n# Planar Inverse \
Kinematics\n\n\n![](attachments/planar_ik.png)\n\n<small>src. \
[FOUNDRY](https://learn.foundry.com/modo/content/help/pages/animation/modifie\
rs/planar_ik.html)</small>\n\n", "Display" -> "codemirror", 
    "Hash" -> "c3756dec-b6c0-42ba-aab2-cb139ad0d4e2", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> "# Planar Inverse \
Kinematics\n\n\n![](attachments/planar_ik.png)\n\n<small>src. \
[FOUNDRY](https://learn.foundry.com/modo/content/help/pages/animation/modifie\
rs/planar_ik.html)</small>\n\n", "Display" -> "markdown", 
    "Hash" -> "77597ec5-f6b9-4d6f-9c24-ba6c3aa65233", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> ".md\n*the actual implemntation is not well-optimized for \
Wolfram Language, but serves a good purpose for the demonstration*", 
    "Display" -> "codemirror", "Hash" -> 
     "e9d767e0-dcc7-4a46-9e34-16d6bb20cb93", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> "\n*the actual implemntation is not well-optimized for Wolfram \
Language, but serves a good purpose for the demonstration*", 
    "Display" -> "markdown", "Hash" -> 
     "090efb49-3743-4adf-a427-2b521eb3637b", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> ".md\nDefine a bunch of points connect them into a segmented \
line with fixed length", "Display" -> "codemirror", 
    "Hash" -> "494a78ce-4624-4b8f-9f42-841284630b79", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> "\nDefine a bunch of points connect them into a segmented line \
with fixed length", "Display" -> "markdown", 
    "Hash" -> "d06004bd-b9dd-4a6d-abad-1f1b2f861b56", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> "ClearAll[handler];\n\nchain = \
Table[Exp[-\[Phi]]{-Cos[\[Phi]], Sin[\[Phi]]}, {\[Phi], 0, \[Pi] - \[Pi]/7, \
\[Pi]/7.0}];\nGraphics[{\n    Line[chain // Offload], Black, \n    \
PointSize[0.04], Point[chain // Offload], Red,\n    EventHandler[Point[chain \
// Last], {\n      \"drag\" -> handler\n    }]\n  },\n  Axes->True, \
PlotRange->{{-1,0.2}, {0,0.4}}, ImageSize->400\n]", 
    "Display" -> "codemirror", "Hash" -> 
     "51320dda-ec5c-4fef-b8a8-5716bff40261", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False, "init" -> False|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> ".md\n*Try to drag a red dot*", "Display" -> "codemirror", 
    "Hash" -> "50673d79-d108-4d16-9f31-bf59a49da743", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> "*Try to drag a red dot*", "Display" -> "markdown", 
    "Hash" -> "f5443892-4255-48af-b2bc-8e3fb6f955ba", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> ".md\n## FABRIK Solver\nOriginal paper published in \
2011\n\n<iframe class=\"rounded-md border-0 mt-4\" style=\"width:600px; \
height:400px\" \
src=\"http://www.andreasaristidou.com/publications/papers/FABRIK.pdf\"></ifra\
me>", "Display" -> "codemirror", "Hash" -> 
     "03f962e7-d28e-47fe-951d-3a5dbef88b0d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> "## FABRIK Solver\nOriginal paper published in 2011\n\n<iframe \
class=\"rounded-md border-0 mt-4\" style=\"width:600px; height:400px\" \
src=\"http://www.andreasaristidou.com/publications/papers/FABRIK.pdf\"></ifra\
me>", "Display" -> "markdown", "Hash" -> 
     "38994437-0ef4-434d-a1ae-20d85980ff79", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> ".md\nFor the demonstration purposes, we implemented this in \
the simples possible way.", "Display" -> "codemirror", 
    "Hash" -> "94b32435-1b94-4b5f-9280-309f22f83da9", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> "For the demonstration purposes, we implemented this in the \
simples possible way.", "Display" -> "markdown", 
    "Hash" -> "37b6468f-5472-4d89-a276-ea9b99dfd688", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "533a684b-1dc5-4cb2-b315-aa4114591399"|>, 
   <|"Data" -> "handler = Function[target,\n  Module[{buffer = chain, origin \
= {-1,0}, prev = chain, lengths = Norm /@ (chain // Reverse // Differences) \
// Reverse},\n    buffer = Table[With[{p = chain[[-i]]},\n      If[i === 1,\n \
       prev = target;\n        target\n      ,\n    \n        prev = prev - \
Normalize[(prev - p)] lengths[[1-i]];\n        prev \n      ]\n    ]   \n    \
, {i, chain // Length}] // Reverse;\n\n    buffer = Table[With[{p = \
buffer[[i]]},\n      If[i === 1,\n        prev = origin;\n        origin\n    \
  ,\n    \n        prev = prev - Normalize[(prev - p)] lengths[[i-1]];\n      \
  prev \n      ]\n    ]\n    , {i, chain // Length}];\n\n    chain = \
buffer;\n   ]\n];", "Display" -> "codemirror", 
    "Hash" -> "51c546b7-4774-412d-8dda-a123e5c1b0be", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "533a684b-1dc5-4cb2-b315-aa4114591399"|>}, 
 "serializer" -> "jsfn4"|>
