<|"Notebook" -> <|"Controller" -> "cc6f8f5b-33d2-4517-b267-70cf6ea96372", 
   "FocusedCell" -> CellObj[JerryI`Notebook`CellObj`$705], 
   "MessangerChannel" -> Messanger, "ModalsChannel" -> 
    "b992c715-2589-4e0d-8f40-5321b2676bcb", "Objects" -> <||>, 
   "Path" -> "/Users/kirill/Github/wolfram-js-frontend/Demos/05 - \
Interaction/Bubbles 2.wln", "ReadOnly" -> True, 
   "TOC" -> {Notebook`Editor`TOC`Private`heading[1, 
      "Dynamically generated disks PT2", 
      CellObj[JerryI`Notebook`CellObj`$684]], 
     Notebook`Editor`TOC`Private`heading[2, "Pool of objects parameters", 
      CellObj[JerryI`Notebook`CellObj`$688]], 
     Notebook`Editor`TOC`Private`heading[2, "Implementation", 
      CellObj[JerryI`Notebook`CellObj`$702]], 
     Notebook`Editor`TOC`Private`heading[2, "Notes", 
      CellObj[JerryI`Notebook`CellObj`$712]]}|>, 
 "Cells" -> {<|"Data" -> ".md\n# Dynamically generated disks PT2\nHere we \
will demonstrate how to append and remove many instances of dynamic graphics \
primitives", "Display" -> "codemirror", 
    "Hash" -> "206c2c18-f59d-4e97-a920-3e3187ff1993", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "# Dynamically generated disks PT2\nHere we will demonstrate \
how to append and remove many instances of dynamic graphics primitives", 
    "Display" -> "markdown", "Hash" -> 
     "0b93d54e-71f0-4a0f-b8b0-c1a1546fb1ba", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> ".md\nThe complexity comes mostly from the fact, that we don't \
have a direct access from Wolfram Kernel to the frontend, but only WebSockets \
protocol, which gives a big overhead. The only solution to maintain good \
performance is to minimize numbers of transactions.\n\n<br/>\n\nThink about \
it was a GPU-CPU comminucation, which also comes with similar restrictions", 
    "Display" -> "codemirror", "Hash" -> 
     "0a1bd384-964d-4f5a-8ba4-bc013901ec9f", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "The complexity comes mostly from the fact, that we don't have \
a direct access from Wolfram Kernel to the frontend, but only WebSockets \
protocol, which gives a big overhead. The only solution to maintain good \
performance is to minimize numbers of transactions.\n\n<br/>\n\nThink about \
it was a GPU-CPU comminucation, which also comes with similar restrictions", 
    "Display" -> "markdown", "Hash" -> 
     "c7302bdf-3e6e-49af-9aa5-08e576503efc", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> 
     ".md\n## Pool of objects parameters\nThis is going to be our buffers", 
    "Display" -> "codemirror", "Hash" -> 
     "6b79976f-8268-4270-8d1d-f4026b87bd8e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> 
     "## Pool of objects parameters\nThis is going to be our buffers", 
    "Display" -> "markdown", "Hash" -> 
     "ed0c5188-76cb-4d8b-8a43-9c7e62ef6728", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "cPool = Table[{0.,0.}, {i,100}];\nvPool = cPool;\nrPool = \
Table[0., {i,100}];\n\noPool = Table[Null, {i,100}];", 
    "Display" -> "codemirror", "Hash" -> 
     "aa9cc71a-de3c-4f2e-8976-edbdf5fecb0c", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> ".md\nThe general idea is not to allocate new variables for \
new object, but rather reuse objects from the pool.", 
    "Display" -> "codemirror", "Hash" -> 
     "63a222ce-3edd-4971-a027-ac5f6f6e5e1a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "The general idea is not to allocate new variables for new \
object, but rather reuse objects from the pool.", "Display" -> "markdown", 
    "Hash" -> "b1d42c01-e687-4e9f-8a13-bbdcccff0bfb", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> ".md\nGraphical output and mouse listener", 
    "Display" -> "codemirror", "Hash" -> 
     "051637c7-a70f-4273-8cbe-818c3c6675d2", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "Graphical output and mouse listener", 
    "Display" -> "markdown", "Hash" -> 
     "a05ec698-121c-4290-8eef-42b3e1f8912d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "scene = FrontInstanceReference[];\nGraphics[{White, \
EventHandler[Rectangle[{-1,-1}, {1,1}], {\"mousemove\"->handler[scene]}], \
Green, scene}, ImagePadding->None]", "Display" -> "codemirror", 
    "Hash" -> "ae33f427-b0cf-449e-8e1c-3cec79cd065e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> ".md\nOur future loop. We don't need to evaluate it now", 
    "Display" -> "codemirror", "Hash" -> 
     "4ba70111-41b7-4609-b73c-bf1ca997fcb6", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "Our future loop. We don't need to evaluate it now", 
    "Display" -> "markdown", "Hash" -> 
     "a4b05ee7-048b-4d50-8b15-96792c54c9dd", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "ClearAll[handler]\nhandler[scene_] := Function[xy, \n    \
If[!created[xy, scene], update];\n];", "Display" -> "codemirror", 
    "Hash" -> "e4cd8752-67d0-44c2-8a01-6dfbda4a202e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> ".md\nAnd to stop it simply", "Display" -> "codemirror", 
    "Hash" -> "c9cc5c0f-fa08-4955-8f4b-b6f33011bc2b", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "And to stop it simply", "Display" -> "markdown", 
    "Hash" -> "c6bd154a-1c30-4ade-a7af-e47f04e3f3d4", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, <|"Data" -> "handler = Null;", 
    "Display" -> "codemirror", "Hash" -> 
     "ae3ff362-6bc3-49b1-90ab-95eec7cbdc3f", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> ".md\n## Implementation", "Display" -> "codemirror", 
    "Hash" -> "a285e9df-78ce-4e94-a561-934057bba124", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "## Implementation", "Display" -> "markdown", 
    "Hash" -> "e75fff2f-290d-4284-a519-01cc5189257d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> ".md\nUpdate positions and radiuses based on velocities", 
    "Display" -> "codemirror", "Hash" -> 
     "be5373eb-81bb-4c15-b6d3-81a3082e7a2e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "Update positions and radiuses based on velocities", 
    "Display" -> "markdown", "Hash" -> 
     "addef2f7-3b5f-4107-8360-6f1dd75df692", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "update := With[{},\n  {cPool, rPool} = \
Transpose[MapIndexed[Function[{a, index},\n    (* if slot is not empty - \
recalculate *)\n    If[oPool[[index//First]] =!= Null,\n        \n      \
If[a[[2]] <= 0.002, \n        (* if radius is too small - remove an object \
*)\n        remove[index//First];\n        a\n      ,\n        (* if ok - \
animate *)\n        {a[[1]] + 0.05 vPool[[index//First]], 0.95 a[[2]]}\n      \
]\n      \n    ,\n      a\n    ]\n    \n  ], {cPool, rPool} // \
Transpose]];\n];\n\nremove[index_] := (\n  (* destroy instance on the \
frontend *)\n  Delete[oPool[[index]]]; \n  oPool[[index]] = Null\n);", 
    "Display" -> "codemirror", "Hash" -> 
     "d728fe81-c4d2-4e4b-a37f-e07278dff28a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> ".md\nFor creating we also need a function", 
    "Display" -> "codemirror", "Hash" -> 
     "aeacec0a-41a9-47b2-86ba-e2682ca96f9c", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "For creating we also need a function", 
    "Display" -> "markdown", "Hash" -> 
     "388f0e31-7cd4-48bb-82c5-26a82067a900", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "created[xy_, scene_] := With[{\n  (* find empty slot *)\n  \
slot = FirstPosition[oPool, Null]\n},\n  If[!MissingQ[slot],\n    With[{s = \
slot // First},\n\n      (* initial positions and etc *)\n      cPool[[s]] = \
xy;\n      rPool[[s]] = 0.05;\n      vPool[[s]] = RandomReal[{-1,1}, 2];\n    \
  oPool[[s]] = True;\n\n      (* update so that object wont appear in an odd \
way *)\n      update;\n\n      (* create an instance of Disk on a graph *)\n  \
    With[{\n        group = FrontInstanceGroup[],\n        o = {\n          \
Hue[RandomReal[{0,1}],1,1],\n                                                \
(* prevent double updates *)\n          Disk[Offload[cPool[[s]]], \
Offload[rPool[[s]], \"Static\"->True]]\n        }\n      },\n        \
oPool[[s]] = group;\n        FrontSubmit[o//group, scene];\n      ];\n    \
];\n\n    True\n  ,\n    False\n  ]\n]", "Display" -> "codemirror", 
    "Hash" -> "ea73ec63-dfb8-45e0-bdbc-ed7b952bc054", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> ".md\n---\n\n<br/>\n<br/>\n\n*Expected \
result*\n\n<br/>\n\n![](attachments/Bubbles%20video%20to%20gif.gif)", 
    "Display" -> "codemirror", "Hash" -> 
     "ac8d0b63-916f-4331-8605-9dad98d87c70", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "---\n\n<br/>\n<br/>\n\n*Expected \
result*\n\n<br/>\n\n![](attachments/Bubbles%20video%20to%20gif.gif)", 
    "Display" -> "markdown", "Hash" -> 
     "32b931c9-6209-4e3b-b07f-c4b1eabf8ed8", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> ".md\n## Notes\nUsing `AnimationEventListener`, one can also \
make this animation continuous.", "Display" -> "codemirror", 
    "Hash" -> "6b7806a8-e5f9-4b5f-882d-192936e44a14", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, 
   <|"Data" -> "## Notes\nUsing `AnimationEventListener`, one can also make \
this animation continuous.", "Display" -> "markdown", 
    "Hash" -> "c15ebc51-09ab-4e19-9575-44f9ebeaf4f2", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>, <|"Data" -> " \n\n", 
    "Display" -> "codemirror", "Hash" -> 
     "c782045c-d01f-4353-84ee-96b42491bd31", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "883ba6da-4d6f-49b2-b13c-a5a319a790d5"|>}, "serializer" -> "jsfn4"|>
