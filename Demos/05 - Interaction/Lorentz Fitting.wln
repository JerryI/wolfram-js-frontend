<|"Notebook" -> <|"ReadOnly"->True, "FocusedCell" -> CellObj[JerryI`Notebook`CellObj`$138], 
   "Objects" -> <|"8d493ce0-bf4e-4367-bdb6-fccfbd2cd4cc" -> 
      <|"Public" -> Hold[WLXEmbed[{"<button style=\"\" \
id=\"d21486ad-5273-4237-b2e1-df2cfbf81492\" class=\"sm-controls rounded \
bg-white px-2 py-1 text-xs font-semibold text-gray-900 shadow-sm ring-1 \
ring-inset ring-gray-300 hover:bg-gray-50 \" type=\"button\">Add \
osc</button>", "<script type=\"module\"> const el = \
document.getElementById('d21486ad-5273-4237-b2e1-df2cfbf81492');\n            \
el.addEventListener('click', (event)=>{\n                \
server.kernel.emitt('8b601105-60d0-494a-86a1-63df8d8335e2', 'True', \
'Default');     \n            });</script>"}]]|>|>, 
   "Path" -> "/users/kirill/Library/Application \
Support/wljs-notebook/Examples/02 - Dynamics/Interaction/Lorentz Fitting.wln"\
|>, "Cells" -> {<|"Data" -> ".md\n## Complex curves fitting\nReal-life data \
and a bunch of oscillators\n\nPlease <span style=\"color:red\">run \
initialization cells first</span>!", "Display" -> "codemirror", 
    "Hash" -> "d9eacd73-d0d2-40ef-b3ef-e5bc737abacf", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> "\n## Complex curves fitting\nReal-life data and a bunch of \
oscillators\n\nPlease <span style=\"color:red\">run initialization cells \
first</span>!", "Display" -> "markdown", 
    "Hash" -> "b0f7f8a6-1694-42b6-997c-a6bfa23692ea", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> ".md\nImport data", "Display" -> "codemirror", 
    "Hash" -> "8a840e40-01e3-4e25-acf7-fb66696fc3ff", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, <|"Data" -> "\nImport data", 
    "Display" -> "markdown", "Hash" -> 
     "1da40d51-9a01-4b7e-9abe-6d7f061b6b7a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> "exp = Import[\"fmo_thz.dat\", \"TSV\", HeaderLines->1];", 
    "Display" -> "codemirror", "Hash" -> 
     "773365cb-2b5a-4ed1-a6d2-7d6cd55f678f", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False, "init" -> True, 
      "InitGroup" -> True|>, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> "(* manipulations *)\nCrop[min_, max_][data_List] := \
Select[data, (#[[1]] >= min && #[[1]] <= max)&]\nTransformY[level_, \
scale_:1][data_] := {#[[1]], scale #[[2]] + level} &/@ \
data;\nTransformX[level_, scale_:1][data_] := {scale #[[1]] + level, #[[2]]} \
&/@ data;\nDropHalf[exp_List] := Drop[exp, -Floor[Length[exp]/2]]\n(* \
plotting *)\nRects[pts_, size_:{1,1}] := Rectangle[# - size, # + size] &/@ \
pts;\nTriags[pts_, size_:{1,1}] := Polygon[{{-0.5,-1/3}size + #, \
{0,1-1/3}size + #, {0.5,-1/3}size + #}] &/@ pts;", "Display" -> "codemirror", 
    "Hash" -> "c1c2d14d-cedb-4bc9-9260-9f994c4a274b", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False, "init" -> True, 
      "InitGroup" -> True|>, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> ".md\nPlot experimental data", "Display" -> "codemirror", 
    "Hash" -> "82c7d30f-15dd-474b-99bc-c6238e9646d3", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> "\nPlot experimental data", "Display" -> "markdown", 
    "Hash" -> "62bc633c-e898-4070-b089-29787174c405", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> "ListLinePlot[exp // Crop[10,130], Epilog->{\n  \
TransitionType[\"Linear\"],\n  TransitionDuration[70],\n  \
MetaMarker[\"plot\"]\n}, PlotRange->Full, Frame->True, \
FrameLabel->{\"wavenumber (cm^{-1})\", \"absorption\"}, \
FrameStyle->Directive[FontSize->14], \
FrameTicksStyle->Directive[FontSize->14], ImageSize->500]", 
    "Display" -> "codemirror", "Hash" -> 
     "4d7238c9-274c-4a7e-98cd-9afd66126283", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False, "init" -> True, 
      "InitGroup" -> True|>, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> ".md\nNow we need a fitter", "Display" -> "codemirror", 
    "Hash" -> "bc20ce2b-db7f-4a36-8250-494add609d99", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> "\nNow we need a fitter", "Display" -> "markdown", 
    "Hash" -> "d0c04542-7d8a-49d9-85ac-15080ea8c0f2", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, <|"Data" -> "modes = {};", 
    "Display" -> "codemirror", "Hash" -> 
     "0e266dd3-633b-4389-b69f-e00cfb320aff", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False, "init" -> True, 
      "InitGroup" -> True|>, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> "lorentz[\[Omega]0_, \[Gamma]_, max_][\[Omega]_] := (*FB[*)((2 \
max \[Gamma])(*,*)/(*,*)(((*SpB[*)Power[\[Omega]0(*|*),(*|*)2](*]SpB*) - \
(*SpB[*)Power[\[Omega](*|*),(*|*)2](*]SpB*)) - I \[Gamma] \
\[Omega]))(*]FB*)\nabsorption[\[Omega]_] :=  \[Omega](*SqB[*)Sqrt[1.0 + \
Sum[mode[\[Omega]], {mode, modes}]](*]SqB*) // Im", 
    "Display" -> "codemirror", "Hash" -> 
     "d207ecc1-82e2-4939-b279-eb38d42ad244", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False, "init" -> True, 
      "InitGroup" -> True|>, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> 
     ".md\nAfter evaluating initialization cells, please, run __this one__", 
    "Display" -> "codemirror", "Hash" -> 
     "4d497c03-10d5-4680-86c7-964f7837f2c8", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> 
     "\nAfter evaluating initialization cells, please, run __this one__", 
    "Display" -> "markdown", "Hash" -> 
     "0a1a4ec7-9f9a-40ff-99b6-885db3f9072d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> "LeakyModule[{sim = {}, update}, With[{win = \
CurrentWindow[]},\n  update := (sim = Table[{\[Omega], absorption[\[Omega]]}, \
{\[Omega], 10, 130, 0.4}]; test = sim);\n  update;\n\n  \
FrontSubmit[{(*VB[*)(RGBColor[0.880722, 0.611041, \
0.142051])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3I\
SSxJTWMGyXMgyRf5HIl+fl/vjX3Rv+oPt5b2PrYv2jxrnfouvUP2ALwBIFo=\"*)(*]VB*), \
Offload[sim] // Line}, MetaMarker[\"plot\"], \"Window\"->win];\n\n  button = \
InputButton[\"Add osc\"];\n  EventHandler[button, Function[Null, \n    \n    \
With[{index = Length[modes]+1, freq = RandomReal[{20,130}]},\n      \
AppendTo[modes, lorentz[freq, 5, 100]];\n      update;\n      \
FrontSubmit[{Red, PointSize[0.05], EventHandler[\n        Point[{freq, \
100}],\n        {\"drag\" -> Function[xy, \n                    \
modes[[index]] = lorentz[xy[[1]], modes[[index]][[2]], xy[[2]]]; \n           \
         update;\n                  ]\n        ,\n        \"zoom\" -> \
Function[k,\n        \n                    modes[[index]] = \
lorentz[modes[[index,1]], k 5, modes[[index,3]]];\n                    \
update;\n                  ]\n        }]\n      }, MetaMarker[\"plot\"], \
\"Window\"->win]\n    ]\n  ]]\n] ]", "Display" -> "codemirror", 
    "Hash" -> "900cc0d8-019c-40f3-afcd-c29455762c75", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False, "init" -> False, 
      "InitGroup" -> False|>, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>, 
   <|"Data" -> "(*VB[*)(EventObject[<|\"Id\" -> \
\"8b601105-60d0-494a-86a1-63df8d8335e2\", \"Initial\" -> False, \"View\" -> \
\"8d493ce0-bf4e-4367-bdb6-fccfbd2cd4cc\"|>])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHv\
k5KRCeEJBwK8rPK3HNS3GtSE0uLUlMykkNVgEKW6SYWBonpxroJqWZpOqaGJuZ6yalJJnppiUnpyW\
lGCWnmCQnAwCSexb1\"*)(*]VB*)", "Display" -> "codemirror", 
    "Hash" -> "56c5c966-f607-4431-9c9c-b483b17c46dd", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "2a67b5ce-f0d9-48ca-9faa-722794741f34"|>}, "serializer" -> "jsfn4"|>
