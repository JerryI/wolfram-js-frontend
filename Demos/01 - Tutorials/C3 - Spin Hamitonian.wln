<|"Notebook" -> <|"ReadOnly"->True, "FocusedCell" -> CellObj[JerryI`Notebook`CellObj`$659], 
   "Objects" -> <|"5b08782b-740e-43ff-be21-295c1bf94885" -> 
      <|"Public" -> Hold[Graphics[{{}, {{{}, {}, {Hue[0.67, 0.6, 0.6], 
              Directive[PointSize[Rational[1, 72]], RGBColor[0.368417, 
                0.506779, 0.709798], AbsoluteThickness[1.6]], 
              Line[{{0, -1.9979800624419692}, {-0.09979108596456833, 
                 -1.9941582572618135}, {-0.19892478326985158, 
                 -1.9826125818245188}, {-0.29674809233465277, 
                 -1.9634609070414852}, {-0.3926240421466557, 
                 -1.9368752077884086}, {-0.48593070814037503, 
                 -1.9030588703048488}, {-0.5760657884129646, 
                 -1.8622640868632407}, {-0.6624516821332814, 
                 -1.8147944380096297}, {-0.7445402518772426, 
                 -1.7610032963616207}, {-0.821817373874535, 
                 -1.7012912861715994}, {-0.8938073107771036, 
                 -1.636103307954314}, {-0.9600769077962419, 
                 -1.5659252066170948}, {-1.020239612849099, 
                 -1.4912801071500594}, {-1.0739593311356979, 
                 -1.4127244361642404}, {-1.1209541400731173, 
                 -1.330843646990394}, {-1.160999913194579, 
                 -1.2462476652866186}, {-1.193933935319618, 
                 -1.1595660701944919}, {-1.2196586427239287, 
                 -1.0714430223698304}, {-1.2381457028605454, 
                 -0.982531943701018}, {-1.2494407793422961, 
                 -0.8934899425333447}, {-1.2536695482864757, 
                 -0.804971959776474}, {-1.2510459170385815, 
                 -0.7176245799451269}, {-1.2418840984746038, 
                 -0.6320793965271426}, {-1.2266175406890507, 
                 -0.5489457219318687}, {-1.2058304497012453, 
                 -0.46880224296591877}, {-1.180313610582088, 
                 -0.39218683682014127}, {-1.1511703724317164, 
                 -0.31958290722161875}, {-1.1200360240298883, 
                 -0.251398490238076}, {-1.0895869013012291, 
                 -0.18792838124565242}, {-1.0649284909850978, 
                 -0.12926881535798876}, {-1.0584348234043897, 
                 -0.07505874070622773}, {-1.1156333276686978, 
                 -0.02320442056695336}, {-1.5876649364729787, 
                 0.04637883351306554}, {-1.9749404795473395, 
                 0.15675045429623713}, {-1.971097076862364, 
                 0.25609964516119266}, {-1.9486746450858536, 
                 0.35299647351084285}, {-1.9179700407251121, 
                 0.4474691902452602}, {-1.8800591233411599, 
                 0.5389985679882153}, {-1.8353273196951807, 
                 0.627012701316588}, {-1.7841196264504733, 
                 0.7109532048403554}, {-1.7268187095194454, 
                 0.7902916274222541}, {-1.6638515881104896, 
                 0.8645357938302227}, {-1.595687520106752, 
                 0.9332343459291768}, {-1.5228345921689035, 
                 0.9959808718171083}, {-1.4458358827382347, 
                 1.0524178318413238}, {-1.3652653097346714, 
                 1.1022403278045945}, {-1.2817231906010769, 
                 1.1451997570500927}, {-1.1958315318306616, 
                 1.1811074184848518}, {-1.10822906124436, 1.209838180187649}, 
                {-1.0195660109812295, 1.231334384913112}, 
                {-0.9304986502901862, 1.245610276600497}, 
                {-0.8416835523472407, 1.2527574078065067}, 
                {-0.753771554254478, 1.2529517917050088}, 
                {-0.6674013261906993, 1.2464641060459458}, 
                {-0.5831923887174394, 1.2336752768692623}, 
                {-0.5017372736130697, 1.2151017921829936}, 
                {-0.42359223918951605, 1.191439371549331}, 
                {-0.3492653437403782, 1.1636433897265432}, 
                {-0.27919925281345526, 1.1330890461156886}, 
                {-0.21374234884158394, 1.1019242597442864}, 
                {-0.15308968520488106, 1.0739628047318515}, 
                {-0.09712692390357118, 1.0574556134408373}, 
                {-0.04482460524749476, 1.0770833382404095}, 
                {0.010697382875789902, 1.2723551891341383}, 
                {0.11337789062180426, 1.9389501798650755}, 
                {0.21514883285278336, 1.9768526601676832}, 
                {0.3129649204598378, 1.959143983762765}, 
                {0.40850064667487773, 1.9316460599685101}, 
                {0.5013232505004276, 1.8966749718054465}, 
                {0.5908686674608119, 1.8547394844490823}, 
                {0.6765695910752448, 1.8061813335631183}, 
                {0.7578841141136823, 1.7513654047086922}, 
                {0.8343043778947222, 1.6907003597187704}, 
                {0.9053615310809513, 1.6246382671799615}, 
                {0.9706299803873958, 1.5536715100901248}, 
                {1.0297313928534637, 1.4783291000367884}, {1.082338526024055, 
                 1.3991726512295883}, {1.128178923602742, 
                 1.3167920578464782}, {1.1670385310173277, 
                 1.2318008942413459}, {1.1987653205071704, 
                 1.1448315528864295}, {1.223273070589472, 
                 1.0565301305457717}, {1.240545532222611, 
                 0.9675510660216902}, {1.2506413567398948, 
                 0.8785515208213609}, {1.2537004020005051, 
                 0.7901854739567293}, {1.249952457703541, 
                 0.7030974677664297}, {1.2397302113504454, 
                 0.6179158814203136}, {1.2234897870059807, 
                 0.535245498670407}, {1.2018452938407622, 
                 0.45565892408371234}, {1.1756306782174941, 
                 0.3796859635818819}, {1.146018707379379, 
                 0.3077990977352461}, {1.1147714455524298, 
                 0.24039068853358633}, {1.084835142357928, 
                 0.17773028597448323}, {1.062018116823905, 
                 0.11986423849776828}, {1.0611702057709027, 
                 0.06629135997560116}, {1.1429162714875891, 
                 0.014160291749003266}, {1.745016564684791, 
                 -0.06566281712550805}, {1.9778102855408426, 
                 -0.17372268386762663}, {1.9680361127742472, 
                 -0.2725460144052643}, {1.944041039221842, 
                 -0.36906380605110933}, {1.912086936561919, 
                 -0.46308093507648457}, {1.8730055515549708, 
                 -0.554059233014494}, {1.8271599389099111, 
                 -0.6414267430843232}, {1.7748997129329722, 
                 -0.7246294532179806}, {1.7166149883812192, 
                 -0.8031446552032647}, {1.6527400951901243, 
                 -0.8764867363701205}, {1.5837510732908058, 
                 -0.9442116138134956}, {1.5101621705632273, 
                 -1.0059208234696801}, {1.4325219494897965, 
                 -1.0612654173283083}, {1.351409085064457, 
                 -1.109949709888062}, {1.2674278782613084, 
                 -1.1517349185386696}, {1.181203501491153, -1.1864427708183}, 
                {1.0933769885919875, -1.213959197400997}, 
                {1.0045999761264526, -1.2342383016817609}, 
                {0.915529193079126, -1.2473069127912064}, 
                {0.8268206798315495, -1.253270222002303}, 
                {0.7391236898749354, -1.2523193364489151}, 
                {0.6530741802557092, -1.2447421864370194}, 
                {0.5692877115737585, -1.2309403627903295}, 
                {0.4883514179671923, -1.2114567433447552}, 
                {0.41081438626389144, -1.187023652208709}, 
                {0.33717508745792146, -1.1586526247207258}, 
                {0.2678628360776475, -1.127815896467487}, 
                {0.2032056948303048, -1.0968544104992408}, 
                {0.1433623373316804, -1.0700404342140948}, 
                {0.08813221854140224, -1.057023674528846}, 
                {0.0361507154279705, -1.0889591516152022}}]}}}, {{}, {}}}, 
          {DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {HoldForm["\\mu x"], HoldForm["\\mu y"]}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Epilog -> {RGBColor[0.3333333333333333, 0.3333333333333333, 
              0.3333333333333333], Arrow[{{0, 0}, {2.3501, 0}}], 
             Arrow[{{0, 0}, {0, 2.32099}}]}, Frame -> {{False, False}, 
             {False, False}}, FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> 
            Directive[GrayLevel[0.5, 0.4]], ImageSize -> 500, 
           Method -> {"AxisPadding" -> Scaled[0.02], 
             "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {"Version" -> 1.2, 
               "TrackMousePosition" -> {True, False}, "Effects" -> 
                {"Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> 
                  {"ratio" -> 2}, "Droplines" -> {"freeformCursorMode" -> 
                    True, "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], 
             "DefaultPlotStyle" -> {Directive[RGBColor[0.368417, 0.506779, 
                 0.709798], AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6]], 
               Directive[RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], Directive[RGBColor[0.922526, 
                 0.385626, 0.209179], AbsoluteThickness[1.6]], Directive[
                RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[
                 1.6]], Directive[RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], Directive[RGBColor[0.363898, 
                 0.618501, 0.782349], AbsoluteThickness[1.6]], Directive[
                RGBColor[1, 0.75, 0], AbsoluteThickness[1.6]], Directive[
                RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[
                 1.6]], Directive[RGBColor[0.571589, 0.586483, 0], 
                AbsoluteThickness[1.6]], Directive[RGBColor[0.915, 0.3325, 
                 0.2125], AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.40082222609352647, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.28026441037696703, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "OptimizePlotMarkers" -> True, "CoordinatesToolOptions" -> 
              {"DisplayFunction" -> ({Identity[#1[[1]]], Identity[
                   #1[[2]]]} & ), "CopiedValueFunction" -> 
                ({Identity[#1[[1]]], Identity[#1[[2]]]} & )}}, 
           PlotRange -> {{-1.9749404795473395, 1.9778102855408426}, 
             {-1.9979800624419692, 1.9768526601676832}}, PlotRangeClipping -> 
            True, PlotRangePadding -> {{Scaled[0.02], Scaled[0.02]}, 
             {Scaled[0.05], Scaled[0.05]}}, Ticks -> {Automatic, 
             Automatic}}]]|>, "e95d0e56-6126-4ecc-9407-85dc03893eca" -> 
      <|"Public" -> Hold[Graphics[{{}, {{{}, {}, {Hue[0.67, 0.6, 0.6], 
              Directive[PointSize[Rational[1, 120]], RGBColor[0.368417, 
                0.506779, 0.709798], AbsoluteThickness[1.6]], 
              Line[{{0, -1.997946673012425}, {-0.09974041885523934, 
                 -1.9931457596678313}, {-0.1985366985352298, 
                 -1.9787446792684487}, {-0.29544990208476823, 
                 -1.9548713124614594}, {-0.38956155567513046, 
                 -1.9217674877199848}, {-0.47997873916761585, 
                 -1.8797490708629983}, {-0.5658426726167188, 
                 -1.8292155327117403}, {-0.6463368249070418, 
                 -1.7706475906964472}, {-0.7206945699083086, 
                 -1.7046029547475756}, {-0.7882064029930594, 
                 -1.6317112873808322}, {-0.8482266638748631, 
                 -1.552668493452052}, {-0.9001797064436293, 
                 -1.468230390043315}, {-0.9435654595088533, 
                 -1.3792058079669776}, {-0.9779643267374752, 
                 -1.2864491811043934}, {-1.003041378918982, 
                 -1.1908526844066427}, {-1.0185497969366666, 
                 -1.0933379856314764}, {-1.0243335294441471, 
                 -0.9948476797319883}, {-1.0203291352149484, 
                 -0.8963364782174978}, {-1.006566786423148, 
                 -0.7987622287460415}, {-0.9831704156964863, 
                 -0.7030768426524021}, {-0.9503569966290515, 
                 -0.6102172100370417}, {-0.9084349545162457, 
                 -0.5210961834121766}, {-0.8578017113449734, 
                 -0.4365937116940779}, {-0.7989403764990248, 
                 -0.3575482065187225}, {-0.732415602182457, 
                 -0.28474822241504993}, {-0.6588686301775764, 
                 -0.21892453127091352}, {-0.5790115641902691, 
                 -0.16074266974746976}, {-0.49362090964044336, 
                 -0.11079603581593521}, {-0.40353043027091745, 
                 -0.06959960738662524}, {-0.3096233783105298, 
                 -0.037584352057588685}, {-0.2128241620671153, 
                 -0.015092392316831951}, {-0.11408952166846513, 
                 -0.002372985081585675}, {-0.014399290133725123, 
                 0.0004206317494810598}, {0.08525317704174715, 
                 -0.006766519988771679}, {0.1838708151584052, 
                 -0.02388986877933203}, {0.28046281301293735, 
                 -0.05080498388695154}, {0.3740546275432683, 
                 -0.08726826683434502}, {0.4636979497188875, 
                 -0.13293865484048317}, {0.5484805186963447, 
                 -0.18738033698775625}, {0.627535680004249, 
                 -0.2500664732545486}, {0.700051583376077, 
                 -0.3203838955739411}, {0.7652799168875581, 
                 -0.39763875887515576}, {0.8225440763407443, 
                 -0.48106309876411074}, {0.8712466724166863, 
                 -0.5698222412490882}, {0.9108762830220585, 
                 -0.6630229988747036}, {0.9410133644910726, 
                 -0.7597225769595803}, {0.96133524285827, 
                 -0.8589381035141409}, {0.971620115251716, 
                 -0.9596566870218766}, {0.9717500015048353, 
                 -1.0608458977766573}, {0.9617125972578303, 
                 -1.1614645610518133}, {0.9416019919983533, 
                 -1.2604737441960563}, {0.9116182285336067, 
                 -1.3568478149561938}, {0.8720656941249963, 
                 -1.449585445047849}, {0.8233503477643788, 
                 -1.537720431342839}, {0.7659758026213417, 
                 -1.6203322070992956}, {0.7005382973233583, 
                 -1.696555917483787}, {0.6277206042143981, 
                 -1.765591937247842}, {0.5482849368366849, 
                 -1.826714713816263}, {0.46306493235866064, 
                 -1.8792808261792542}, {0.3729567972986748, 
                 -1.9227361587784106}, {0.27890971644765217, 
                 -1.956622099929274}, {0.1819156351695122, 
                 -1.9805806860890718}, {0.08299853407010395, 
                 -1.9943586262878303}, {-0.01679667778678278, 
                 -1.9978101550982499}, {-0.11641551950642878, 
                 -1.9908986774063886}, {-0.21480540964921047, 
                 -1.9736971837258896}, {-0.31092711534122097, 
                 -1.9463874306246265}, {-0.4037660426795344, 
                 -1.9092578967487956}, {-0.49234323415595244, 
                 -1.8627005406774904}, {-0.5757259429845478, 
                 -1.8072064021670988}, {-0.6530376602106039, 
                 -1.7433601030037251}, {-0.7234674781911893, 
                 -1.6718333174428188}, {-0.7862786833296209, 
                 -1.5933772948658054}, {-0.840816481648989, 
                 -1.5088145286354397}, {-0.8865147727118481, 
                 -1.4190296750227052}, {-0.9229019003236598, 
                 -1.324959834376801}, {-0.9496053221717944, 
                 -1.2275843133161348}, {-0.9663551548166238, 
                 -1.1279139915661172}, {-0.9729865650294988, 
                 -1.02698042012664}, {-0.9694409931288323, 
                 -0.9258247787197351}, {-0.9557662084715667, 
                 -0.8254868199796961}, {-0.9321152113955978, 
                 -0.7269939256683461}, {-0.8987440094773711, 
                 -0.6313503964187628}, {-0.8560083087853354, 
                 -0.5395270912485246}, {-0.8043591727135023, 
                 -0.452451526475335}, {-0.7443377118338664, 
                 -0.3709985358678884}, {-0.6765688779015967, 
                 -0.29598158503921185}, {-0.6017544435987757, 
                 -0.22814482341280473}, {-0.5206652567538599, 
                 -0.16815594674165546}, {-0.43413286359337244, 
                 -0.11659993231421407}, {-0.34304060006259757, 
                 -0.07397369781314875}, {-0.24831425340847163, 
                 -0.04068172346805007}, {-0.15091239808599663, 
                 -0.01703266581793107}, {-0.05181651068226476, 
                 -0.003236980216403833}, {0.04797903198314146, 
                 0.0005944416994184157}, {0.14747696904662694, 
                 -0.005549376117516734}, {0.24568708616888346, 
                 -0.021580138556718965}, {0.34163596410704533, 
                 -0.04731189625561304}, {0.4343764532592688, 
                 -0.08246360229258187}, {0.5229967872079438, 
                 -0.12666256781071264}, {0.6066292539626142, 
                 -0.17944876826213524}, {0.684458349801265, 
                 -0.24027994525308075}, {0.755728347239523, 
                 -0.3085374430178773}, {0.8197502156364145, 
                 -0.38353271336105793}, {0.8759078401929662, 
                 -0.4645144184775275}, {0.9236634925429206, 
                 -0.5506760573821697}, {0.9625625137050157, 
                 -0.6411640387376898}, {0.9922371778017672, 
                 -0.7350861206444332}, {1.0124097125939902, 
                 -0.8315201364270526}, {1.0228944604816053, 
                 -0.9295229245963815}, {1.023599171132668, 
                 -1.0281393809558175}, {1.0145254242810215, 
                 -1.1264115512336657}, {0.995768188438824, 
                 -1.2233876836293665}, {0.9675145282673193, 
                 -1.3181311622353171}, {0.9300414801035229, 
                 -1.4097292444090324}, {0.8837131216207453, 
                 -1.4973015277950983}, {0.8289768677774871, 
                 -1.5800080758039443}, {0.7663590310547591, 
                 -1.657057133916316}, {0.696459689470154, 
                 -1.7277123731687303}, {0.6199469109639993, 
                 -1.7912996015560303}, {0.5375503874556622, 
                 -1.8472128888314565}, {0.4500545361457417, 
                 -1.8949200552604202}, {0.35829112947294117, 
                 -1.933967480258538}, {0.26313151850542366, 
                 -1.9639841924838501}, {0.1654785174398185, 
                 -1.9846852088223814}, {0.06625801928311224, 
                 -1.9958740957700667}}]}, {Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[PointSize[Rational[1, 120]], RGBColor[0.880722, 
                0.611041, 0.142051], AbsoluteThickness[1.6]], 
              Line[{{0, -1.9980653146910758}, {-0.09977125791698872, 
                 -1.993762026832772}, {-0.19875540164500596, 
                 -1.9809244153978487}, {-0.2961733882080718, 
                 -1.9596583245993224}, {-0.391258071208018, 
                 -1.9301366615925577}, {-0.48326017664846344, 
                 -1.8926002214502418}, {-0.5714540438699452, 
                 -1.8473555704871636}, {-0.6551432062083572, 
                 -1.7947727793489285}, {-0.7336657632517434, 
                 -1.7352827120581296}, {-0.8063995045311022, 
                 -1.6693738704547116}, {-0.872766748064034, 
                 -1.5975888162501193}, {-0.9322388596294292, 
                 -1.5205201969002227}, {-0.984340421336116, 
                 -1.4388064044121516}, {-1.0286530210665477, 
                 -1.3531268988166785}, {-1.0648186377342914, 
                 -1.2641972303462947}, {-1.0925426009889738, 
                 -1.1727637963057136}, {-1.1115961080268233, 
                 -1.0795983701418927}, {-1.121818284503707, 
                 -0.985492441240755}, {-1.1231177811727338, 
                 -0.8912514044117391}, {-1.1154739027336256, 
                 -0.7976886377724567}, {-1.098937270413239, 
                 -0.7056195067073697}, {-1.073630024885131, 
                 -0.6158553296336825}, {-1.0397455811204055, 
                 -0.5291973383535425}, {-0.9975479514159975, 
                 -0.44643066170739587}, {-0.9473706568626279, 
                 -0.36831835600712565}, {-0.8896152504896726, 
                 -0.29559549932194695}, {-0.8247494767495738, 
                 -0.22896335922228755}, {-0.7533050912699574, 
                 -0.1690836353214204}, {-0.6758753612176491, 
                 -0.11657276937320514}, {-0.5931122594729531, 
                 -0.07199630755060867}, {-0.5057233544679144, 
                 -0.03586329294230726}, {-0.414468381590621, 
                 -0.00862066272099512}, {-0.32015546152740787, 
                 0.009352374362731933}, {-0.22363690651974732, 
                 0.017749996547951778}, {-0.12580452890518848, 
                 0.01634546344291469}, {-0.0275843402717933, 
                 0.004996819178933363}, {0.07006949197824276, 
                 -0.01634746016394881}, {0.16618157602116296, 
                 -0.04764298653664079}, {0.25976325789127963, 
                 -0.08874431295462856}, {0.34982173589014104, 
                 -0.1394003409674481}, {0.43537040448231895, 
                 -0.1992505545562265}, {0.5154404388594563, 
                 -0.2678223900291562}, {0.58909354641074, 
                 -0.34453006841774814}, {0.6554357148201324, 
                 -0.4286752074214901}, {0.7136316884403605, 
                 -0.5194494916389076}, {0.7629198161679513, 
                 -0.6159396142754188}, {0.8026268455492198, 
                 -0.7171346163236664}, {0.8321821967244145, 
                 -0.8219356488932352}, {0.8511312394188162, 
                 -0.9291680806882101}, {0.8591471155567802, 
                 -1.0375957747609328}, {0.8560406946968875, 
                 -1.1459372737081739}, {0.8417683127066765, 
                 -1.2528835646832512}, {0.8164370186796656, 
                 -1.357117046398419}, {0.7803071345335096, 
                 -1.4573312888648242}, {0.7337920110058898, 
                 -1.552251160775606}, {0.6774549396029247, 
                 -1.6406528964988831}, {0.6120032506997966, 
                 -1.7213836820879136}, {0.538279692785523, 
                 -1.7933803555371042}, {0.4572512467360307, 
                 -1.8556868393394557}, {0.3699955821497298, 
                 -1.907469952391939}, {0.2776854102795064, 
                 -1.9480332829594524}, {0.18157102983805673, 
                 -1.9768288444006537}, {0.08296139761571475, 
                 -1.9934662803085834}, {-0.016795915054420348, 
                 -1.9977194351071519}, {-0.11633549697464753, 
                 -1.9895301592452237}, {-0.21429520556264234, 
                 -1.9690092740013188}, {-0.3093372055002862, 
                 -1.93643467842794}, {-0.4001685358766423, 
                 -1.89224663887667}, {-0.4855608143421157, 
                 -1.8370403585567918}, {-0.5643687049706408, 
                 -1.7715559794273004}, {-0.6355468022468818, 
                 -1.6966662202475236}, {-0.6981646162589402, 
                 -1.6133619018226537}, {-0.7514193831121851, 
                 -1.5227356525842637}, {-0.794646469122548, 
                 -1.4259641240494652}, {-0.8273271869207692, 
                 -1.3242890759759787}, {-0.8490938957650742, 
                 -1.2189977148261422}, {-0.8597323168263469, 
                 -1.1114026860898616}, {-0.8591810567617899, 
                 -1.0028221305386205}, {-0.8475283992321727, 
                 -0.8945602157274668}, {-0.8250064935057231, 
                 -0.7878885457763752}, {-0.7919831406193193, 
                 -0.6840288330269249}, {-0.748951448412475, 
                 -0.5841371827857613}, {-0.6965176935264091, 
                 -0.489290295438295}, {-0.6353877863013424, 
                 -0.4004738279286608}, {-0.5663527776012158, 
                 -0.31857307959175407}, {-0.49027386897213276, 
                 -0.24436607828832352}, {-0.40806738421798877, 
                 -0.17851904680902603}, {-0.32069012879215636, 
                 -0.12158413383034132}, {-0.22912550414892, 
                 -0.0739992069242963}, {-0.13437066215112714, 
                 -0.03608943580579173}, {-0.03742488819289824, 
                 -0.0080703490180671}, {0.06072069841228563, 
                 0.009947969670238813}, {0.15909213092842853, 
                 0.017955868005107935}, {0.25674034866607887, 
                 0.016038583425285864}, {0.3527478506665944, 
                 0.004370409805060732}, {0.44623441126674895, 
                 -0.016791249513101347}, {0.5363620247530373, 
                 -0.04711182419566189}, {0.6223392336146403, 
                 -0.0861854498648387}, {0.7034249699783343, 
                 -0.13354074911685362}, {0.7789320087331679, 
                 -0.18864652860070363}, {0.8482300987833031, 
                 -0.25091741856371763}, {0.9107488095336537, 
                 -0.3197194893708204}, {0.9659801053348888, 
                 -0.39437587963298176}, {1.0134806421075373, 
                 -0.47417246521202905}, {1.0528737676873576, 
                 -0.5583635897354121}, {1.0838511999480238, 
                 -0.6461778671506573}, {1.1061743535379127, 
                 -0.736824056582545}, {1.1196752861255161, 
                 -0.8294970001858618}, {1.124257237464746, 
                 -0.9233836063075085}, {1.119894738590275, 
                 -1.0176688533090872}, {1.1066332734182414, 
                 -1.1115417838980202}, {1.0845884804971622, 
                 -1.204201455703062}, {1.0539448882973599, 
                 -1.2948628109807638}, {1.0149541830187023, 
                 -1.3827624266003786}, {0.9679330132894848, 
                 -1.467164104671179}, {0.9132603412335631, 
                 -1.5473642642035272}, {0.8513743541478173, 
                 -1.6226970949049322}, {0.7827689554321143, 
                 -1.6925394354938135}, {0.7079898574400452, 
                 -1.7563153406734968}, {0.6276303025708941, 
                 -1.8135003030687262}, {0.5423264422062283, 
                 -1.863625098921693}, {0.4527524060152413, 
                 -1.9062792291196125}, {0.35961509671860736, 
                 -1.9411139301352418}, {0.2636487476176816, 
                 -1.9678447326659498}, {0.165609282070072, 
                 -1.98625354912127}, {0.06626851562816695, 
                 -1.9961902746027818}}]}, {Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[PointSize[Rational[1, 120]], RGBColor[0.560181, 
                0.691569, 0.194885], AbsoluteThickness[1.6]], 
              Line[{{0, -1.998150600645857}, {-0.09979776543046842, 
                 -1.9942917352368252}, {-0.19894138860540173, 
                 -1.982778081299476}, {-0.29678358319521947, 
                 -1.963695735568037}, {-0.39268716556959293, 
                 -1.9371866054100353}, {-0.48603011912807476, 
                 -1.903448195282214}, {-0.576210530329489, 
                 -1.8627319981303718}, {-0.662651425863556, 
                 -1.8153416383874175}, {-0.7448054848221527, 
                 -1.761630631269455}, {-0.8221596082716603, 
                 -1.701999765228099}, {-0.8942393342705957, 
                 -1.6368941216546424}, {-0.9606130935166818, 
                 -1.566799747737964}, {-1.020896310718728, 
                 -1.4922399997645512}, {-1.0747553708227526, 
                 -1.4137715751810127}, {-1.121911489533594, 
                 -1.3319802523178357}, {-1.162144557722448, 
                 -1.247476356653627}, {-1.1952970753280812, 
                 -1.1608899716734422}, {-1.2212783627607888, 
                 -1.0728659104394058}, {-1.2400693555522466, 
                 -0.9840584605025675}, {-1.2517284865050897, 
                 -0.8951259090995181}, {-1.2563995080868662, 
                 -0.8067248468061022}, {-1.254322748249326, 
                 -0.7195042348715649}, {-1.245852533756518, 
                 -0.6340992035133424}, {-1.2314860742102935, 
                 -0.5511245271094523}, {-1.2119147893597408, 
                 -0.4711677099182386}, {-1.188122940106818, 
                 -0.3947816694277901}, {-1.1615965155618369, 
                 -0.3224773676876174}, {-1.1348275902359732, 
                 -0.25471854185488635}, {-1.1127884657386156, 
                 -0.19193011111398836}, {-1.1088072882978999, 
                 -0.1345951449622538}, {-1.188409921838047, 
                 -0.08427590457487247}, {-1.9595688532895879, 
                 -0.040757710148954275}, {-1.9966512980468376, 
                 0.05832613419143589}, {-1.9884845877352175, 
                 0.15782544624332298}, {-1.9725438782560394, 
                 0.2562876243976739}, {-1.9491031272855102, 
                 0.35307409175554183}, {-1.918344081412488, 
                 0.4475564552598042}, {-1.8804961931666286, 
                 0.5391238725635416}, {-1.8358416595642926, 
                 0.627188418000618}, {-1.7847135416808835, 
                 0.7111898739124308}, {-1.727493307329851, 
                 0.7906003622063412}, {-1.6646079999221302, 
                 0.8649288247295603}, {-1.5965270535617029, 
                 0.9337253452287542}, {-1.5237587712423872, 
                 0.9965853134840214}, {-1.4468464840881645, 
                 1.0531534442951622}, {-1.3663644103584132, 
                 1.1031276813637638}, {-1.2829132331896795, 
                 1.1462630416136714}, {-1.1971154155857244, 
                 1.182375493951348}, {-1.1096102697384984, 
                 1.211346026200216}, {-1.021048794985, 1.2331251497185065}, 
                {-0.9320882940261213, 1.2477382502122767}, 
                {-0.8433867696703944, 1.2552924675837052}, 
                {-0.7555970932897432, 1.2559862819191232}, 
                {-0.6693609203383625, 1.2501239186229167}, 
                {-0.5853023078001014, 1.2381385638716853}, 
                {-0.5040209693463854, 1.2206324213076147}, 
                {-0.42608511705596613, 1.1984510978364684}, 
                {-0.3520240163912621, 1.1728344281509184}, 
                {-0.28232131153453616, 1.1457594616076323}, 
                {-0.21741482530827833, 1.1208572925939901}, 
                {-0.1577359479825677, 1.106557511537653}, 
                {-0.10406412738697574, 1.1329834328165496}, 
                {-0.06385398671224385, 1.5343373307638049}, 
                {0.016792918518633553, 1.9973630247680974}, 
                {0.11653010475906174, 1.9928582754813227}, 
                {0.2155016655781993, 1.9800945941469859}, 
                {0.3130622068654953, 1.9597529915584813}, 
                {0.4085782470053285, 1.9320130027721205}, 
                {0.5014309053287543, 1.897082266337024}, {0.5910221306470673, 
                 1.8552212061016797}, {0.6767796098741274, 
                 1.8067420032107686}, {0.7581614609369576, 
                 1.7520063148720597}, {0.8346607771467284, 
                 1.6914225953434843}, {0.9058100155295133, 
                 1.6254430561756892}, {0.9711852258545021, 
                 1.5545602824140596}, {1.0304101274836328, 
                 1.4793035222617934}, {1.0831600560732217, 
                 1.400234668656964}, {1.1291658238246762, 
                 1.3179439517056366}, {1.1682175692869998, 
                 1.2330453607746494}, {1.2001687222663044, 
                 1.146171814059945}, {1.224940287779434, 1.0579700912852898}, 
                {1.2425257811947537, 0.969095541378876}, {1.2529973642730108, 
                 0.8802065708404017}, {1.2565141165596907, 
                 0.7919589091163426}, {1.2533340895543623, 
                 0.7049996335460778}, {1.2438331860687628, 
                 0.6199609176840929}, {1.2285368177176086, 
                 0.5374534455603118}, {1.2081768567002718, 
                 0.45805942698963353}, {1.1838026949623062, 
                 0.382325227859049}, {1.1570210027927081, 
                 0.3107541076137352}, {1.1305904277507461, 
                 0.243801913352562}, {1.1102330442079618, 
                 0.18189126507878017}, {1.1124018833329388, 
                 0.1255507816080833}, {1.2338195304130704, 
                 0.07707677259570378}, {1.9879995305397107, 
                 0.024630547356442566}, {1.995852482990245, 
                 -0.07510146278969693}, {1.9863361299299138, 
                 -0.17447155881298176}, {1.9691224051694294, 
                 -0.27269645100592627}, {1.944437323260833, 
                 -0.3691390380512351}, {1.9124688110672674, 
                 -0.4631734197850181}, {1.8734552573783452, 
                 -0.5541922618052385}, {1.8276875662939625, 
                 -0.6416119673262229}, {1.7755071207299324, 
                 -0.7248774365697072}, {1.7173032597342732, 
                 -0.8034666735138797}, {1.6535103867154812, 
                 -0.8768952399860723}, {1.5846047266804852, 
                 -0.9447205507659623}, {1.511100749518323, 
                 -1.0065460120314154}, {1.4335472774332894, 
                 -1.0620250183160884}, {1.3525232953322825, 
                 -1.1108648416399463}, {1.2686334831161608, 
                 -1.1528304737439077}, {1.1825034882229402, 
                 -1.1877485236865752}, {1.094774955145274, 
                 -1.2155113375802102}, {1.0061003255915906, 
                 -1.2360816112774082}, {0.9171374178917843, 
                 -1.2494979406047537}, {0.828543786338501, 
                 -1.2558820556527879}, {0.7409708493442064, 
                 -1.2554490338900353}, {0.6550577586001948, 
                 -1.2485228345167174}, {0.5714249604443052, 
                 -1.2355616216838534}, {0.49066738357329354, 
                 -1.21720197525694}, {0.4133472135373168, 
                 -1.1943421054592336}, {0.33998645363140667, 
                 -1.168313471316832}, {0.2710606864877625, 
                 -1.141280199988888}, {0.2070016102707593, 
                 -1.117343829342653}, {0.14825401660721044, 
                 -1.106551380627547}, {0.09580857686205697, 
                 -1.1490909413398676}, {0.05885400016974403, 
                 -1.7728446404249603}}]}, {Hue[0.37820393249936934, 0.6, 
               0.6], Directive[PointSize[Rational[1, 120]], RGBColor[
                0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6]], 
              Line[{{0, -1.998191187950136}, {-0.0998165860959632, 
                 -1.9946678348166702}, {-0.19906876099120768, 
                 -1.9840475565781464}, {-0.29719741220046064, 
                 -1.9664338730488826}, {-0.39365446904984064, 
                 -1.9419584632897913}, {-0.4879071370268868, 
                 -1.9107991930730828}, {-0.5794433530233845, 
                 -1.8731828350367326}, {-0.6677772170658013, 
                 -1.8293838057108933}, {-0.7524546421901228, 
                 -1.7797225897705853}, {-0.8330593702870426, 
                 -1.7245639878006738}, {-0.9092195765181799, 
                 -1.6643152711571236}, {-0.9806154207563075, 
                 -1.5994243720375219}, {-1.0469881368402536, 
                 -1.5303783162582516}, {-1.10815166354939, 
                 -1.4577022506213226}, {-1.1640085920551184, 
                 -1.3819596934427152}, {-1.2145737282392186, 
                 -1.3037551992330827}, {-1.26001179645825, 
                 -1.223741853712086}, {-1.3007032611106033, 
                 -1.1426389191800195}, {-1.3373713931833486, 
                 -1.061272604152125}, {-1.3713604062789384, 
                 -0.9806761159529845}, {-1.4053583742398321, 
                 -0.902370234840872}, {-1.4458383985156023, 
                 -0.8293613841603674}, {-1.5162391100780284, 
                 -0.7717173469457791}, {-1.7965237422258988, 
                 -0.803994717122621}, {-1.8133664805931113, 
                 -0.7049998394317267}, {-1.8559302625793137, 
                 -0.6166762905333231}, {-1.896073820433284, 
                 -0.5263797595492874}, {-1.9299162437103614, 
                 -0.4331807366418926}, {-1.9571666938720027, 
                 -0.3375657032660915}, {-1.9776255589840743, 
                 -0.24005866628196823}, {-1.9911434831006933, 
                 -0.14120163008832676}, {-1.9976217764128656, 
                 -0.041549185277973286}, {-1.9970129858869756, 
                 0.05833669980873719}, {-1.9893211654363736, 
                 0.15789184517335067}, {-1.9746018331376118, 
                 0.2565550092571591}, {-1.9529616141067014, 
                 0.3537730448847383}, {-1.9245575741246825, 
                 0.4490060850733488}, {-1.8895962559758006, 
                 0.5417327909543791}, {-1.848332438631118, 
                 0.6314557097475418}, {-1.8010676500930203, 
                 0.7177068168435768}, {-1.7481484798726605, 
                 0.8000533579571731}, {-1.689964760096781, 
                 0.8781041745884075}, {-1.6269477213061347, 
                 0.9515168060301173}, {-1.559568291841778, 
                 1.0200058463044224}, {-1.488335821622834, 
                 1.0833533578358854}, {-1.4137977208167427, 
                 1.1414227345637948}, {-1.3365409194024098, 
                 1.1941785460473364}, {-1.257196931722819, 
                 1.241717234434395}, {-1.1764543151495879, 
                 1.2843187365221493}, {-1.0950873520206024, 
                 1.3225418428069213}, {-1.014024121333205, 
                 1.3574214920779568}, {-0.934525302912539, 
                 1.3909425849435049}, {-0.8587507247220642, 
                 1.4274527250271238}, {-0.7922794900576863, 
                 1.479691315493604}, {-0.7669859788289147, 
                 1.6224691166966674}, {-0.7472519241725393, 
                 1.8096864634666654}, {-0.653342616386807, 
                 1.8376590604296392}, {-0.5643133188531592, 
                 1.8801162926323574}, {-0.47226741672965394, 
                 1.9166277536253324}, {-0.37759485886616084, 
                 1.9466471552987508}, {-0.2808098249697657, 
                 1.9699518410870336}, {-0.1824475280940662, 1.9863715948939}, 
                {-0.0830579602380216, 1.9957865682622475}, 
                {0.01679934963528478, 1.998127946874572}, 
                {0.11656051544417821, 1.9933783486900676}, 
                {0.21566244801364612, 1.9815719118763309}, 
                {0.3135480059241701, 1.9627940681804936}, 
                {0.4096711656018855, 1.9371810041402695}, 
                {0.5035022386780668, 1.9049188191360116}, 
                {0.5945331769764285, 1.8662423967950044}, {0.68228302678216, 
                 1.8214340157121087}, {0.7663036285179824, 
                 1.7708217384377376}, {0.8461857131261632, 
                 1.7147776368875969}, {0.9215656358426573, 
                 1.6537159425367098}, {0.992133136538227, 1.588091259905839}, 
                {1.0576407709774995, 1.5183970693451336}, 
                {1.1179161144935206, 1.4451649055809512}, 
                {1.1728787002813095, 1.3689649088778408}, 
                {1.2225653741515368, 1.2904090834392585}, 
                {1.2671714391385065, 1.2101600051530608}, 
                {1.3071236228495224, 1.1289511108285764}, {1.343223633991022, 
                 1.047633823359195}, {1.376970305064764, 0.9672951794861362}, 
                {1.4114275252318764, 0.8895981258371443}, 
                {1.4543331140980464, 0.8180614578652432}, {1.537022900490242, 
                 0.7660947935479171}, {1.8294664476989169, 
                 0.8003447936379041}, {1.8196205191550467, 
                 0.6898777506954978}, {1.863095768440176, 
                 0.6017121917557395}, {1.9022152117129438, 
                 0.510899274238182}, {1.9349654123870974, 
                 0.4172583264741799}, {1.9610864645977122, 
                 0.32128794926025883}, {1.9803873066142277, 
                 0.22351559985423558}, {1.9927270507474253, 
                 0.12448576631328356}, {1.9980155904394246, 
                 0.024754642475125963}, {1.996214122954902, 
                 -0.07511507085471197}, {1.9873353673183975, 
                 -0.17455932769668983}, {1.9714434685944535, 
                 -0.27301788646209807}, {1.9486535882307492, 
                 -0.3699394690944708}, {1.919131186658044, 
                 -0.4647869547448641}, {1.8830910113662218, 
                 -0.5570426422857485}, {1.8407958121682741, 
                 -0.6462136331572528}, {1.7925548166338459, 
                 -0.7318374143484323}, {1.7387220148622164, 
                 -0.813487766664381}, {1.6796943276127763, 
                 -0.8907811963860942}, {1.615909772175081, 
                 -0.9633842082216374}, {1.5478458093602625, 
                 -1.031021940229816}, {1.4760181789133715, 
                 -1.0934890381167077}, {1.4009807649352843, 
                 -1.1506643034921624}, {1.3233275018546398, 
                 -1.202531929974088}, {1.243698334489417, 
                 -1.249214801827931}, {1.1627935697818401, 
                 -1.2910313308616372}, {1.081406909180698, 
                 -1.3286022882068054}, {1.0005047994251053, 
                 -1.3630767451626837}, {0.9214400494657371, 
                 -1.396691451393077}, {0.8466586888228854, 
                 -1.434519095937504}, {0.7831172875872214, 
                 -1.4926009238434053}, {0.778693483089378, 
                 -1.683727259678106}, {0.7288231174079511, 
                 -1.8079965529018385}, {0.6385722830857878, 
                 -1.8451165027624787}, {0.5490407442822667, 
                 -1.8866978110316603}, {0.4565185410181249, 
                 -1.9221362512683047}, {0.3614541393359599, 
                 -1.9510406303078116}, {0.26436599384049225, 
                 -1.9731981781662078}, {0.1657921752310194, 
                 -1.9884470988154723}, {0.06628464329303305, 
                 -1.996676084303702}}]}}}, {{}, {}}}, 
          {DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {HoldForm["\\mu x"], HoldForm["\\mu y"]}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Epilog -> {RGBColor[0.3333333333333333, 0.3333333333333333, 
              0.3333333333333333], Arrow[{{0, 0}, {2.5501, 0}}], 
             Arrow[{{0, 0}, {0, 2.52099}}]}, Frame -> {{False, False}, 
             {False, False}}, FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> 
            Directive[GrayLevel[0.5, 0.4]], ImageSize -> 500, 
           Method -> {"AxisPadding" -> Scaled[0.02], 
             "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {"Version" -> 1.2, 
               "TrackMousePosition" -> {True, False}, "Effects" -> 
                {"Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> 
                  {"ratio" -> 2}, "Droplines" -> {"freeformCursorMode" -> 
                    True, "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], 
             "DefaultPlotStyle" -> {Directive[RGBColor[0.368417, 0.506779, 
                 0.709798], AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6]], 
               Directive[RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], Directive[RGBColor[0.922526, 
                 0.385626, 0.209179], AbsoluteThickness[1.6]], Directive[
                RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[
                 1.6]], Directive[RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], Directive[RGBColor[0.363898, 
                 0.618501, 0.782349], AbsoluteThickness[1.6]], Directive[
                RGBColor[1, 0.75, 0], AbsoluteThickness[1.6]], Directive[
                RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[
                 1.6]], Directive[RGBColor[0.571589, 0.586483, 0], 
                AbsoluteThickness[1.6]], Directive[RGBColor[0.915, 0.3325, 
                 0.2125], AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.40082222609352647, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.28026441037696703, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "OptimizePlotMarkers" -> True, "CoordinatesToolOptions" -> 
              {"DisplayFunction" -> ({Identity[#1[[1]]], Identity[
                   #1[[2]]]} & ), "CopiedValueFunction" -> 
                ({Identity[#1[[1]]], Identity[#1[[2]]]} & )}}, 
           PlotRange -> {{-1.9976217764128656, 1.9980155904394246}, 
             {-1.998191187950136, 1.998127946874572}}, PlotRangeClipping -> 
            True, PlotRangePadding -> {{Scaled[0.02], Scaled[0.02]}, 
             {Scaled[0.05], Scaled[0.05]}}, Ticks -> {Automatic, 
             Automatic}}]]|>, "479678d6-9200-4a82-8697-2c35e766c3b7" -> 
      <|"Public" -> Hold[Graphics[{{}, {{{}, {}, {Hue[0.67, 0.6, 0.6], 
              Directive[PointSize[Rational[1, 60]], RGBColor[0.368417, 
                0.506779, 0.709798], AbsoluteThickness[1.6]], 
              Line[{{0, -2.6924879369750285}, {-0.2681602145561145, 
                 -2.6726575069456993}, {-0.5300012579844369, 
                 -2.6145782898931116}, {-0.7802255205687628, 
                 -2.522256998826983}, {-1.0153891907816468, 
                 -2.401621279102121}, {-1.2343519344636822, 
                 -2.2594660603077834}, {-1.4381770712411424, 
                 -2.102177596213832}, {-1.6294162931882523, 
                 -1.934511185221883}, {-1.8108996049019888, 
                 -1.758772136592987}, {-1.9843620994010258, 
                 -1.574692821714474}, {-2.14935438795583, 
                 -1.3800845815324911}, {-2.3028080677147447, 
                 -1.1720558589540044}, {-2.439382203100624, 
                 -0.9483819624459231}, {-2.5524360737585283, 
                 -0.7085961908713648}, {-2.635301799222809, 
                 -0.4545282259086012}, {-2.6825187080396034, 
                 -0.19023039651958087}, {-2.6907873137515774, 
                 0.07860322034999936}, {-2.6595169902185307, 
                 0.34554429890349236}, {-2.590921606511302, 
                 0.6044711693287199}, {-2.4896572704265285, 
                 0.8505549466467301}, {-2.3620277448401064, 
                 1.0809998410346642}, {-2.2148443588104554, 
                 1.2953468648994142}, {-2.0541322655251157, 
                 1.4951941994308895}, {-1.883989219612341, 
                 1.6833150967435058}, {-1.7059463647060815, 
                 1.8623578081017813}, {-1.5190760857088348, 
                 2.0335083588857286}, {-1.3208429238834116, 
                 2.195562433604228}, {-1.1084135482113278, 
                 2.3447191997524097}, {-0.8799851544765541, 
                 2.475137319390803}, {-0.6357339088597646, 
                 2.5800324360273277}, {-0.3781717847352899, 
                 2.6529705777447936}, {-0.11190885663922846, 
                 2.6890401872392236}, {0.15704299535621374, 
                 2.685695971432381}, {0.4222362760476781, 
                 2.6431769373058485}, {0.6778321594001322, 
                 2.564467717257758}, {0.919534899901848, 2.45480552728217}, 
                {1.145223662764608, 2.3207717829318355}, {1.355097159078335, 
                 2.1690818252118915}, {1.5512120033300918, 
                 2.005299967738826}, {1.736449535706799, 1.8328101721063454}, 
                {1.9131591179014957, 1.6523786071880662}, {2.081896386440782, 
                 1.462492205813442}, {2.2406842682071306, 
                 1.2603834852526534}, {2.3850384886508453, 
                 1.0433933562534883}, {2.5087132968207917, 
                 0.8102231790159725}, {2.6048931418850265, 
                 0.5617223677844083}, {2.6674792538434984, 
                 0.30106395023349863}, {2.6921817489003605, 
                 0.03335509341918134}, {2.677245348276457, 
                 -0.23515816995942124}, {2.6237353817351905, 
                 -0.4980994467286296}, {2.535364978621744, 
                 -0.7499937062657152}, {2.4178742947877927, 
                 -0.9871334788187291}, {2.2780176998649098, 
                 -1.2080860777557871}, {2.1223027263667653, 
                 -1.4136683779879}, {1.9557427268050107, 
                 -1.6063056673393397}, {1.7809692456225206, 
                 -1.7888687968255124}, {1.5980129458600947, 
                 -1.9632976619895588}, {1.4048651259272282, 
                 -2.1294528199425518}, {1.198645609455462, 
                 -2.284586960844993}, {0.9769787298214243, 
                 -2.4235978985650672}, {0.7391381235244234, 
                 -2.5399395112772147}, {0.48666103844113506, 
                 -2.6268767067678294}, {0.2233472325396259, 
                 -2.6787401513554108}}]}}}, {{}, {}}}, 
          {DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {HoldForm["\\mu x"], HoldForm["\\mu y"]}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Epilog -> {RGBColor[0.3333333333333333, 0.3333333333333333, 
              0.3333333333333333], Arrow[{{0, 0}, {2.5501, 0}}], 
             Arrow[{{0, 0}, {0, 2.52099}}]}, Frame -> {{False, False}, 
             {False, False}}, FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> 
            Directive[GrayLevel[0.5, 0.4]], ImageSize -> 500, 
           Method -> {"AxisPadding" -> Scaled[0.02], 
             "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {"Version" -> 1.2, 
               "TrackMousePosition" -> {True, False}, "Effects" -> 
                {"Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> 
                  {"ratio" -> 2}, "Droplines" -> {"freeformCursorMode" -> 
                    True, "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], 
             "DefaultPlotStyle" -> {Directive[RGBColor[0.368417, 0.506779, 
                 0.709798], AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6]], 
               Directive[RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], Directive[RGBColor[0.922526, 
                 0.385626, 0.209179], AbsoluteThickness[1.6]], Directive[
                RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[
                 1.6]], Directive[RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], Directive[RGBColor[0.363898, 
                 0.618501, 0.782349], AbsoluteThickness[1.6]], Directive[
                RGBColor[1, 0.75, 0], AbsoluteThickness[1.6]], Directive[
                RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[
                 1.6]], Directive[RGBColor[0.571589, 0.586483, 0], 
                AbsoluteThickness[1.6]], Directive[RGBColor[0.915, 0.3325, 
                 0.2125], AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.40082222609352647, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], Directive[RGBColor[
                 0.28026441037696703, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "OptimizePlotMarkers" -> True, "CoordinatesToolOptions" -> 
              {"DisplayFunction" -> ({Identity[#1[[1]]], Identity[
                   #1[[2]]]} & ), "CopiedValueFunction" -> 
                ({Identity[#1[[1]]], Identity[#1[[2]]]} & )}}, 
           PlotRange -> {{-2.6907873137515774, 2.6921817489003605}, 
             {-2.6924879369750285, 2.6890401872392236}}, PlotRangeClipping -> 
            True, PlotRangePadding -> {{Scaled[0.02], Scaled[0.02]}, 
             {Scaled[0.05], Scaled[0.05]}}, Ticks -> {Automatic, 
             Automatic}}]]|>|>, "Path" -> "/users/kirill/Github/wolfram-js-fr\
ontend-dev/Examples/DPG2024 - Berlin/C3 - Spin Hamitonian.wln"|>, 
 "Cells" -> 
  {<|"Data" -> 
     ".md\n## Quantuum mechanics\nLet us have a look at some simple examples"\
, "Display" -> "codemirror", "Hash" -> 
     "e31a4f6a-e90d-4414-9fa1-a109d3f4dbac", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> 
     "## Quantuum mechanics\nLet us have a look at some simple examples", 
    "Display" -> "markdown", "Hash" -> 
     "12a0e33f-df3e-4bec-b318-f6d2aaeff242", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\n**Note** you can skip all steps by __evaluating \
initialization cells__ from the menu and then clicking to this button. You \
will be navigated to a real-time modelling code", "Display" -> "codemirror", 
    "Hash" -> "eced9beb-acd5-4c02-a82c-24aaa6b3fcf9", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "**Note** you can skip all steps by __evaluating \
initialization cells__ from the menu and then clicking to this button. You \
will be navigated to a real-time modelling code", "Display" -> "markdown", 
    "Hash" -> "25ef36a8-b6ca-4fb7-bcd4-0bba0d164511", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".js\n\nconst button = \
document.createElement('button');\nbutton.innerText = \
\"Navigate\";\nbutton.classList.add('rounded', 'bg-teal-400', 'px-2', 'py-1', \
'font-semibold', 'text-white', 'shadow-sm', 'hover:bg-indigo-500', \
'focus-visible:outline', 'focus-visible:outline-2', \
'focus-visible:outline-offset-2', \
'focus-visible:outline-indigo-600');\n\nbutton.addEventListener('click', () \
=> {\n  \
document.getElementById('realtimeStuff').scrollIntoView();\n})\n\nreturn \
button;", "Display" -> "codemirror", 
    "Hash" -> "7b5ff847-bb69-4e1a-8ea8-7cb31d945f62", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "\nconst button = \
document.createElement('button');\nbutton.innerText = \
\"Navigate\";\nbutton.classList.add('rounded', 'bg-teal-400', 'px-2', 'py-1', \
'font-semibold', 'text-white', 'shadow-sm', 'hover:bg-indigo-500', \
'focus-visible:outline', 'focus-visible:outline-2', \
'focus-visible:outline-offset-2', \
'focus-visible:outline-indigo-600');\n\nbutton.addEventListener('click', () \
=> {\n  \
document.getElementById('realtimeStuff').scrollIntoView();\n})\n\nreturn \
button;", "Display" -> "js", "Hash" -> 
     "9fd4466b-c105-43e4-915e-bc533c4a7405", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, <|"Data" -> ".md\n---", 
    "Display" -> "codemirror", "Hash" -> 
     "f2485aac-dedf-4e5d-8f2d-0c5943efb8e9", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "---", "Display" -> "markdown", 
    "Hash" -> "f8823c24-54f9-47d7-8706-fa8e6a2c0c02", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, <|"Data" -> "Ket[1/2]", 
    "Display" -> "codemirror", "Hash" -> 
     "b170354e-9a51-4e59-bc84-fab9d1204566", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "(*BB[*)(Ket[(*FB[*)((1)(*,*)/(*,*)(2))(*]FB*)])(*,*)(*\"1:eJx\
TTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8IohKFiARVJqTGgxieKQm\
pgQzQ9QBABLAE1g=\"*)(*]BB*)", "Display" -> "codemirror", 
    "Hash" -> "49a7b630-027a-459a-a018-a64968d1408d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nLanguage provides features to visualize the \
expressions.\n\nLet's work with wavefunction in the basis of $S=2$ and a \
doubly-degenerated orbital state $\\\\hat{L}=1/2$", 
    "Display" -> "codemirror", "Hash" -> 
     "46c0e677-e332-46c5-a477-91d101791973", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Language provides features to visualize the \
expressions.\n\nLet's work with wavefunction in the basis of $S=2$ and a \
doubly-degenerated orbital state $\\\\hat{L}=1/2$", "Display" -> "markdown", 
    "Hash" -> "83028fec-8b53-4fcb-8048-10267de71e2d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "(*BB[*)(Ket[Ms, \
Ml])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8Io\
hKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*)", "Display" -> "codemirror", 
    "Hash" -> "35464088-507f-4e07-8dda-aba3257ddc23", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nDefine the ortogonality of our basis functions", 
    "Display" -> "codemirror", "Hash" -> 
     "e2884612-f19b-4b48-a643-192af33a3bd3", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Define the ortogonality of our basis functions", 
    "Display" -> "markdown", "Hash" -> 
     "814207e8-984b-43e8-942d-b0b3dea52b64", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Ket /: (*BB[*)(Bra[Ms1_, \
Ml1_])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMaeiRJfU5PyixJL8\
IohKFiARVJqTGgxieKQmpgQzQ9QBABBAEzo=\"*)(*]BB*).(*BB[*)(Ket[Ms2_, \
Ml2_])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8\
IohKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*) := KroneckerDelta[Ms1, Ms2] \
KroneckerDelta[Ml1, Ml2]\n\nKet /: Conjugate[(*BB[*)(Ket[Ms2_, \
Ml2_])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8\
IohKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*)] := (*BB[*)(Bra[Ms2, \
Ml2])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMaeiRJfU5PyixJL8I\
ohKFiARVJqTGgxieKQmpgQzQ9QBABBAEzo=\"*)(*]BB*)  ", "Display" -> "codemirror", 
    "Hash" -> "618caea3-0afa-449a-b9b6-49f56c1dd6b1", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nLinear algebra rules must be defined as well", 
    "Display" -> "codemirror", "Hash" -> 
     "159b5a7f-293b-4347-bf8f-033c56a395bc", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Linear algebra rules must be defined as well", 
    "Display" -> "markdown", "Hash" -> 
     "ff5c87b8-9671-4600-acf1-51a43a64dcae", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Unprotect[Dot];\nUnprotect[Conjugate];\n\nConjugate[a_ b_] := \
Conjugate[a] Conjugate[b]\nConjugate[a_ + b_] := Conjugate[a] + \
Conjugate[b]\nDot[a_, b_?NumericQ] := b a\nDot[b_?NumericQ, a_] := b \
a\nDot[a_ + b_, c_] := a.c + b.c \nDot[c_, a_ + b_] := c.a + c.b  \nDot[a_, \
b_?NumericQ c_] := b a.c\nDot[b_?NumericQ c_, a_] := b \
c.a\n\nProtect[Dot];\nProtect[Conjugate];", "Display" -> "codemirror", 
    "Hash" -> "0fcaa4c9-afc6-4aa6-9e5e-a78e9035c7b2", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\n## Symbolic quantum operators\nA well known ladder-like \
operators (see [more \
here](https://easyspin.org/easyspin/documentation/spinoperators.html)) as \
well as pauli-like operators $U_\\\\theta$, $U_\\\\varepsilon$ for an orbital \
doublet", "Display" -> "codemirror", 
    "Hash" -> "2c164cb4-a37a-4d3a-9009-b276653f8e93", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "## Symbolic quantum operators\nA well known ladder-like \
operators (see [more \
here](https://easyspin.org/easyspin/documentation/spinoperators.html)) as \
well as pauli-like operators $U_\\\\theta$, $U_\\\\varepsilon$ for an orbital \
doublet", "Display" -> "markdown", "Hash" -> 
     "a3682f26-4893-47ae-b203-f9743afb910d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Ket /: Sp.(*BB[*)(Ket[Ms_, \
Ml_])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8I\
ohKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*) := (*SqB[*)Sqrt[2(2+1) - \
(Ms+1)Ms](*]SqB*) (*BB[*)(Ket[Ms+1, \
Ml])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8Io\
hKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*)\nKet /: Sm.(*BB[*)(Ket[Ms_, \
Ml_])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8I\
ohKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*) := (*SqB[*)Sqrt[2(2+1) - \
(Ms-1)Ms](*]SqB*) (*BB[*)(Ket[Ms-1, \
Ml])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8Io\
hKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*)\nKet /: Sz.(*BB[*)(Ket[Ms_, \
Ml_])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8I\
ohKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*) := Ms (*BB[*)(Ket[Ms, \
Ml])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8Io\
hKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*)\n\nU\[Theta] = \
Sum[(*BB[*)(Ket[Ms,1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxA\
Me/UEpfU5PyixJL8IohKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*).(*BB[*)(Bra[M\
s, \
1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMaeiRJfU5PyixJL8Ioh\
KFiARVJqTGgxieKQmpgQzQ9QBABBAEzo=\"*)(*]BB*) - \
(*BB[*)(Ket[Ms,-1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/\
UEpfU5PyixJL8IohKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*).(*BB[*)(Bra[Ms, \
-1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMaeiRJfU5PyixJL8Io\
hKFiARVJqTGgxieKQmpgQzQ9QBABBAEzo=\"*)(*]BB*), {Ms,-2,2}];\nU\[Epsilon] = \
Sum[(*BB[*)(Ket[Ms,1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxA\
Me/UEpfU5PyixJL8IohKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*).(*BB[*)(Bra[M\
s, \
-1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMaeiRJfU5PyixJL8Io\
hKFiARVJqTGgxieKQmpgQzQ9QBABBAEzo=\"*)(*]BB*) + \
(*BB[*)(Ket[Ms,-1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/\
UEpfU5PyixJL8IohKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*).(*BB[*)(Bra[Ms, \
1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMaeiRJfU5PyixJL8Ioh\
KFiARVJqTGgxieKQmpgQzQ9QBABBAEzo=\"*)(*]BB*), {Ms,-2,2}];\n\nSx = \
(*FB[*)((1)(*,*)/(*,*)(2))(*]FB*)(Sp + Sm);\nSy =  (*FB[*)((1)(*,*)/(*,*)(2I \
))(*]FB*)(Sp - Sm); \n", "Display" -> "codemirror", 
    "Hash" -> "2fb47650-d98b-43be-8ae2-9de95c61bf04", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\n### Testing", "Display" -> "codemirror", 
    "Hash" -> "3ce01f58-ec72-439e-83ea-97eccca21060", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, <|"Data" -> "### Testing", 
    "Display" -> "markdown", "Hash" -> 
     "a04629fb-f5d0-41ee-97f3-069137fa101c", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\ncheck a single operator", "Display" -> "codemirror", 
    "Hash" -> "90db1d43-3c66-49bd-8422-47a1d7b36567", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "check a single operator", "Display" -> "markdown", 
    "Hash" -> "d5d8f450-d656-47b7-bac4-9b7ad6935200", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Sm.(*BB[*)(Ket[0,1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqS\
n+BSWZ+XnFxTxAMe/UEpfU5PyixJL8IohKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*)\
", "Display" -> "codemirror", "Hash" -> 
     "121ac216-e134-4a94-bd1c-31b9381220cb", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "((*SqB[*)Sqrt[6](*]SqB*)) \
((*BB[*)(Ket[-1,1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/\
UEpfU5PyixJL8IohKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*))", 
    "Display" -> "codemirror", "Hash" -> 
     "500d2fe6-2823-4796-8c1e-71bbd85a3686", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nWe can also build the matrix of a operator in the basis \
of spin-only states", "Display" -> "codemirror", 
    "Hash" -> "2e6bee5e-1c13-4439-a108-0568fd760c1d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "We can also build the matrix of a operator in the basis of \
spin-only states", "Display" -> "markdown", 
    "Hash" -> "842f39b0-1bca-4250-89bc-bed0b8bb31cd", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Table[\n\n  (*BB[*)(Bra[Ms1, \
1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMaeiRJfU5PyixJL8Ioh\
KFiARVJqTGgxieKQmpgQzQ9QBABBAEzo=\"*)(*]BB*).(Sz).(*BB[*)(Ket[Ms2, \
1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8Ioh\
KFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*)\n\n, {Ms1, -2,2}, {Ms2, -2,2}] \
// MatrixForm ", "Display" -> "codemirror", 
    "Hash" -> "66bc0192-f09c-42ad-9e52-17c3801cf613", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "((*GB[*){{-2(*|*),(*|*)0(*|*),(*|*)0(*|*),(*|*)0(*|*),(*|*)0}\
(*||*),(*||*){0(*|*),(*|*)-1(*|*),(*|*)0(*|*),(*|*)0(*|*),(*|*)0}(*||*),(*||*\
){0(*|*),(*|*)0(*|*),(*|*)0(*|*),(*|*)0(*|*),(*|*)0}(*||*),(*||*){0(*|*),(*|*\
)0(*|*),(*|*)0(*|*),(*|*)1(*|*),(*|*)0}(*||*),(*||*){0(*|*),(*|*)0(*|*),(*|*)\
0(*|*),(*|*)0(*|*),(*|*)2}}(*]GB*))", "Display" -> "codemirror", 
    "Hash" -> "c023b1bb-e95c-49a1-aac5-6ef6d990f8c3", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nNow check the modulus of an spin-momentum", 
    "Display" -> "codemirror", "Hash" -> 
     "e2437ca5-afe1-4767-b80b-d5be74d71612", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Now check the modulus of an spin-momentum", 
    "Display" -> "markdown", "Hash" -> 
     "27eccc9d-4543-4553-8d26-df243446792c", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Table[\n\n  (*BB[*)(Bra[Ms1, \
1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMaeiRJfU5PyixJL8Ioh\
KFiARVJqTGgxieKQmpgQzQ9QBABBAEzo=\"*)(*]BB*).(Sz.Sz + Sx.Sx + \
Sy.Sy).(*BB[*)(Ket[Ms2, \
1])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8Ioh\
KFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*)\n\n, {Ms1, -2,2}, {Ms2, -2,2}] \
// MatrixForm ", "Display" -> "codemirror", 
    "Hash" -> "ebf9cc90-ab1e-4759-8fb4-8391242ab869", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "((*GB[*){{6(*|*),(*|*)0(*|*),(*|*)0(*|*),(*|*)0(*|*),(*|*)0}(\
*||*),(*||*){0(*|*),(*|*)6(*|*),(*|*)0(*|*),(*|*)0(*|*),(*|*)0}(*||*),(*||*){\
0(*|*),(*|*)0(*|*),(*|*)6(*|*),(*|*)0(*|*),(*|*)0}(*||*),(*||*){0(*|*),(*|*)0\
(*|*),(*|*)0(*|*),(*|*)6(*|*),(*|*)0}(*||*),(*||*){0(*|*),(*|*)0(*|*),(*|*)0(\
*|*),(*|*)0(*|*),(*|*)6}}(*]GB*))", "Display" -> "codemirror", 
    "Hash" -> "8be2f594-30f7-42fd-8dad-4c63abf9b051", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> " ", "Display" -> "codemirror", 
    "Hash" -> "f143fbbb-0dad-4d3f-ae6c-48d08e2847de", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\n## Spin-Hamiltonian\nLet us have a look at the cubic \
system with a doubly degenerated orbital states. For example, it can be \
effectively $Fe^{2+}$ ions in a cubic spinels with $^5E_g$ states as a ground \
multiplet. Let us have a look at the Hamiltonian for a paramagnetic \
state\n\n$$\nH = \\\\mu g~ \\\\mathbf{S H_0} - d \\\\Big[ U_{\\\\theta} (3 \
Sz^2 - S(S+1)) + \\\\sqrt{3} U_{\\\\epsilon}(Sx^2 - Sy^2)  \\\\Big] \
\n$$\n\nwhere $d$ accounts for an effective spin-orbit coupling and then \
dictates cubic anistoropy for the spin", "Display" -> "codemirror", 
    "Hash" -> "5626686c-5440-496e-88ad-680e01959526", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "## Spin-Hamiltonian\nLet us have a look at the cubic system \
with a doubly degenerated orbital states. For example, it can be effectively \
$Fe^{2+}$ ions in a cubic spinels with $^5E_g$ states as a ground multiplet. \
Let us have a look at the Hamiltonian for a paramagnetic state\n\n$$\nH = \
\\\\mu g~ \\\\mathbf{S H_0} - d \\\\Big[ U_{\\\\theta} (3 Sz^2 - S(S+1)) + \
\\\\sqrt{3} U_{\\\\epsilon}(Sx^2 - Sy^2)  \\\\Big] \n$$\n\nwhere $d$ accounts \
for an effective spin-orbit coupling and then dictates cubic anistoropy for \
the spin", "Display" -> "markdown", 
    "Hash" -> "1c0d4633-c1bd-4385-9b7b-601a1c68a8d8", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\n### Implementation\nNow we move to the actual code", 
    "Display" -> "codemirror", "Hash" -> 
     "f2ebf747-c830-4766-a1c4-d85b8c482f4a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "### Implementation\nNow we move to the actual code", 
    "Display" -> "markdown", "Hash" -> 
     "2a489bec-e8f5-43d6-bb43-90fd81409a4e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "\[Mu] = 0.466;\ng = 2.;", "Display" -> "codemirror", 
    "Hash" -> "fe552087-d1e1-4b7a-9dd6-21a1772f8fd3", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nEffective hamiltonian in our notations", 
    "Display" -> "codemirror", "Hash" -> 
     "61f3af2e-f8f9-438b-ad7a-a7896450cbbe", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Effective hamiltonian in our notations", 
    "Display" -> "markdown", "Hash" -> 
     "09b217b1-fe26-4503-a6e4-04aa53459377", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "H[Hx_, Hy_, Hz_, d_] := \[Mu] g (Hx Sx + Hy Sy + Hz Sz ) - d \
(3 Sz.Sz.U\[Theta] -  2(2+1) U\[Theta] + (*SqB[*)Sqrt[3](*]SqB*) \
Sx.Sx.U\[Epsilon] - (*SqB[*)Sqrt[3](*]SqB*) Sy.Sy.U\[Epsilon])", 
    "Display" -> "codemirror", "Hash" -> 
     "fd416408-b28a-4512-ba28-48b61ef9e98f", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nNow define an array of basis vectors and function to \
__find eigenvalues and eigenvectors__", "Display" -> "codemirror", 
    "Hash" -> "9e423c3b-d796-4ae0-94e8-96b64e0da78c", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Now define an array of basis vectors and function to __find \
eigenvalues and eigenvectors__", "Display" -> "markdown", 
    "Hash" -> "918dcd01-8ff2-4f2b-a896-7ec11b62b73e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "basis = Table[(*BB[*)(Ket[Ms2, \
Ml])(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFxTxAMe/UEpfU5PyixJL8Io\
hKFiARVJqTGgxieKQmpgQzQ9QBABLAE1g=\"*)(*]BB*), {Ms2,-2,2}, {Ml,-1,1,2}] // \
Flatten; \n\nsystem[params__] := With[{ h = Simplify[H[params]]}, With[{\n  r \
= Table[\n\n    Conjugate[i].(h.j)\n\n  , {i, basis}, {j, basis}]  // \
Eigensystem // Transpose \n},\n\n  (* truncate accuracy *)\n  r // Chop\n] ]"\
, "Display" -> "codemirror", "Hash" -> 
     "e585d784-d8ec-4299-8edf-da7ec7e17221", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nNow we need a helper function to find a __thermal \
average of any quantum operator__", "Display" -> "codemirror", 
    "Hash" -> "bc33cbe7-596d-4bfb-b34e-a8200920b903", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Now we need a helper function to find a __thermal average of \
any quantum operator__", "Display" -> "markdown", 
    "Hash" -> "222b0e7b-0995-42e9-9fac-1584a9001525", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "(* for caching already calculated values \
*)\n\nClearAll[cached];\ncached[expr_] := cached[expr] = \
expr;\nSetAttributes[cached, HoldFirst]\n\n\naverage[sys_, T_, operator_] := \
With[{\n  operatorMatrix = cached[Table[Conjugate[i].operator.j, {i, basis}, \
{j, basis}]],\n  \n  stat = Total[Exp[-(*FB[*)((#[[1]])(*,*)/(*,*)(0.7 \
T))(*]FB*)] &/@ sys]\n},\n  Map[\n    \
((Conjugate[{#[[2]]}].operatorMatrix.Transpose[{#[[2]]}]) // First // First) \
(*FB[*)((1)(*,*)/(*,*)(stat))(*]FB*) Exp[-(*FB[*)((#[[1]])(*,*)/(*,*)(0.7 \
T))(*]FB*)] &\n    , sys] // Total  \n]", "Display" -> "codemirror", 
    "Hash" -> "7fdec234-324a-4366-b6c8-f3a549c658e5", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nUsually for such systems a parameter $d\\\\simeq \
3-4~cm^{-1}$. \n\nLet's try to see a magnetic anisotropy in an averaged \
magnetic moment of a single ion site at $T=10~K$ in the magnetic field around \
$10~T$", "Display" -> "codemirror", 
    "Hash" -> "cabd8ab9-6e76-4e01-b668-79f391cc32ca", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Usually for such systems a parameter $d\\\\simeq \
3-4~cm^{-1}$. \n\nLet's try to see a magnetic anisotropy in an averaged \
magnetic moment of a single ion site at $T=10~K$ in the magnetic field around \
$10~T$", "Display" -> "markdown", "Hash" -> 
     "bdba1400-63e6-434a-bdf9-2fba097d4d36", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Table[\n  With[{\n    sys = system[10 Sin[x], 10 Cos[x], 0, \
3.]\n  },\n    (2.0 average[sys, 10, #] &/@ {Sx, Sy}).({Sin[x],  Cos[x]})\n   \
\n  ] {Sin[x],  Cos[x]}\n, {x, 0, 2Pi, 0.1}] // Re;\n\nListLinePlot[%, \n  \
PlotRange->Full, \n  Epilog->{\n    Black // Lighter, Arrow[{{0, 0}, {2.5501, \
0.0}}],\n    Arrow[{{0,0}, {0, 2.52099}}]\n}, AxesLabel->{\"\\\\mu x\", \
\"\\\\mu y\"}, ImageSize->500]", "Display" -> "codemirror", 
    "Hash" -> "9f697cf9-4e0f-4d63-a440-fd2ec2d6445b", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "(*VB[*)(FrontEndRef[\"479678d6-9200-4a82-8697-2c35e766c3b7\"]\
)(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeEJBwK8rPK3HNS3GtSE0uLUlMykkNVgEKm5hbm\
plbpJjpWhoZGOiaJFoY6VqYWZrrGiUbm6aam5klGyeZAwBsURSi\"*)(*]VB*)", 
    "Display" -> "codemirror", "Hash" -> 
     "35afd27a-cab7-4bc0-8587-0b9a1d96d8c5", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nDespite the wrong aspect ratio, it is clear, __that a \
cubic anistropy is quite visible here__ \|01f4ab", "Display" -> "codemirror", 
    "Hash" -> "75ed8e58-8be2-465b-8811-3a4a538e905e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Despite the wrong aspect ratio, it is clear, __that a cubic \
anistropy is quite visible here__ \|01f4ab", "Display" -> "markdown", 
    "Hash" -> "4e9bd4c4-f6ae-4c44-819a-ffd1172626a5", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> " ", "Display" -> "codemirror", 
    "Hash" -> "ce91164c-57b0-4042-a1ac-6131018dd06b", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\n## Ferromagnetic ordering\nOne can go further and model \
an ordered state using *mean field approximation*, which is suitable for \
ferromagnets", "Display" -> "codemirror", 
    "Hash" -> "a51a9ceb-1cd1-4973-b0fb-3120817df1c8", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "## Ferromagnetic ordering\nOne can go further and model an \
ordered state using *mean field approximation*, which is suitable for \
ferromagnets", "Display" -> "markdown", 
    "Hash" -> "57f90edc-1d4f-4964-a1a5-0671ed4a467d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\n$$\nH = \\\\mu g~ \\\\mathbf{S H_0} - d \\\\Big[ \
U_{\\\\theta} (3 Sz^2 - S(S+1)) + \\\\sqrt{3} U_{\\\\epsilon}(Sx^2 - Sy^2)  \
\\\\Big] + J \\\\mathbf{S M}\n$$\n\nwhere $M$ is an average of $\\hat{S}$ \
(i.e. just a classical vector).", "Display" -> "codemirror", 
    "Hash" -> "9c5541a2-7917-4a8b-ac7f-faee77cde200", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "$$\nH = \\\\mu g~ \\\\mathbf{S H_0} - d \\\\Big[ \
U_{\\\\theta} (3 Sz^2 - S(S+1)) + \\\\sqrt{3} U_{\\\\epsilon}(Sx^2 - Sy^2)  \
\\\\Big] + J \\\\mathbf{S M}\n$$\n\nwhere $M$ is an average of $\\hat{S}$ \
(i.e. just a classical vector).", "Display" -> "markdown", 
    "Hash" -> "25b65ce5-f037-4700-8539-9f4de01cab67", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\n### Implementation", "Display" -> "codemirror", 
    "Hash" -> "ad5993d8-8e80-4810-bed7-034ebfe06f67", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "### Implementation", "Display" -> "markdown", 
    "Hash" -> "d4b9269d-a967-42cc-9d6b-9f569dcb8d41", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "H[Hx_, Hy_, Hz_, d_, J_, Mx_, My_, Mz_] := \[Mu] g (Hx Sx + \
Hy Sy + Hz Sz ) - d (3 Sz.Sz.U\[Theta] -  2(2+1) U\[Theta] + \
(*SqB[*)Sqrt[3](*]SqB*) Sx.Sx.U\[Epsilon] - (*SqB[*)Sqrt[3](*]SqB*) \
Sy.Sy.U\[Epsilon]) + J (Mx Sx + My Sy + Mz Sz)", "Display" -> "codemirror", 
    "Hash" -> "5cba7d22-46f4-4319-ac7f-636dedcc6fd0", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "", "Display" -> "codemirror", 
    "Hash" -> "9e5c17ca-a531-4f2a-a7b3-89788965f452", "Invisible" -> True, 
    "MetaOnly" -> True, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Since this is a mean approximation method, we need to \
substitute an averaged value of a spin back to the Hamiltonian and wait until \
it converges. The *memory* of our system is stored exactly in this mean field \
vector", "Display" -> "markdown", "Hash" -> 
     "79f25117-5e2c-491e-b917-0e671be2bf50", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "meanField = {0.1, -0.8, -0.1};\nsys;\n\nprogressBarGenerator \
= Get[\"progressBar.wl\"];\n\nWith[{\n  progress = \
progressBarGenerator[2Pi]\n},\n\nTable[\n  With[{\n    \n  },\n  \n    Do[\n  \
  \n      sys = system @@ Join[{10. Sin[x], 10. Cos[x], 0, 3., -100.}, \
meanField];\n      meanField = average[sys, 10, #] &/@ {Sx, Sy, Sz}; \n      \
\n    , {i, 15}];\n\n    progress[x];\n    \n    \n    ( meanField[[{1,2}]] ) \
. {Sin[x], Cos[x]}\n   \n  ] {Sin[x], Cos[x]}\n  \n, {x, 0, 2Pi, \
0.05}]\n\n];\n\nListLinePlot[%, \n  PlotRange->Full, \n  Epilog->{\n    Black \
// Lighter, Arrow[{{0, 0}, {2.3501, 0.0}}],\n    Arrow[{{0,0}, {0, \
2.32099}}]\n}, AxesLabel->{\"\\\\mu x\", \"\\\\mu y\"}, ImageSize->500]", 
    "Display" -> "codemirror", "Hash" -> 
     "00392379-4b26-4e54-aa44-1a1d30d7d72d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "(*VB[*)(FrontEndRef[\"5b08782b-740e-43ff-be21-295c1bf94885\"]\
)(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeEJBwK8rPK3HNS3GtSE0uLUlMykkNVgEKmyYZW\
JhbGCXpmpsYpOqaGKel6SalGhnqGlmaJhsmpVmaWFiYAgB9xBVQ\"*)(*]VB*)", 
    "Display" -> "codemirror", "Hash" -> 
     "195f75cc-10fb-4853-a2e2-5cd785ffca29", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nNow it is clear, we see the pattern of __cubic magnetic \
anisotropy__", "Display" -> "codemirror", 
    "Hash" -> "ad5a64e6-d0fd-468b-a897-4d62a0b3c0bc", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> 
     "Now it is clear, we see the pattern of __cubic magnetic anisotropy__", 
    "Display" -> "markdown", "Hash" -> 
     "a6055bdb-e8c5-4e14-a769-d4d2d28aab87", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nA calculation itself is quite slow, due to algebra we \
used for quantum computations. In general, we do not need all operators, once \
we constructed the Hamiltonian in the basis we have. We can deal only with \
matrixes and linear algebra.", "Display" -> "codemirror", 
    "Hash" -> "c95771ae-44f3-40ad-83c3-64e5b979d768", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "A calculation itself is quite slow, due to algebra we used \
for quantum computations. In general, we do not need all operators, once we \
constructed the Hamiltonian in the basis we have. We can deal only with \
matrixes and linear algebra.", "Display" -> "markdown", 
    "Hash" -> "0544f82b-c0f7-4bdb-a485-f0a5d119fbae", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\n### Converting operators to matrixes\nWe build a \
function, that approximate any arbitary function up to 2nd order for all \
variables in arguments.\n\nFirstly, import it", "Display" -> "codemirror", 
    "Hash" -> "d2f50753-669f-4202-bffc-fe338e7f0699", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "### Converting operators to matrixes\nWe build a function, \
that approximate any arbitary function up to 2nd order for all variables in \
arguments.\n\nFirstly, import it", "Display" -> "markdown", 
    "Hash" -> "cf9cf5aa-df3d-4d75-859c-0b955e824050", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "quadInterpolation = \
Get[\"quadInterpolator.wl\"];\nprogressBarGenerator = \
Get[\"progressBar.wl\"];", "Display" -> "codemirror", 
    "Hash" -> "0ee079c9-8f17-463d-a5bf-8c8b1e0e69d1", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nNow we apply it to our hamiltonian calculated in the \
basis with a given parameters", "Display" -> "codemirror", 
    "Hash" -> "8d23c134-fd39-4980-9908-192178141d1c", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Now we apply it to our hamiltonian calculated in the basis \
with a given parameters", "Display" -> "markdown", 
    "Hash" -> "e16c5788-8621-4fbc-99f3-a41179b4565c", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "int = quadInterpolation[\n\n  \
Table[Conjugate[fin].H[a1,a2,a3, a4, a5, a6,a7,a8].ini, {fin, basis}, {ini, \
basis}]\n  \n, {a1,0}, {a2,0}, {a3,0}, {a4,0}, {a5,0}, {a6,0}, {a7,0}, \
{a8,0}, \"Monitor\"->progressBarGenerator];", "Display" -> "codemirror", 
    "Hash" -> "ad6e66e6-911e-4e9d-ba1e-bdeef50b22c0", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> 
     ".md\nNow one can check that __it speeds up things__ drastically", 
    "Display" -> "codemirror", "Hash" -> 
     "6eb78f0c-78df-4d49-8d66-569364a086db", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Now one can check that __it speeds up things__ drastically", 
    "Display" -> "markdown", "Hash" -> 
     "c3c8efaa-297e-4f94-938b-440c40eb8250", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "(* old *)\nTable[Conjugate[fin].H[0,1.,1., 1., 1.,  \
1.,1.,1.].ini, {fin, basis}, {ini, basis}] // RepeatedTiming // First \n(* \
converted *)\nint[0,1.,1., 1., 1.,  1.,1.,1.] // RepeatedTiming // First ", 
    "Display" -> "codemirror", "Hash" -> 
     "6bea36d1-e18d-441c-b8a1-1e8f0ee0d601", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, <|"Data" -> "1.051729`", 
    "Display" -> "codemirror", "Hash" -> 
     "ce92a2a1-d6f6-4679-881c-3c89638b39b9", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "0.0007063037109375`", "Display" -> "codemirror", 
    "Hash" -> "b16ec2f9-ecdb-4410-81d3-699cc9a5ccca", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nWe can also save this function for later, so that we do \
not need to derive it again", "Display" -> "codemirror", 
    "Hash" -> "0447abf1-40ef-45bc-83e4-d66f6ac1ece9", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "We can also save this function for later, so that we do not \
need to derive it again", "Display" -> "markdown", 
    "Hash" -> "2f066020-8de8-4932-b70f-2e163228ddd7", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, <|"Data" -> "int // Iconize ", 
    "Display" -> "codemirror", "Hash" -> 
     "454e5eba-f13c-4117-a538-2bd9ffc7ded9", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "(*VB[*)(Get[FileNameJoin[{\".iconized\", \
\"iconized-6f9a.wl\"}]])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRAeH5DwTM7Py6xKdc\
vMSXXKr8i0EGdmAADrVArH\"*)(*]VB*)", "Display" -> "codemirror", 
    "Hash" -> "aa5660ed-5523-4a10-a7fb-38036de009d2", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> " ", "Display" -> "codemirror", 
    "Hash" -> "98202341-168a-447c-9f9d-32ac107ffa16", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\n## Modelling\nusing faster approach", 
    "Display" -> "codemirror", "Hash" -> 
     "1db4ed7b-5d7f-4713-814d-ff691b192267", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "## Modelling\nusing faster approach", 
    "Display" -> "markdown", "Hash" -> 
     "b7524ec8-aca2-4ee0-b4b1-78c4c4f2799a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "progressBarGenerator = Get[\"progressBar.wl\"];\nint = \
(*VB[*)(Get[FileNameJoin[{\".iconized\", \
\"iconized-6f9a.wl\"}]])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRAeH5DwTM7Py6xKdc\
vMSXXKr8i0EGdmAADrVArH\"*)(*]VB*);\n\nmeanField = {0.1, -0.8, \
-0.1};\nsys;\n\nWith[{\n  progress = progressBarGenerator[15]\n},\nTable[\n  \
With[{\n    \n  },\n  \n    Do[\n      sys = int @@ Join[{h Sin[x], h Cos[x], \
0, 3., -100.}, meanField] // Eigensystem // Transpose;\n      meanField = \
average[sys, 10, #] &/@ {Sx, Sy, Sz}; \n    , {i, 25}];\n\n    \
progress[h];\n\n    \n    \n    ( meanField[[{1,2}]]).({Sin[x], Cos[x]})\n   \
\n  ] {Sin[x], Cos[x]}\n, {h, {1,5,10,15}}, {x, 0, 2Pi, \
0.05}]\n];\n\nListLinePlot[%, \n  PlotRange->Full, \n  Epilog->{\n    Black \
// Lighter, Arrow[{{0, 0}, {2.5501, 0.0}}],\n    Arrow[{{0,0}, {0, \
2.52099}}]\n}, AxesLabel->{\"\\\\mu x\", \"\\\\mu y\"}, ImageSize->500]", 
    "Display" -> "codemirror", "Hash" -> 
     "680974b8-3357-4d42-8c98-50d47d4a062e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "(*VB[*)(FrontEndRef[\"e95d0e56-6126-4ecc-9407-85dc03893eca\"]\
)(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeEJBwK8rPK3HNS3GtSE0uLUlMykkNVgEKp1qap\
hikmprpmhkamemapCYn61qaGJjrWpimJBsYW1gapyYnAgB/NRWA\"*)(*]VB*)", 
    "Display" -> "codemirror", "Hash" -> 
     "16224dcc-9338-4415-a87d-6219f14e294a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\nHere we have magnetic moment curves plotted for \
different magnitudes of applied field", "Display" -> "codemirror", 
    "Hash" -> "a4b73659-f44e-40ab-b6d2-aa2afd9660bd", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "Here we have magnetic moment curves plotted for different \
magnitudes of applied field", "Display" -> "markdown", 
    "Hash" -> "7a7f948d-93c4-46b1-8b11-e25b13008b0a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "{{(*VB[*)(RGBColor[0.368417, 0.506779, \
0.709798])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3I\
SSxJTWMGyXMgyRcVTJv0VGXKdfsiw2kvp3eYP7AvOt4yw3vVtmf2AKMBH1E=\"*)(*]VB*), \
(*VB[*)(RGBColor[0.880722, 0.611041, \
0.142051])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3I\
SSxJTWMGyXMgyRf5HIl+fl/vjX3Rv+oPt5b2PrYv2jxrnfouvUP2ALwBIFo=\"*)(*]VB*), \
(*VB[*)(RGBColor[0.560181, 0.691569, \
0.194885])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3I\
SSxJTWMGyXMgyRcxPIvawvD2oX1R6dq9/qGKz+yLJCfsvff34wl7AJc8HzE=\"*)(*]VB*), \
(*VB[*)(RGBColor[0.922526, 0.385626, \
0.209179])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3I\
SSxJTWMGyXMgyRdd2frNLrT1rX3RHf35ayTW3bAv0nBnXJRw7JQ9AKbfHmU=\"*)(*]VB*)}, \
{1,5,10,15}} // Grid ", "Display" -> "codemirror", 
    "Hash" -> "73dcd598-f2b9-4d26-87ca-c758a527e980", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "(*GB[*){{(*VB[*)(RGBColor[0.368417, 0.506779, \
0.709798])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3I\
SSxJTWMGyXMgyRcVTJv0VGXKdfsiw2kvp3eYP7AvOt4yw3vVtmf2AKMBH1E=\"*)(*]VB*)(*|*),\
(*|*)(*VB[*)(RGBColor[0.880722, 0.611041, \
0.142051])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3I\
SSxJTWMGyXMgyRf5HIl+fl/vjX3Rv+oPt5b2PrYv2jxrnfouvUP2ALwBIFo=\"*)(*]VB*)(*|*),\
(*|*)(*VB[*)(RGBColor[0.560181, 0.691569, \
0.194885])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3I\
SSxJTWMGyXMgyRcxPIvawvD2oX1R6dq9/qGKz+yLJCfsvff34wl7AJc8HzE=\"*)(*]VB*)(*|*),\
(*|*)(*VB[*)(RGBColor[0.922526, 0.385626, \
0.209179])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3I\
SSxJTWMGyXMgyRdd2frNLrT1rX3RHf35ayTW3bAv0nBnXJRw7JQ9AKbfHmU=\"*)(*]VB*)}(*||*\
),(*||*){1(*|*),(*|*)5(*|*),(*|*)10(*|*),(*|*)15}}(*]GB*)", 
    "Display" -> "codemirror", "Hash" -> 
     "a4ed50b0-882d-4f05-8c22-69765c2adcf4", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> " ", "Display" -> "codemirror", 
    "Hash" -> "459c0bcb-8a61-4858-a67e-12e428afa9e6", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".html\n<style>\n  #realtimeStuff {\n    scroll-behavior: \
smooth;\n  }\n</style>\n<div id=\"realtimeStuff\"></div>", 
    "Display" -> "codemirror", "Hash" -> 
     "071487d2-6ba3-4fe2-aa86-5b707e6d8d38", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "<style>\n  #realtimeStuff {\n    scroll-behavior: smooth;\n  \
}\n</style>\n<div id=\"realtimeStuff\"></div>", "Display" -> "html", 
    "Hash" -> "6d386705-fd83-4a7b-bfaf-52c921208197", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\n## Real-time modelling\nWe can go further and \
recalculate spins based on user's input. For this case `Offload` keyword is \
used together with some GUI building blocks", "Display" -> "codemirror", 
    "Hash" -> "a3b86477-24b7-4ba3-b767-634b03e6a985", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "## Real-time modelling\nWe can go further and recalculate \
spins based on user's input. For this case `Offload` keyword is used together \
with some GUI building blocks", "Display" -> "markdown", 
    "Hash" -> "31f01153-3880-440d-98da-ed3ce0ce113a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> ".md\n<span style=\"color:red\">Evaluate initialization cells \
before</span>", "Display" -> "codemirror", 
    "Hash" -> "c6f66956-e6fc-412e-97d1-d53de3e33943", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> 
     "<span style=\"color:red\">Evaluate initialization cells before</span>", 
    "Display" -> "markdown", "Hash" -> 
     "533c25b8-d8eb-4da0-9722-ecad0f6f3ac7", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> " ", "Display" -> "codemirror", 
    "Hash" -> "86d26dbb-3377-48ac-8aa4-a747768cdd0c", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>, 
   <|"Data" -> "int = (*VB[*)(Get[FileNameJoin[{\".iconized\", \
\"iconized-6f9a.wl\"}]])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRAeH5DwTM7Py6xKdc\
vMSXXKr8i0EGdmAADrVArH\"*)(*]VB*);\n\nLeakyModule[{\n  spin = {0.1, -0.8, \
-0.11},\n  defaults = {0.,0.,0., 3., -100.},\n  temperature = 10.,\n  field = \
{0.,0.},\n  controlPanel,\n  recalculate\n},\n\n  recalculate := With[{\n    \
sys = int @@ Join[defaults, spin] // Eigensystem // Transpose\n  },\n    spin \
= average[sys, temperature, #] &/@ {Sx, Sy, Sz} // Chop // Re;\n  ];\n\n  \
controlPanel = InputGroup[{\n    InputRange[0, 5., 1, 3, \
\"Label\"->\"Spin-orbit\"],\n    InputRange[-100, 0., 10, -100, \
\"Label\"->\"J\"],\n    InputRange[1, 150., 10, 10, \
\"Label\"->\"Temperature\"]\n  }];\n\n  EventHandler[controlPanel, \
Function[data,\n    defaults[[4;;5]] = data[[1;;2]];\n    temperature = \
data[[3]];\n  ]];\n\n  {\n    Graphics[{\n      White, \
EventHandler[Rectangle[{-4,-4}, {4,4}], {\"mousemove\" -> Function[xy,\n      \
  defaults[[1;;2]] = - 10 xy;\n        field = xy 0.8;\n        \
recalculate;\n      ]}],\n      Red, Arrow[{{0,0}, With[{s = spin}, {s[[1]], \
s[[2]]}] // Offload}],\n      Blue, Arrow[{{0,0}, field // Offload}]\n    }, \
PlotRange->1.5{{-2,2}, {-2,2}}, Controls->False, \
\"TransitionType\"->\"Linear\", \"TransitionDuration\"->30, \
ImagePadding->0],\n    \n    controlPanel\n  } // Row  \n]", 
    "Display" -> "codemirror", "Hash" -> 
     "793745e8-06cc-4b21-aba1-9458f3f472c7", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "effcea8c-e78d-4a56-9683-2e334a807cbf"|>}, "serializer" -> "jsfn4"|>
