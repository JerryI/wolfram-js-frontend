<|"notebook" -> <|"name" -> "Unconventional", "id" -> "stabling-b11cc", 
   "kernel" -> LocalKernel, "objects" :> 
    <|"65343d29-969e-489b-a266-8cb5fd8f9e21" -> 
      <|"json" -> "[\"Graphics\",[\"List\",[\"RGBColor\",0,1,1],[\"Line\",[\"\
Hold\",[\"Table\",[\"List\",[\"Cos\",\"x\"],[\"Sin\",[\"Times\",\"v\",\"x\"]]\
],[\"List\",\"x\",0,[\"Times\",2,\"Pi\"],1]]]]]]", 
       "date" -> DateObject[{2023, 6, 12, 15, 0, 3.140943`7.249635043488979}, 
         "Instant", "Gregorian", 3.]|>, 
     "639f2b15-b4ec-4414-b3b1-9732ce4159ab" -> 
      <|"json" -> "[\"Graphics\",[\"List\",[\"RGBColor\",0,1,1],[\"Line\",[\"\
Hold\",[\"With\",[\"List\",[\"Set\",\"y\",\"v\"]],[\"Table\",[\"List\",[\"Cos\
\",\"x\"],[\"Sin\",[\"Times\",\"y\",\"x\"]]],[\"List\",\"x\",0,[\"Times\",2,\
\"Pi\"],1]]]]]]]", "date" -> DateObject[{2023, 6, 12, 15, 1, 
          41.827597`8.37403789300913}, "Instant", "Gregorian", 3.]|>, 
     "8c1affc8-2287-4247-81c7-2f3fbf412755" -> 
      <|"json" -> "[\"RangeView\",[\"List\",0,6,0.5,1],[\"Rule\",\"'Event'\",\
\"'2d5014a5-9ba1-4f78-af25-e6f9ab22098d'\"],1,[\"Rule\",\"'Label'\",\"'Slider\
'\"]]", "date" -> DateObject[{2023, 9, 8, 21, 46, 
          28.337927`8.204943058719078}, "Instant", "Gregorian", 3.]|>, 
     "f090329e-cc89-45b5-af2f-0157d87e3324" -> 
      <|"json" -> "[\"Graphics\",[\"List\",[\"RGBColor\",0,1,1],[\"Line\",[\"\
Offload\",[\"With\",[\"List\",[\"Set\",\"y\",\"v\"]],[\"Table\",[\"List\",[\"\
Cos\",\"x\"],[\"Sin\",[\"Times\",\"y\",\"x\"]]],[\"List\",\"x\",0,[\"Times\",\
2,\"Pi\"],1.0e-2]]]]]]]", "date" -> DateObject[{2023, 9, 8, 21, 46, 
          40.697966`8.362147682879232}, "Instant", "Gregorian", 3.]|>|>, 
   "path" -> "/Volumes/Data/Github/wolfram-js-frontend/Examples/Tutorial/Slid\
erExample.wln", "cell" :> Exit[], 
   "date" -> DateObject[{2023, 9, 8, 21, 47, 2.520356`7.154036877775279}, 
     "Instant", "Gregorian", 3.], "symbols" -> 
    <|"v" -> <|"date" -> DateObject[{2023, 9, 8, 21, 47, 
          2.543799`7.158057780874026}, "Instant", "Gregorian", 3.], 
       "data" -> 3|>|>, "channel" -> WebSocketChannel[
     KirillBelov`WebSocketHandler`WebSocketChannel`$19]|>, 
 "cells" -> {<|"id" -> "4745e2e0-1b05-428d-a199-436a1c906784a10a65", 
    "type" -> "input", "data" -> ".md\nTo define slider use `InputRange` \
symbol (simillar to one you have in HTML) and then, one can assign a handler \
function to it ", "display" -> "codemirror", "sign" -> "stabling-b11cc", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "f2eac771-ac75-45e1-82bd-37233451fce5", "type" -> "output", 
    "data" -> "\nTo define slider use `InputRange` symbol (simillar to one \
you have in HTML) and then, one can assign a handler function to it ", 
    "display" -> "markdown", "sign" -> "stabling-b11cc", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "7c554830-72d5-418a-837b-79eb27978a30a10a65", "type" -> "input", 
    "data" -> "InputRange[0,6, 0.5, 1, \
\"Label\"->\"Slider\"]\nEventHandler[%, Function[data, v = data]];\nv = 1;", 
    "display" -> "codemirror", "sign" -> "stabling-b11cc", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "1a246530-735f-469a-982f-22102ecebc81", "type" -> "output", 
    "data" -> "FrontEndExecutable[\"8c1affc8-2287-4247-81c7-2f3fbf412755\"]", 
    "display" -> "codemirror", "sign" -> "stabling-b11cc", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "a06737fe-7306-4faf-a02d-67cf1cd6b706a10a65", "type" -> "input", 
    "data" -> 
     ".md\nLet's do something interesting with our global variable `v`. ", 
    "display" -> "codemirror", "sign" -> "stabling-b11cc", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "96c3ab5d-585a-417d-aeb6-a6524309bfe0", "type" -> "output", 
    "data" -> 
     "\nLet's do something interesting with our global variable `v`. ", 
    "display" -> "markdown", "sign" -> "stabling-b11cc", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "8983fc77-9004-491b-b0f9-c657a4ead974a10a65", "type" -> "input", 
    "data" -> "Graphics[{\n  Cyan, \n  Line[\n    With[{y = v}, \n      \
Table[{Cos[x], Sin[y x]}, {x, 0, 2Pi, 0.01}]\n    ] // Offload\n  ]\n}]", 
    "display" -> "codemirror", "sign" -> "stabling-b11cc", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "d5177220-ad61-4e3e-8360-c0b71e97e5d4", "type" -> "output", 
    "data" -> "FrontEndExecutable[\"f090329e-cc89-45b5-af2f-0157d87e3324\"]", 
    "display" -> "codemirror", "sign" -> "stabling-b11cc", 
    "props" -> <|"hidden" -> False|>|>}, "serializer" -> "jsfn3"|>
