<|"Notebook" -> <|"FocusedCell" -> CellObj[JerryI`Notebook`CellObj`$1150], 
   "Objects" -> <||>, "Path" -> "/Users/kirill/Library/Application \
Support/wljs-notebook/Examples/Dynamics/Animation/Parametric curve \
animator.wln"|>, "Cells" -> 
  {<|"Data" -> ".md\n## Parametric curve animator\nProvide a curve equation \
as a function of the angle and the ranges", "Display" -> "codemirror", 
    "Hash" -> "6d33d1ae-346e-4393-9aec-bafc2da43ca5", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "dd480928-fcc5-4e60-a49b-4b69fa9e78a6"|>, 
   <|"Data" -> "\n## Parametric curve animator\nProvide a curve equation as a \
function of the angle and the ranges", "Display" -> "markdown", 
    "Hash" -> "93183377-ba0c-418e-b7a6-52a3805aadbf", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "dd480928-fcc5-4e60-a49b-4b69fa9e78a6"|>, 
   <|"Data" -> "ParametricAnimator[equation_, variable_:t, range_:{0, \
Infinity, 0.1}] := LeakyModule[{time = range[[1]], task, scale = 1, array = \
{}, scaledArray={}, cell = ResultCell[]},\n\n    (* sample the equation each \
frame and rescale if needed *)\n\tanimate := Block[{variable = time},\n       \
 With[{e = {Sin[t], Cos[t]} equation},\n    \t\tscale = If[Norm[e scale] > \
1.4, scale 0.95, scale 1];\n            array = Append[array, e];\n    \
\t\tscaledArray = scale array; \n            pointer = e scale;\n        \
];\n\n\t\ttime += range[[3]];\n\t\tIf[time >= range[[2]], \
TaskRemove[task]];\n\t];\n\n    animate;\n\n    (* async task to animate \
every 30 ms *)\n\ttask = SetInterval[animate, 30];\n\n    (* stop the task if \
cell was destroyed or reevaluated *)\n\tEventHandler[cell, \
{\"Destroy\"->Function[Null, TaskRemove[task]; \
Print[\"removed\"]]}];\n\n\tGraphics[{Red, PointSize[0.05], Point[pointer // \
Offload],\n Opacity[0.5], Line[scaledArray // Offload]\n  }, \
\"TransitionDuration\"->10, \"TransitionType\"->\"Linear\", Controls->True, \
PlotRange->{{-1,1}, {-1,1}}]\n]", "Display" -> "codemirror", 
    "Hash" -> "9cb837df-f8ff-42db-b40e-1ba305e07393", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False, "init" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "dd480928-fcc5-4e60-a49b-4b69fa9e78a6"|>, 
   <|"Data" -> "ParametricAnimator[Exp[Sin[t]] - 2 Cos[4t] + Sin[(2t - \
Pi)/24], t, {0,16, 0.05}]", "Display" -> "codemirror", 
    "Hash" -> "8e02110b-d96a-4c43-afb6-bcdf44fe8a72", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "dd480928-fcc5-4e60-a49b-4b69fa9e78a6"|>}, "serializer" -> "jsfn4"|>
