<|"notebook" -> <|"name" -> "Detoxification", "id" -> "venerating-bd3b2", 
   "kernel" -> LocalKernel, "objects" :> 
    Association["aeaa80bb-8032-4f70-bbe3-e0c84f23deae" -> 
      Association["json" -> "[\"Graphics\",[\"List\",[\"List\",[\"List\",[\"R\
GBColor\",0.922526,0.385626,0.209179],[\"Point\",[\"Offload\",[\"Part\",\"ipo\
s\",1]]]],[\"List\",[\"RGBColor\",0.772362461,0.418458463,0.34484674899999995\
],[\"Point\",[\"Offload\",[\"Part\",\"ipos\",2]]]],[\"List\",[\"RGBColor\",0.\
652120808,0.444748664,0.453481072],[\"Point\",[\"Offload\",[\"Part\",\"ipos\"\
,3]]]],[\"List\",[\"RGBColor\",0.5584763869999999,0.46522352100000003,0.53808\
5683],[\"Point\",[\"Offload\",[\"Part\",\"ipos\",4]]]],[\"List\",[\"RGBColor\
\",0.488104544,0.480609952,0.601664296],[\"Point\",[\"Offload\",[\"Part\",\"i\
pos\",5]]]],[\"List\",[\"RGBColor\",0.437680625,0.49163487499999997,0.6472206\
25],[\"Point\",[\"Offload\",[\"Part\",\"ipos\",6]]]],[\"List\",[\"RGBColor\",\
0.403879976,0.499025208,0.6777583840000001],[\"Point\",[\"Offload\",[\"Part\"\
,\"ipos\",7]]]],[\"List\",[\"RGBColor\",0.383377943,0.503507869,0.696281287],\
[\"Point\",[\"Offload\",[\"Part\",\"ipos\",8]]]],[\"List\",[\"RGBColor\",0.37\
284987199999997,0.505809776,0.7057930480000001],[\"Point\",[\"Offload\",[\"Pa\
rt\",\"ipos\",9]]]],[\"List\",[\"RGBColor\",0.368971109,0.5066578469999999,0.\
7092973810000001],[\"Point\",[\"Offload\",[\"Part\",\"ipos\",10]]]]],[\"List\
\",[\"RGBColor\",0.368417,0.506779,0.709798],[\"Point\",[\"MiddlewareListener\
\",[\"Offload\",[\"Part\",\"ipos\",11]],\"'end'\",\"'3f2cde16-fbc9-4344-8c33-\
38682f240062'\",[\"Rule\",\"'Threshold'\",0.1]]]]],[\"Rule\",\"Controls\",tru\
e],[\"Rule\",\"'TransitionDuration'\",200],[\"Rule\",\"'TransitionType'\",\"'\
Linear'\"]]", "date" -> DateObject[{2023, 9, 21, 20, 39, 
          3.582206`7.306725545312781}, "Instant", "Gregorian", 2.]], 
     "833bea35-a00b-41be-ab3a-734f6d0b7544" -> 
      Association["json" -> "[\"Graphics\",[\"List\",[\"List\",[\"List\",[\"R\
GBColor\",0.922526,0.385626,0.209179],[\"Point\",[\"Offload\",[\"Part\",\"ipo\
s\",1]]]],[\"List\",[\"RGBColor\",0.772362461,0.418458463,0.34484674899999995\
],[\"Point\",[\"Offload\",[\"Part\",\"ipos\",2]]]],[\"List\",[\"RGBColor\",0.\
652120808,0.444748664,0.453481072],[\"Point\",[\"Offload\",[\"Part\",\"ipos\"\
,3]]]],[\"List\",[\"RGBColor\",0.5584763869999999,0.46522352100000003,0.53808\
5683],[\"Point\",[\"Offload\",[\"Part\",\"ipos\",4]]]],[\"List\",[\"RGBColor\
\",0.488104544,0.480609952,0.601664296],[\"Point\",[\"Offload\",[\"Part\",\"i\
pos\",5]]]],[\"List\",[\"RGBColor\",0.437680625,0.49163487499999997,0.6472206\
25],[\"Point\",[\"Offload\",[\"Part\",\"ipos\",6]]]],[\"List\",[\"RGBColor\",\
0.403879976,0.499025208,0.6777583840000001],[\"Point\",[\"Offload\",[\"Part\"\
,\"ipos\",7]]]],[\"List\",[\"RGBColor\",0.383377943,0.503507869,0.696281287],\
[\"Point\",[\"Offload\",[\"Part\",\"ipos\",8]]]],[\"List\",[\"RGBColor\",0.37\
284987199999997,0.505809776,0.7057930480000001],[\"Point\",[\"Offload\",[\"Pa\
rt\",\"ipos\",9]]]],[\"List\",[\"RGBColor\",0.368971109,0.5066578469999999,0.\
7092973810000001],[\"Point\",[\"Offload\",[\"Part\",\"ipos\",10]]]]],[\"List\
\",[\"RGBColor\",0.368417,0.506779,0.709798],[\"Point\",[\"MiddlewareListener\
\",[\"Offload\",[\"Part\",\"ipos\",11]],\"'end'\",\"'c0374f08-28bc-4133-a57b-\
0e5a00541d49'\",[\"Rule\",\"'Threshold'\",0.1]]]]],[\"Rule\",\"Controls\",tru\
e],[\"Rule\",\"'TransitionDuration'\",200],[\"Rule\",\"'TransitionType'\",\"'\
Linear'\"]]", "date" -> DateObject[{2023, 9, 21, 20, 45, 
          44.753595`8.403402904541537}, "Instant", "Gregorian", 2.]], 
     "502ddca9-d6bf-4128-8a7f-290536302602" -> 
      Association["json" -> "[\"FrontEndTruncated\",\"'{{0.2820961261176432`,\
0.6718108681923511`,0.`,0.`},{-0.249590619421556`,-0.13689180980655713`,0.`,0\
.'\",53388]", "date" -> DateObject[{2023, 9, 21, 21, 38, 
          17.293475`7.99045725493332}, "Instant", "Gregorian", 2.]], 
     "07a71e7f-4c62-410a-8c44-5f3b9780662a" -> 
      Association["json" -> "[\"Graphics\",[\"List\",[\"List\",[\"List\",[\"R\
GBColor\",0.922526,0.385626,0.209179],[\"Point\",[\"Offload\",[\"Part\",\"ipo\
s\",1]]]],[\"List\",[\"RGBColor\",0.772362461,0.418458463,0.34484674899999995\
],[\"Point\",[\"Offload\",[\"Part\",\"ipos\",2]]]],[\"List\",[\"RGBColor\",0.\
652120808,0.444748664,0.453481072],[\"Point\",[\"Offload\",[\"Part\",\"ipos\"\
,3]]]],[\"List\",[\"RGBColor\",0.5584763869999999,0.46522352100000003,0.53808\
5683],[\"Point\",[\"Offload\",[\"Part\",\"ipos\",4]]]],[\"List\",[\"RGBColor\
\",0.488104544,0.480609952,0.601664296],[\"Point\",[\"Offload\",[\"Part\",\"i\
pos\",5]]]],[\"List\",[\"RGBColor\",0.437680625,0.49163487499999997,0.6472206\
25],[\"Point\",[\"Offload\",[\"Part\",\"ipos\",6]]]],[\"List\",[\"RGBColor\",\
0.403879976,0.499025208,0.6777583840000001],[\"Point\",[\"Offload\",[\"Part\"\
,\"ipos\",7]]]],[\"List\",[\"RGBColor\",0.383377943,0.503507869,0.696281287],\
[\"Point\",[\"Offload\",[\"Part\",\"ipos\",8]]]],[\"List\",[\"RGBColor\",0.37\
284987199999997,0.505809776,0.7057930480000001],[\"Point\",[\"Offload\",[\"Pa\
rt\",\"ipos\",9]]]],[\"List\",[\"RGBColor\",0.368971109,0.5066578469999999,0.\
7092973810000001],[\"Point\",[\"Offload\",[\"Part\",\"ipos\",10]]]]],[\"List\
\",[\"RGBColor\",0.368417,0.506779,0.709798],[\"Point\",[\"MiddlewareListener\
\",[\"Offload\",[\"Part\",\"ipos\",11]],\"'end'\",\"'421242c6-0e1a-41d5-ac70-\
4c3cff63833a'\",[\"Rule\",\"'Threshold'\",0.1]]]]],[\"Rule\",\"Controls\",tru\
e],[\"Rule\",\"'TransitionDuration'\",200],[\"Rule\",\"'TransitionType'\",\"'\
Linear'\"]]", "date" -> DateObject[{2023, 9, 21, 21, 39, 
          21.710756`8.08924992991336}, "Instant", "Gregorian", 2.]]], 
   "path" -> "/Volumes/Data/Github/wolfram-js-frontend/Examples/Dev/OpenCL/Ma\
nyBody.wln", "cell" :> Exit[], "date" -> 
    DateObject[{2023, 9, 27, 10, 50, 20.50317`8.064395996325288}, "Instant", 
     "Gregorian", 2.], "symbols" -> 
    <|"ipos" -> <|"date" -> DateObject[{2023, 9, 21, 21, 39, 
          21.850736`8.092041053358964}, "Instant", "Gregorian", 2.]|>|>, 
   "channel" -> WebSocketChannel[
     KirillBelov`WebSocketHandler`WebSocketChannel`$16], 
   "SelectedCell" -> "6e7b4959-472a-4cca-b332-086f1949b6ca"|>, 
 "cells" -> {<|"id" -> "3bf5b7f8-3576-4973-9e06-907eb4f830fee23", 
    "type" -> "input", "data" -> ".md\n## OpenCL Many-body example\nAdapted \
from [Richard Hennigan, Wolfram \
Research](https://community.wolfram.com/groups/-/m/t/93435).\n\nThere are not \
so-many bodies, since SVG graphics is not meant for thousands of objects. \
Consider to use custom written function for raster graphics based on JS \
Canvas or WebGL.", "display" -> "codemirror", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "99d6e136-b55a-4388-8eb6-716a25b36e59e23", "type" -> "output", 
    "data" -> "\n## OpenCL Many-body example\nAdapted from [Richard Hennigan, \
Wolfram Research](https://community.wolfram.com/groups/-/m/t/93435).\n\nThere \
are not so-many bodies, since SVG graphics is not meant for thousands of \
objects. Consider to use custom written function for raster graphics based on \
JS Canvas or WebGL.", "display" -> "markdown", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "8ccfcd17-406e-41ab-b208-439cdb48dedce23", "type" -> "input", 
    "data" -> ".md\nEvaluate <span style=\"color:red\">initialization cells \
first</span>!", "display" -> "codemirror", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "52a6f647-cac7-4a32-8807-fe94a87faab9e23", "type" -> "output", 
    "data" -> 
     "\nEvaluate <span style=\"color:red\">initialization cells \
first</span>!", "display" -> "markdown", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "7c028081-7e18-4dd1-bd4a-1849e52b892be23", "type" -> "input", 
    "data" -> ".md\n### Test if you system support OpenCL", 
    "display" -> "codemirror", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "b119f42b-74a5-4267-987a-8a39c792cc29e23", "type" -> "output", 
    "data" -> "\n### Test if you system support OpenCL", 
    "display" -> "markdown", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "16c95108-7506-4e2e-a116-289ef3893257e23", "type" -> "input", 
    "data" -> "Needs[\"OpenCLLink`\"] \nIf[!OpenCLQ[], \
FrontSubmit[Alert[\"No, It doest not\"]]; Abort[]];", 
    "display" -> "codemirror", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> False, "init" -> True|>|>, 
   <|"id" -> "21f24c32-4851-4f6c-bc9f-444896149986e23", "type" -> "input", 
    "data" -> ".md\n__OpenCL Kernel__", "display" -> "codemirror", 
    "sign" -> "venerating-bd3b2", "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "77aff023-bcd8-434d-b776-e1c5ebd12a46e23", "type" -> "output", 
    "data" -> "\n__OpenCL Kernel__", "display" -> "markdown", 
    "sign" -> "venerating-bd3b2", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "d25ca7a5-5083-4a97-988d-baf65330f3cce23", "type" -> "input", 
    "data" -> ".md\nIt creates a file `nbody.cl` in the notebook directory", 
    "display" -> "codemirror", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "aba8597f-4bdd-4a20-a60d-e780d1ed561fe23", "type" -> "output", 
    "data" -> "\nIt creates a file `nbody.cl` in the notebook directory", 
    "display" -> "markdown", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "033027c2-d96a-4703-bd9f-b81c3f59ff32e23", "type" -> "input", 
    "data" -> "nbody.cl\n__kernel void nbody_kern(\n     float timeStep,\n    \
 float eps,\n     __global float4* position1,\n     __global float4* \
velocity1,\n     __global float4* acceleration1,\n     __global float4* \
position2,\n     __global float4* velocity2,\n     __global float4* \
acceleration2,\n    __local float4* localPosition\n) {\n    const float4 dt = \
(float4)(timeStep,timeStep,timeStep,0.0f);\n\n    int idxGlobal = \
get_global_id(0);\n    int idxLocal = get_local_id(0);\n\n    int globalSize \
= get_global_size(0);\n    int localSize = get_local_size(0);\n    int blocks \
= globalSize / localSize;\n    \n    float4 currentPosition = \
position1[idxGlobal];\n    float4 currentVelocity = velocity1[idxGlobal];\n   \
 float4 currentAcceleration = acceleration1[idxGlobal];\n    \n    float4 \
newPosition = (float4)(0.0f,0.0f,0.0f,0.0f);\n    float4 newVelocity = \
(float4)(0.0f,0.0f,0.0f,0.0f);\n    float4 newAcceleration = \
(float4)(0.0f,0.0f,0.0f,0.0f);\n    \n    for(int currentBlock = 0; \
currentBlock < blocks; currentBlock++)\n    {\n        \
localPosition[idxLocal] = position1[currentBlock * localSize + idxLocal];\n   \
     barrier(CLK_LOCAL_MEM_FENCE);\n        for(int idx = 0; idx < localSize; \
idx++)\n        {\n            float4 dir = localPosition[idx] - \
currentPosition;\n            float invRadius = rsqrt(dir.x * dir.x + dir.y * \
dir.y + dir.z * dir.z + eps);\n            float magnitude = \
localPosition[idx].w * invRadius * invRadius * invRadius;\n            \
newAcceleration += magnitude * dir;\n        }\n        \
barrier(CLK_LOCAL_MEM_FENCE);\n    }\n    \n    // leapfrog integration\n    \
newPosition = currentPosition + currentVelocity * dt + 0.5f * \
currentAcceleration * dt * dt;\n    newVelocity = currentVelocity + 0.5f * \
(currentAcceleration + newAcceleration) * dt;\n    \n    position2[idxGlobal] \
= newPosition;\n    velocity2[idxGlobal] = newVelocity;\n    \
acceleration2[idxGlobal] = newAcceleration;\n}", "display" -> "codemirror", 
    "sign" -> "venerating-bd3b2", "props" -> <|"hidden" -> False, 
      "init" -> True|>|>, 
   <|"id" -> "eebed4fb-b950-4c4c-9a3d-1e4c6b3fc008e23", "type" -> "output", 
    "data" -> "* 1867 characters were written *", "display" -> "fileprint", 
    "sign" -> "venerating-bd3b2", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "b11989cd-889a-47a1-8627-431012f3f554e23", "type" -> "input", 
    "data" -> ".md\nInit the position and velocities and group particles by \
the distance to the center", "display" -> "codemirror", 
    "sign" -> "venerating-bd3b2", "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "22e3c824-5c8e-4af9-b7c0-c2eef6bc5dede23", "type" -> "output", 
    "data" -> "\nInit the position and velocities and group particles by the \
distance to the center", "display" -> "markdown", 
    "sign" -> "venerating-bd3b2", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "e860d69e-94de-4b4e-b7dc-28bc71f4a1e7e23", "type" -> "input", 
    "data" -> "Pause[1];\n\ninitialVelocity[pt_] := Module[\n   {y, v0, \
$theta$},\n   y = Norm[pt[[1 ;; 3]]]/(2 rd);\n   v0 = 4*Pi $Sigma$0*rd*\n     \
y^2 (BesselI[0, y]*BesselK[0, y] - BesselI[1, y]*BesselK[1, y]);\n   $theta$ \
= ArcTan[pt[[1]], pt[[2]]];\n   {-v0 Sin[$theta$], v0 Cos[$theta$], 0.0, 0.0} \
+ \n    RandomVariate[NormalDistribution[0, .001], 4]\n   ]\n\nsource = \
{FileNameJoin[{Directory[], \"nbody.cl\"}]};\n\nstepSimulation = \
OpenCLFunctionLoad[\n   source,\n   \"nbody_kern\",\n   {\n    \"Float\",\n   \
 \"Float\",\n    {\"Float\", _, \"Input\"},\n    {\"Float\", _, \"Input\"},\n \
   {\"Float\", _, \"Input\"},\n    {\"Float\", _, \"Output\"},\n    \
{\"Float\", _, \"Output\"},\n    {\"Float\", _, \"Output\"},\n    {\"Local\", \
\"Float\"}\n    },\n   256, \"ShellOutputFunction\" -> Print\n   ];\n\ndt = \
.01;\neps = .0001;\nrd = 1.0;\n$Sigma$0 = 0.3;\nlen = 2^10;\n\nparticles = \
(RandomReal[{0,1}]{Cos[#], Sin[#], 0.0, 0.0}) & /@ RandomReal[{0, 2 Pi}, len] \
      \n\nparticles = SortBy[particles, Norm[#]&];\n\nextended = {#, Norm[#]} \
&/@ particles;\nextended[[All, 1]] = \
Range[Length[particles]];\nextended[[All, 2]] = extended[[All, 2]] / \
Max[extended[[All,2]]];\nextended[[All, 2]] = Round[#, 0.1] &/@ \
extended[[All, 2]];\nextended = GroupBy[extended, Last];\ngroups = \
(extended[#][[All,1]]) &/@ (extended // Keys);\ncolors = \
Table[Blend[{FrontEndView[RGBColor[0.368417, 0.506779, 0.709798], \
\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3ISSxJTWMGyXMgyRcVT\
Jv0VGXKdfsiw2kvp3eYP7AvOt4yw3vVtmf2AKMBH1E=\"], \
FrontEndView[RGBColor[0.922526, 0.385626, 0.209179], \
\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3ISSxJTWMGyXMgyRdd2\
frNLrT1rX3RHf35ayTW3bAv0nBnXJRw7JQ9AKbfHmU=\"]}, CM6Superscript[(1-x), 3]], \
{x, extended // Keys}];\ngroups = <|\"start\"->First[#], \"end\"->Last[#]|> \
&/@ Sort /@ groups;\n       \nparticles[[All, 4]] = 1.0/len;\nvelocity = \
initialVelocity /@ particles;\nacceleration = Array[{0.0, 0.0, 0.0, 0.0} &, \
len];\n\nposition1 = OpenCLMemoryLoad[particles, \"Float\"];\nvelocity1 = \
OpenCLMemoryLoad[velocity, \"Float\"];\nacceleration1 = \
OpenCLMemoryLoad[acceleration, \"Float\"];\n\nposition2 = \
OpenCLMemoryAllocate[\"Float\", {len, 4}];\nvelocity2 = \
OpenCLMemoryAllocate[\"Float\", {len, 4}];\nacceleration2 = \
OpenCLMemoryAllocate[\"Float\", {len, 4}];\n", "display" -> "codemirror", 
    "sign" -> "venerating-bd3b2", "props" -> <|"hidden" -> False, 
      "init" -> True|>|>, 
   <|"id" -> "cf55bf56-25aa-4457-b57a-394f108753cee23", "type" -> "output", 
    "data" -> "FrontEndExecutable[\"502ddca9-d6bf-4128-8a7f-290536302602\"]", 
    "display" -> "codemirror", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "00278a21-4af2-4384-b11e-a28476d836b4e23", "type" -> "input", 
    "data" -> "stepSimulation[dt, eps, position1, velocity1, acceleration1, \
\n      position2, velocity2, acceleration2, 256*4, len];\nstepSimulation[dt, \
eps, position2, velocity2, acceleration2, \n      position1, velocity1, \
acceleration1, 256*4, len];\nipos = \
Table[OpenCLMemoryGet[position1][[i[\"start\"];; i[\"end\"], 1 ;; 3]], {i, \
groups}];", "display" -> "codemirror", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> False, "init" -> True|>|>, 
   <|"id" -> "ecfeeaeb-a68c-4cf5-9b5a-c1b734704766e23", "type" -> "input", 
    "data" -> ".md\n## Live show\nRun this cell at the very last moment", 
    "display" -> "codemirror", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "ea53c332-2264-4865-b7da-e4026eeedd2ae23", "type" -> "output", 
    "data" -> "\n## Live show\nRun this cell at the very last moment", 
    "display" -> "markdown", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "6e7b4959-472a-4cca-b332-086f1949b6cae23", "type" -> "input", 
    "data" -> "Graphics[{\n  Table[\n    With[{color = colors[[i]], i=i},\n   \
   {color, Point[ipos[[i]] // Offload]}\n    ]\n  , {i, Length[colors]-1}\n  \
],\n\n  With[{last = Length[colors]},\n    {colors // Last, \
Point[MiddlewareHandler[ipos[[last]] // Offload, \"end\"->update, \
\"Threshold\"->0.1]]}\n  ]\n}, Controls -> True, \"TransitionDuration\" -> \
200, \"TransitionType\" -> \"Linear\"]", "display" -> "codemirror", 
    "sign" -> "venerating-bd3b2", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "5dfce3fa-7861-4990-b357-c6d11ac6aa79e23", "type" -> "input", 
    "data" -> ".md\nTo stop the animation, clear the `update` variable", 
    "display" -> "codemirror", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "0bdb57ae-13e9-47bd-8c84-576434456c84e23", "type" -> "output", 
    "data" -> "\nTo stop the animation, clear the `update` variable", 
    "display" -> "markdown", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "a846b61b-bc90-4710-914e-0bf7b5a28ff3e23", "type" -> "input", 
    "data" -> "ClearAll[update]", "display" -> "codemirror", 
    "sign" -> "venerating-bd3b2", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "e1765752-4d3d-48cd-b827-9da7b975ee28e23", "type" -> "input", 
    "data" -> ".md\nTo restart - use", "display" -> "codemirror", 
    "sign" -> "venerating-bd3b2", "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "e7670991-d28f-45d8-ad23-b29e13ff04e2e23", "type" -> "output", 
    "data" -> "\nTo restart - use", "display" -> "markdown", 
    "sign" -> "venerating-bd3b2", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "3607de70-6e70-4f50-82b9-218fd8ff429de23", "type" -> "input", 
    "data" -> "update[1]", "display" -> "codemirror", 
    "sign" -> "venerating-bd3b2", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "dfd4d0e0-e8ad-43e7-80c7-bc8f03653894e23", "type" -> "input", 
    "data" -> "update[Null_] := (\n     stepSimulation[dt, eps, position1, \
velocity1, acceleration1, \n      position2, velocity2, acceleration2, 256*4, \
len];\n     stepSimulation[dt, eps, position2, velocity2, acceleration2, \n   \
   position1, velocity1, acceleration1, 256*4, len];\n      ipos = \
Table[OpenCLMemoryGet[position1][[i[\"start\"];; i[\"end\"], 1 ;; 3]], {i, \
groups}];\n);", "display" -> "codemirror", "sign" -> "venerating-bd3b2", 
    "props" -> <|"hidden" -> False, "init" -> True|>|>}, 
 "serializer" -> "jsfn3"|>
