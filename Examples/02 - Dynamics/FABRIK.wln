<|"notebook" -> <|"name" -> "Macadamize", "id" -> "fighting-35f3a", 
   "kernel" -> LocalKernel, "objects" -> <||>, "path" -> "/Users/kirill/Docum\
ents/Github/wolfram-js-frontend/Examples/Dynamics/Basic/FABRIK.wln", 
   "cell" :> Exit[], "date" -> DateObject[{2023, 11, 29, 21, 45, 
      52.132254`8.469681477548166}, "Instant", "Gregorian", 1.], 
   "symbols" -> <||>, "channel" -> WebSocketChannel[
     KirillBelov`WebSocketHandler`WebSocketChannel`$40], 
   "SelectedCell" -> "bde7be5a-68b1-454d-81d5-a495b8cd9187"|>, 
 "cells" -> {<|"id" -> "da377593-1f47-48ad-9399-2114f0539c02", 
    "type" -> "input", "data" -> ".md\n## FABRIK Solver\nAn interactive \
implementation of the simples inverse kinematics problem", 
    "display" -> "codemirror", "sign" -> "fighting-35f3a", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "ee557ef4-897a-4342-8ee1-d4a83eb92817", "type" -> "output", 
    "data" -> "\n## FABRIK Solver\nAn interactive implementation of the \
simples inverse kinematics problem", "display" -> "markdown", 
    "sign" -> "fighting-35f3a", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "b1aa237b-338c-4de6-bb7c-61f8b602ed59", "type" -> "input", 
    "data" -> ".md\n*the actual implemntation is not well-optimized for \
Wolfram Language, but serves a good purpose for the demonstration*", 
    "display" -> "codemirror", "sign" -> "fighting-35f3a", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "05fe6863-143c-4814-8482-1b5f05eb6778", "type" -> "output", 
    "data" -> "\n*the actual implemntation is not well-optimized for Wolfram \
Language, but serves a good purpose for the demonstration*", 
    "display" -> "markdown", "sign" -> "fighting-35f3a", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "b725346f-90ee-40d3-a456-e9da10fe8e1a", "type" -> "input", 
    "data" -> ".md\nDefine a bunch of points connect them into a segmented \
line with fixed length", "display" -> "codemirror", 
    "sign" -> "fighting-35f3a", "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "c8e81b67-f725-4f38-a724-8732c89b5329", "type" -> "output", 
    "data" -> "\nDefine a bunch of points connect them into a segmented line \
with fixed length", "display" -> "markdown", "sign" -> "fighting-35f3a", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "85e68ef8-8b14-4f64-8961-92f63238c351", "type" -> "input", 
    "data" -> "chain = {Cos[#[[1]]], Sin[#[[2]]]}&/@ RandomReal[{-1,1}, {65, \
2}] // Sort;\nlengths = Norm /@ (chain // Reverse // Differences) // \
Reverse;", "display" -> "codemirror", "sign" -> "fighting-35f3a", 
    "props" -> <|"hidden" -> False, "init" -> False|>|>, 
   <|"id" -> "441e2dc4-9274-4c79-8d67-31ed67fc41c5", "type" -> "input", 
    "data" -> ".md\nFABRIK solver", "display" -> "codemirror", 
    "sign" -> "fighting-35f3a", "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "05809035-de77-42cd-953a-9d5e16e64d79", "type" -> "output", 
    "data" -> "\nFABRIK solver", "display" -> "markdown", 
    "sign" -> "fighting-35f3a", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "bde7be5a-68b1-454d-81d5-a495b8cd9187", "type" -> "input", 
    "data" -> "fabrik[lengths_, target_, origin_] := Module[{buffer, prev},\n \
 buffer = Table[With[{p = chain[[-i]]},\n    If[i === 1,\n      prev = \
target;\n      target\n    ,\n    \n      prev = prev - Normalize[(prev - p)] \
lengths[[1-i]];\n      prev \n    ]\n  ], {i, chain // Length}] // \
Reverse;\n\n  Table[With[{p = buffer[[i]]},\n    If[i === 1,\n      prev = \
origin;\n      origin\n    ,\n    \n      prev = prev - Normalize[(prev - p)] \
lengths[[i-1]];\n      prev \n    ]\n  ], {i, chain // Length}]\n]", 
    "display" -> "codemirror", "sign" -> "fighting-35f3a", 
    "props" -> <|"hidden" -> False, "init" -> False|>|>, 
   <|"id" -> "8bc5db8a-e425-4f8d-ae3e-282f5da5b872", "type" -> "input", 
    "data" -> ".md\nCamera! Action", "display" -> "codemirror", 
    "sign" -> "fighting-35f3a", "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "04324be5-f1fc-4203-9979-c6a9c3401be7", "type" -> "output", 
    "data" -> "\nCamera! Action", "display" -> "markdown", 
    "sign" -> "fighting-35f3a", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "404bbbcf-617e-40d5-9e2b-d3f16d85ae2d", "type" -> "input", 
    "data" -> "Graphics[{\n\n  Line[chain // Offload], \n  Red, \
PointSize[0.06], \n  EventHandler[Point[{-1,-1}], {\"drag\"->Function[xy, \
chain = fabrik[lengths, xy, chain // First]]}], \n  Blue, Point[origin // \
Offload]\n  \n}, PlotRange->{{-2,2}, {-2,2}}, ImageSize->500, \
TransitionType->\"Linear\", TransitionDuration->30]", 
    "display" -> "codemirror", "sign" -> "fighting-35f3a", 
    "props" -> <|"hidden" -> False|>|>}, "serializer" -> "jsfn3"|>
