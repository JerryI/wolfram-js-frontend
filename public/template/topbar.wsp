<div class="notion-topbar" style="">
                                    <div style="">
                                        <div class="notranslate topbar-url-container" style="">
                                            <div id="path-button" class="notion-focusable" role="button" tabindex="0" style="">
                                            <?wsp With[{path = $CurrentRequest["Query", "path_decoded"]}, ?>
                                                <div id="path-path" class="notranslate"><?wsp path ?></div>
                                                <input id="path-filename" class="filename-input any-hidden" type="text" style="font-size:14px" value="<?wsp FileBaseName[path] ?>">
                                            <?wsp ] ?>
                                            </div>
                                        </div>
                                        <!--<div style=""></div>-->
                                        <div class="notion-topbar-action-buttons" style="">

                                            <?wsp If[NotebookQ[$CurrentRequest["Query", "path_decoded"]], LoadPage["template/kernelcontrol.wsp", {path = $CurrentRequest["Query", "path_decoded"]}], " "] ?>
                                            
                                            <?wsp If[NotebookQ[$CurrentRequest["Query", "path_decoded"]], ?>
                                            
                                            <div id="abort-button" class="notion-topbar-updates-button notion-focusable" role="button" aria-label="Abort" tabindex="0" >
                                                <img width="15" height="15" src="/svg/topbarUpdate.svg"/>
                                            </div> 

                                            <div id="evaluateinit-button" class="notion-topbar-updates-button notion-focusable" style="width: 15px;" role="button" aria-label="Init" tabindex="0" >
                                                <span style="font-size: 14px;color: rgba(119, 119, 119, 0.5);white-space: nowrap;line-height: 1;width: 1em;text-align: center;/*! background: white; */font-weight: 800;">i</span>
                                            </div>
                                            
                                            <div id="evaluateall-button" class="notion-topbar-updates-button notion-focusable" role="button" aria-label="Evaluateall" tabindex="0" >
                                                <img width="15" height="15" src="/svg/del.svg"/>
                                            </div>

                                            <?wsp , "" ] ?>                                           
                                            <div style="">
                                                <div id="save-button" class="notion-topbar-updates-button notion-focusable" role="button" aria-label="Updates" tabindex="0" >
                                                    <svg id="clocks" viewbox="0 0 20 20" style="transition: transform .8s ease-in-out;  width: 20px; height: 20px; display: block; fill: rgba(55, 53, 47, 0.85); flex-shrink: 0; backface-visibility: hidden; /* transform: rotate(34deg); */" class="topbarUpdate">
                                                        <path d="M10.1,18.2c4.4,0,8.1-3.7,8.1-8.1S14.5,2,10.1,2C5.6,2,2,5.7,2,10.1S5.7,18.2,10.1,18.2z M10.1,16.5c-3.6,0-6.5-2.9-6.5-6.5	S6.5,3.5,10,3.5c3.6,0,6.5,2.9,6.5,6.5C16.6,13.7,13.7,16.5,10.1,16.5z M10.7,10.3V5.5c0-0.8-0.6-0.8-0.6-0.8s-0.6,0-0.6,0.8v4.8	c0,0.4,0.3,0.7,0.6,0.7S10.7,10.7,10.7,10.3z" style=""></path>
                                                    </svg>
                                                </div>
                                                <?wsp If[NotebookQ[$CurrentRequest["Query", "path_decoded"]], ?>
                                                <span class="topbar-path">
                                                    <div style="display: flex; flex-flow: wrap;"><div>Saved<span> </span><span id="date-saved"><?wsp TextString[(Now - JerryI`WolframJSFrontend`Notebook`Notebooks[$AssoticatedPath[$CurrentRequest["Query", "path_decoded"]], "date"])//Round] ?></span><span> </span>ago</div></div>
                                                </span>

                                                <?wsp , ""] ?>
                                                <div style="margin-left: 12px;"></div>
                                                <!--<div class="notion-topbar-favorite-button notion-focusable" role="button" aria-label="Favorite" tabindex="0" >
                                                    <img width="15" height="15" src="/svg/comment.svg"/>
                                                </div>-->
                                                <?wsp If[NotebookQ[$CurrentRequest["Query", "path_decoded"]], ?>
                                                    <div id="share-button" class="notion-topbar-share-menu notion-focusable" role="button" tabindex="0">
                                                        Share
                                                    </div>
                                                    <?wsp LoadPage["template/dropdown/share.wsp"] ?>
                                                <?wsp , "" ] ?>
                                                
                                                
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>

<script>
{
    const clocks = document.getElementById('clocks');
    core.Pong = function(args, env) {
        clocks.style.transform = 'rotate('+args[0]+'deg)';
    }

    core.UpdateKernelStatus = function(args, env) {
        document.getElementById('kernel-button').className  = interpretate(args[0])+"-kernel notion-focusable";
        document.getElementById('kernel-text').innerText    = interpretate(args[1]);
    };
};

{
    <?wsp If[NotebookQ[$CurrentRequest["Query", "path_decoded"]], ?>

    document.getElementById("path-button").addEventListener('click', (e)=>{
        document.getElementById("path-path").classList.add('any-hidden');
        document.getElementById("path-filename").classList.remove('any-hidden');
    });

    document.getElementById("abort-button").addEventListener('click', (e)=>{
        server.socket.send('NotebookAbort');
    });

    document.getElementById("evaluateall-button").addEventListener('click', (e)=>{
        if($KernelStatus !== 'good' && $KernelStatus !== 'working') {
            alert("No active kernel is attached");
            return;
        }

        server.socket.send('NotebookEvaluateAll');
    });    

    document.getElementById("evaluateinit-button").addEventListener('click', (e)=>{
        if($KernelStatus !== 'good' && $KernelStatus !== 'working') {
            alert("No active kernel is attached");
            return;
        }

        server.socket.send('NotebookEvaluateInit');
    });

    core.FrontEndUpdateFileName = function(args, env) {
        const name = interpretate(args[0])+".wl";
        const path = interpretate(args[1]);

        document.getElementById("path-path").innerText = path;
    };

    document.getElementById("path-filename").addEventListener("blur", (e)=>{
        document.getElementById("path-path").classList.remove('any-hidden');
        const field = document.getElementById("path-filename");
        field.classList.add('any-hidden');

        server.socket.send('NotebookRename["'+field.value+'"]');
    }, true);

    var lastTimeSaved = new Date(<?wsp UnixTime[JerryI`WolframJSFrontend`Notebook`Notebooks[$AssoticatedPath[$CurrentRequest["Query", "path_decoded"]], "date"]] ?> * 1000);

    const generateThumbnail = () => {

    };

    document.getElementById('save-button').addEventListener('click', (e)=> {
        server.socket.send('NotebookStore;');
        lastTimeSaved = new Date();
        datesaved.innerText = formatDateDiff(lastTimeSaved, new Date());  
        generateThumbnail();
    });

       

    const datesaved = document.getElementById('date-saved');
    setInterval(function () {
        datesaved.innerText = formatDateDiff(lastTimeSaved, new Date());        
    }, 5000);

    setInterval(function () {
        console.log('autosave');
        server.socket.send('NotebookStore;');
        lastTimeSaved = new Date();
        datesaved.innerText = formatDateDiff(lastTimeSaved, new Date());        
        /*generateThumbnail();*/
    }, 1000*60*3);



    function formatDateDiff(startDate, endDate) {
      const diff = Math.abs(endDate - startDate);
      const diffInSeconds = Math.round(diff / 1000);
      const diffInMinutes = Math.round(diff / (1000 * 60));
      const diffInHours = Math.round(diff / (1000 * 60 * 60));
      const diffInDays = Math.round(diff / (1000 * 60 * 60 * 24));
      const diffInWeeks = Math.round(diff / (1000 * 60 * 60 * 24 * 7));
      const diffInMonths = Math.round(diff / (1000 * 60 * 60 * 24 * 30));
      const diffInYears = Math.round(diff / (1000 * 60 * 60 * 24 * 365));
    
      if (diffInSeconds < 60) {
        return `${diffInSeconds} secs`;
      } else if (diffInMinutes < 60) {
        return `${diffInMinutes} mins`;
      } else if (diffInHours < 24) {
        return `${diffInHours} hrs`;
      } else if (diffInDays < 7) {
        return `${diffInDays} days`;
      } else if (diffInWeeks < 4) {
        return `${diffInWeeks} weeks`;
      } else if (diffInMonths < 12) {
        return `${diffInMonths} months`;
      } else {
        return `${diffInYears} years`;
      }
    };

    <?wsp , ""] ?>
}
</script>