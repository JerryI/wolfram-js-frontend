<?wsp With[{uid = CreateUUID[]}, ?>
<div class="notion-selectable notion-collection_view_page-block" style="display: flex; flex-direction: column; padding-top: 8px; padding-bottom: 4px;">
            <div class="notion-selectable notion-page-block notion-collection-item" style="margin-top: 1px; margin-bottom: 1px; border-radius: 3px;">
        <span style="display: flex; color: inherit; text-decoration: none; flex-grow: 1; overflow: hidden; border-radius: 3px; ">
                        <div class="filebrowser-strip" role="button" tabindex="0" style="<?wsp If[TrueQ[disabled], "opacity: 0.5;", ""]?>-webkit-user-select: none; transition: background 20ms ease-in 0s; cursor: pointer; width: 100%; display: flex; align-items: center; padding-right: 4px;">
                           <div class="notion-record-icon notranslate" role="button" tabindex="0" style="-webkit-user-select: none;transition: background 20ms ease-in 0s;cursor: pointer;display: flex;align-items: center;justify-content: center;border: none;/*  */border-radius: 0.25em;flex-shrink: 0;margin-left: 2px;margin-right: 6px;">
                            
                                <div id="<?wsp uid ?>" style="font-size: small"></div>
                           
                           </div>
                           <div style="display: flex; margin-right: auto; min-width: 240px; align-items: center;">
                                
                             
                           </div>
                           
                        </div>
                        
                     </span>      
  </div>
         
      </div>

<script>
    (async () => {
        const i = document.getElementById("<?wsp uid ?>");
        let wait = false;


        let res = await server.ask('NotebookHEAD');

        console.log('current styles');
        console.log(res);
        
       

        const editor = new window.EditorView({
            doc: res.slice(1,-1),
            extensions: [
                window.EditorExtensionsMinimal.map(e => e()),
                window.html(),
                EditorView.updateListener.of((v) => {
                    if (v.docChanged && !wait) {
                      wait = true;
                      setTimeout(() => {
                        wait = false;
                      }, 300);
                      const data = v.state.doc.toString();
                      console.log(data);
                      window.GlobalHEADOverride.innerHTML = data; 
                      server.socket.send('Uncompress["<?wsp Compress[update] ?>"] @ ("'+btoa(data)+'")');
                      
                    }
                })
            ],
            parent: i
        });


    })()
</script>

<?wsp ] ?>