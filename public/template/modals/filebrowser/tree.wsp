
<?wsp LoadPage[FileNameJoin[{"template","modals","filebrowser","file.wsp"}], {file = ParentDirectory[path // URLDecode], prefix="../"}] ?>

<?wsp Table[ ?>
    <?wsp LoadPage[FileNameJoin[{"template","modals","filebrowser","file.wsp"}], {file = i, prefix=""}] ?>
<?wsp , {i, FileNames["*", path // URLDecode]}] ?>

<div data-block-id="b15ce24b-3788-45e6-93c9-bff82bb5dff0" class="notion-selectable notion-page-block notion-collection-item" style="margin-top: 1px; margin-bottom: 1px; border-radius: 3px;">
                  <div style="display: flex;">               
                     <input id="new-dirname" class="filename-input any-hidden" type="text" style="font-size:14px" value=""/>
                  </div>
               </div>

               <div id="tree-new-folder" role="button" tabindex="0" style="-webkit-user-select: none; transition: background 20ms ease-in 0s; cursor: pointer; display: flex; align-items: center; height: 30px; border-radius: 3px; font-size: 14px;">
                  <svg viewBox="0 0 16 16" class="plus" style="width: 14px; height: 14px; display: block; fill: rgba(55, 53, 47, 0.35); flex-shrink: 0; backface-visibility: hidden; margin-left: 4px; margin-right: 6px;">
                     <path d="M7.977 14.963c.407 0 .747-.324.747-.723V8.72h5.362c.399 0 .74-.34.74-.747a.746.746 0 00-.74-.738H8.724V1.706c0-.398-.34-.722-.747-.722a.732.732 0 00-.739.722v5.529h-5.37a.746.746 0 00-.74.738c0 .407.341.747.74.747h5.37v5.52c0 .399.332.723.739.723z"></path>
                  </svg>
                  <div style="color: rgba(55, 53, 47, 0.5);">New folder</div>
               </div>
</div>

<script>
    {
        const files = <?wsp ExportString[({"filebrowser-"<>HashString32[#], # // URLEncode})&/@ Join[{ParentDirectory[path // URLDecode]}, Select[FileNames["*", path // URLDecode], DirectoryQ]], "JSON"] ?>;
        console.log(files);
        files.forEach((el)=>{
            document.getElementById(el[0]).addEventListener('click', ()=>{
                core.BrowserThreeUpdate(el[1]);
            })
        })

        core.BrowserURLVault = '<?wsp path ?>';


      const createNewDir = (name) => {
         const promise = {resolve: (name) => {
            console.log("resolved!");
            core.BrowserThreeUpdate(core.BrowserURLVault);
         }};
         server.promises[89116] = promise;

         server.socket.send(`FileOperate["NewDirectory"]["${core.BrowserURLVault}", "${name}", 89116]`);
      }

   

      document.getElementById('tree-new-folder').addEventListener('click', ()=>{
         const dirinput = document.getElementById("new-dirname");
         dirinput.classList.remove('any-hidden');
         dirinput.focus();

         dirinput.value = "<?wsp RandomWord[] ?> folder";

         const onFocusLeave = (ev) => {
            dirinput.removeEventListener("focusout", onFocusLeave);
            dirinput.classList.add('any-hidden');
            createNewDir(dirinput.value);
         }

         dirinput.addEventListener("focusout", onFocusLeave);
      });      
    }
</script>