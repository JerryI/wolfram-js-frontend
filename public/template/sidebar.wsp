<div  style="">
                                        <div style="">
                                            <div class="sidebar-flex">
                                                <div class="sidebar-holder">
                                                    <div class="notion-sidebar-switcher  sidebar-container" role="" tabindex="0">                                                         
                                                    </div>
                                                </div>
                                                <div style="flex-grow: 0;flex-shrink: 0;border-bottom: 1px solid var(--borders-color);padding-bottom: 0.5em;margin-bottom: 0.5em;">
                                                  

                                                    <div style="flex-grow: 0; flex-shrink: 0;">
                                                        <div class="notion-focusable" role="button" tabindex="0">
                                                            <div class="sidebar-new-class">
                                                                <div class="sidebar-option" class="sidebar-button-svg">
                                                                    <div id="toggle-sidebar-button" class="button-body">
                                                                        <svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 16 16" class="doubleChevronLeft" style="width: 16px; height: 16px; display: block; fill: rgba(55, 53, 47, 0.45); flex-shrink: 0; backface-visibility: hidden;">
                                                                            <path d="M7.07031 13.8887C7.2207 14.0391 7.40527 14.1211 7.62402 14.1211C8.06836 14.1211 8.41699 13.7725 8.41699 13.3281C8.41699 13.1094 8.32812 12.9043 8.17773 12.7539L3.37207 8.05762L8.17773 3.375C8.32812 3.21777 8.41699 3.0127 8.41699 2.80078C8.41699 2.35645 8.06836 2.00781 7.62402 2.00781C7.40527 2.00781 7.2207 2.08984 7.07031 2.24023L1.73828 7.44922C1.56055 7.62012 1.46484 7.8252 1.46484 8.06445C1.46484 8.29688 1.55371 8.49512 1.73828 8.67969L7.07031 13.8887ZM13.1748 13.8887C13.3252 14.0391 13.5098 14.1211 13.7354 14.1211C14.1797 14.1211 14.5283 13.7725 14.5283 13.3281C14.5283 13.1094 14.4395 12.9043 14.2891 12.7539L9.4834 8.05762L14.2891 3.375C14.4395 3.21777 14.5283 3.0127 14.5283 2.80078C14.5283 2.35645 14.1797 2.00781 13.7354 2.00781C13.5098 2.00781 13.3252 2.08984 13.1748 2.24023L7.84961 7.44922C7.66504 7.62012 7.57617 7.8252 7.56934 8.06445C7.56934 8.29688 7.66504 8.49512 7.84961 8.67969L13.1748 13.8887Z"></path>
                                                                        </svg>
                                                                    </div>
                                                                </div>
                                                                <div class="sidebar-button-label"></div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div style="flex-grow: 0; flex-shrink: 0;">
                                                        <div id="settings-button" class="notion-focusable" role="button" tabindex="0">
                                                            <div class="sidebar-new-class">
                                                                <div class="sidebar-option" class="sidebar-button-svg">
                                                                    <div class="button-body">
                                                                        <img width="15" height="15" src="/svg/sidebarSettings.svg"/>
                                                                    </div>
                                                                </div>
                                                                <div class="sidebar-button-label">Settings</div>
                                                            </div>
                                                        </div>
                                                    </div>  
                                                    
                                                    <div style="flex-grow: 0; flex-shrink: 0;">
                                                        <div id="open-vault-button" class="notion-focusable" role="button" tabindex="0">
                                                            <div class="sidebar-new-class">
                                                                <div class="sidebar-option" class="sidebar-button-svg">
                                                                    <div class="button-body">
                                                                        <img width="15" height="15" src="/svg/sidebarSearch.svg"/>
                                                                    </div>
                                                                </div>
                                                                <div class="sidebar-button-label">Open vault</div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div style="flex-grow: 0; flex-shrink: 0;">
                                                        <div id="new-notebook-button" class="notion-focusable" role="button" tabindex="0">
                                                            <div class="sidebar-new-class">
                                                                <div class="sidebar-option" class="sidebar-button-svg">
                                                                    <div class="button-body">
                                                                        <img width="15" height="15" src="/svg/plus.svg"/>
                                                                    </div>
                                                                </div>
                                                                <div class="sidebar-button-label">New notebook</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!--<div class="notion-focusable sidebar-button" id="history-button" role="button" tabindex="0" >
                                                        <div class="sidebar-button-inner">
                                                            <div class="sidebar-button-svg">
                                                                <div style="color: inherit;">
                                                                    <img width="15" height="15" src="/svg/sidebarUpdates.svg"/>
                                                                </div>
                                                            </div>
                                                            <div class="sidebar-button-label">History</div>
                                                            <div class="sidebar-button-delim"></div>
                                                        </div>
                                                    </div>
                                                    -->
                                                </div>

                                            <?wsp If[NotebookQ[$CurrentRequest["Query", "path_decoded"]], ?>    
                                                <div style="
    border-bottom: 1px solid var(--borders-color);
    display: inline-block;
">
                                                    <div style="margin-bottom: 0.5em;
    margin-left: 1em;
    justify-content: center;
    /* text-align: center; */
    display: block;
    vertical-align: baseline;
">
                                                        <div class="sidebar-button-inner-inline">
                                                            <?wsp LoadPage["template/kernelcontrol.wsp", {path = $CurrentRequest["Query", "path_decoded"]}] ?>
                                                        </div>    
                                                        <div class="sidebar-button-inner-inline"> 
                                                                <div id="abort-button" class="notion-topbar-updates-button notion-focusable" role="button" aria-label="Abort" tabindex="0" >
                                                                    <img width="15" height="15" src="/svg/topbarUpdate.svg"/>
                                                                </div> 
                                                        </div>        

                                                        <div class="sidebar-button-inner-inline">    
                                                            <div id="evaluateinit-button" class="notion-topbar-updates-button notion-focusable"  role="button" aria-label="Init" tabindex="0" style="border-radius: 4px;text-align: center;">
                                                                <span style="/* font-size: 14px; */color: var(--topbar-text-color);opacity: 0.8;white-space: nowrap;line-height: 1.1;/* padding: 5px; */width: 15px;height: 15px;/* padding-bottom: -16px; *//* margin-bottom: 3px; */display: block;text-align: center;/*! background: white; */font-weight: 600;">i</span>
                                                            </div>
                                                        </div>
                                                        <div class="sidebar-button-inner-inline">
                                                            <div id="evaluateall-button" class="notion-topbar-updates-button notion-focusable" role="button" aria-label="Evaluateall" tabindex="0" >
                                                                <img width="15" height="15" src="/svg/del.svg"/>
                                                            </div>  
                                                        </div>   

                                                        <div class="sidebar-button-inner-inline">
                                                        <div id="save-button" class="notion-topbar-updates-button notion-focusable" role="button" aria-label="Evaluateall" tabindex="0" style="padding: 3px;opacity: 0.7;">
                                                                <svg id="clocks" viewBox="0 0 20 20" style="transition: transform 0.8s ease-in-out 0s; width: 17px; height: 17px; display: block; flex-shrink: 0; transform: rotate(115deg);" class="">
                                                                    <path d="M10.1,18.2c4.4,0,8.1-3.7,8.1-8.1S14.5,2,10.1,2C5.6,2,2,5.7,2,10.1S5.7,18.2,10.1,18.2z M10.1,16.5c-3.6,0-6.5-2.9-6.5-6.5	S6.5,3.5,10,3.5c3.6,0,6.5,2.9,6.5,6.5C16.6,13.7,13.7,16.5,10.1,16.5z M10.7,10.3V5.5c0-0.8-0.6-0.8-0.6-0.8s-0.6,0-0.6,0.8v4.8	c0,0.4,0.3,0.7,0.6,0.7S10.7,10.7,10.7,10.3z" style=""></path>
                                                                </svg>
                                                            </div>
                                                        </div> 

                                                        <div class="sidebar-button-inner-inline">
                                                            <div id="time-wrapper" style="flex-flow: wrap;padding-left: 0.5em;padding: 0.1em;padding-left: 0.8em;"><div>Saved<span> </span><span id="date-saved"><?wsp TextString[(Now - JerryI`WolframJSFrontend`Notebook`Notebooks[$AssoticatedPath[$CurrentRequest["Query", "path_decoded"]], "date"])//Round] ?></span><span> </span>ago</div></div>
                                                        </div>

                                                        <div id="share-button-wrapper" class="sidebar-button-inner-inline">
                                                            <div id="share-button" class="notion-topbar-updates-button notion-focusable" role="button" style="flex-flow: wrap;padding: 0.25em;display: initial;border-radius: 4px;/* margin-right: auto; */">
                                                                Share
                                                            </div>
                                                            <?wsp LoadPage["template/dropdown/share.wsp"] ?>
                                                        </div>

                                                    </div>                                                  
                                                </div>

                                                <?wsp , ""] ?>

                                                <div class="notion-scroller" style="overflow-y: scroll; height:100%">
                                                    <nav>
                                                        <div class="notion-outliner-private" style="display: block;">
                                                            <div style="">
                                                            <?wsp PageModule[ ?>

                                                                <div class="notion-selectable notion-page-block">
                                                                    <a href="/index.wsp?path=<?wsp URLEncode[ParentDirectory[$CurrentRequest["dir"]]] ?>" rel="noopener noreferrer" style="display: block; color: inherit; text-decoration: none; width: 100%;">
                                                            
                                                                        <div oncontextmenu="return false;" class="notion-focusable" role="button" tabindex="0" class="sidebar-focusable-cover">
                                                                       

                                                                            <div oncontextmenu="return false;" class="sidebar-option" >
                                                                                <div oncontextmenu="return false;" class="option-holder">
                                                                                    <div oncontextmenu="return false;" class="notion-focusable focusable-pointer" role="button" tabindex="0" >
                                                                                        
                                                                                        <img width="15" height="15" src="/svg/chevronDownRoundedThick.svg"/>
                                                                                        
                                                                                    </div>
                                                                                </div>
                                                                                <div class="sidebar-option-button">
                                                                                    
                                                                                    <div class="notion-record-icon notranslate notion-focusable" role="button" tabindex="0" >
                                                                                    </div>
                                                                                </div>
                                                                                <div class="sidebar-label-clearfix">
                                                                                    <div class="notranslate" class="label-clear">../</div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </a>
                                                                    
                                                                </div>                                                                
                                                                
                                                                <?wsp LoadPage["template/components/filelist.wsp", {dir = $CurrentRequest["dir"] // URLEncode}] ?>

                                                            <?wsp , "fileslist"]  ?>    
                                                                
                                                                
                                                                
                                                                
                                                                <!--<div class="notion-focusable" id="add-notebook-button" role="button" tabindex="0" style="-webkit-user-select: none; transition: background 20ms ease-in 0s; cursor: pointer;">
                                                                    <div class="focusable-add">
                                                                        <div class="sidebar-option" >
                                                                            <div class="button-body">
                                                                                <img width="15" height="15" src="/svg/plusThick.svg"/>
                                                                            </div>
                                                                        </div>
                                                                        <div class="sidebar-button-label">Add a notebook</div>
                                                                    </div>
                                                                </div>-->
                                                            </div>
                                                        </div>
                                                        <div style="margin-top: 18px;"></div>
                                                        <div style="flex-grow: 0; flex-shrink: 0;">
                                                            
                                                            <!--<div class="notion-focusable sidebar-button" id="import-button" role="button" tabindex="0" >
                                                                <div class="sidebar-button-inner">
                                                                    <div class="sidebar-option">
                                                                        <img width="15" height="15" src="/svg/sidebarImport.svg"/>
                                                                    </div>
                                                                    <div class="sidebar-button-label">Import</div>
                                                                </div>
                                                            </div>
                                                            <div class="notion-selectable notion-page-block">
                                                                <div class="notion-focusable" id="trash-button" role="button" tabindex="0">
                                                                    <div class="sidebar-button-inner">
                                                                        <div class="sidebar-option" >
                                                                            <img width="15" height="15" src="/svg/sidebarTrash.svg"/>
                                                                        </div>
                                                                        <div class="sidebar-button-label">Trash</div>
                                                                    </div>
                                                                </div>
                                                            </div>-->
                                                        </div>
                                                    </nav>
                                                </div>
                                                <div class="sidebar-bottom" style="">
                                                    
                                                <div style="flex-grow: 0; flex-shrink: 0;">
                                                        <div class="notion-focusable" role="button" tabindex="0">
                                                            <div class="">
                                                                <div class="sidebar-option">
                                                                    <div id="toggle-theme" class="button-body">
                                                                    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                                                    viewBox="0 0 16 16" style="width: 15px;opacity: 0.4;" xml:space="preserve">
                                                               <style type="text/css">
                                                                   .st0{fill:#212121;}
                                                               </style>
                                                               <g id="_xD83D__xDD0D_-Product-Icons">
                                                                   <g id="ic_fluent_dark_theme_24_regular">
                                                                       <path id="_xD83C__xDFA8_-Color" class="st0" d="M8,16c4.4,0,8-3.6,8-8s-3.6-8-8-8S0,3.6,0,8S3.6,16,8,16z M8,14.8V1.2
                                                                           c3.8,0,6.8,3,6.8,6.8S11.8,14.8,8,14.8z"/>
                                                                   </g>
                                                               </g>
                                                               </svg>
                                                                    </div>
                                                                    <div class="sidebar-button-label" style="padding-left:1em;" id="toggle-theme-label"></div>
                                                                </div>
                                                                
                                                            </div>
                                                        </div>
                                                    </div></div>
                                            </div>
                                        </div>
                                    </div>

<script type="module">
    document.getElementById("new-notebook-button").addEventListener('click', (e)=>{
        const dir = '<?wsp $CurrentRequest["dir"] // URLEncode ?>';
        server.socket.send('CreateNewNotebook[URLDecode["'+dir+'"], <?wsp NotebookQ[$CurrentRequest["Query", "path_decoded"]] ?>]');
    });

    document.getElementById("open-vault-button").addEventListener('click', (e)=>{
        callModal('filebrowser', '{path = "<?wsp $CurrentRequest["dir"]//URLEncode ?>"}');
    });

    document.getElementById("settings-button").addEventListener('click', (e)=>{
        callModal('settings', `{notebook = "${window.Notebook}"}`);
    }); 

    /*document.getElementById("history-button").addEventListener('click', (e)=>{
        alert('Not implemented');
    }); */

    let darkmode = '<?wsp NotebookTheme ?>';

    if (typeof darkmode === 'undefined' || darkmode === null) {
            darkmode = 'system';
    }

    console.warn('Darkmode state: '+darkmode);

    const textTheme = document.getElementById('toggle-theme-label');

    document.getElementById("toggle-theme").addEventListener('click', (e)=>{
        console.log(darkmode);
        

        if (darkmode === 'system') {
            server.socket.send('NotebookTheme = "disabled"');
            darkmode = 'disabled';
            document.body.removeAttribute('data-theme');
            document.body.style.background = "var(--topbar-background)";
            
            textTheme.innerText = "  Light";
            setTimeout(()=>{
                textTheme.innerText = ""
            }, 500);

        } else if (darkmode === 'disabled') {
            server.socket.send('NotebookTheme = "enabled"');
            darkmode = 'enabled';
            document.body.setAttribute('data-theme', 'dark');
            document.body.style.background = "var(--topbar-background)";
            textTheme.innerText = "  Dark";
            setTimeout(()=>{
                textTheme.innerText = ""
            }, 500);

        } else if (darkmode === 'enabled') {
            server.socket.send('NotebookTheme = "system"');
            darkmode = 'system';
            textTheme.innerText = "  System";
            setTimeout(()=>{
                textTheme.innerText = ""
            }, 500);
            window.resetBackground();
            
            runColorMode((isDarkMode) => {
                if (isDarkMode) {
                  document.body.setAttribute('data-theme', 'dark');
                } else {
                  document.body.removeAttribute('data-theme');
                }
              });            
        }
    }); 
    
    /*
    document.getElementById("import-button").addEventListener('click', (e)=>{
        alert('Not implemented');
    });     

    document.getElementById("trash-button").addEventListener('click', (e)=>{
        alert('Not implemented');
    });    */


    //const clocks = document.getElementById('clocks');
    core.Pong = function(args, env) {
        //clocks.style.transform = 'rotate('+args[0]+'deg)';
    }


    core.FrontEndUpdateFileList = async function(args, env) {
        console.log('HotReload!');
        server.socket.send('HotReload[{"fileslist"}];');
    }

    let sidebar = document.getElementsByClassName('notion-sidebar-container')[0];
    console.log(sidebar);

    sidebar.addEventListener('dragenter', (ev)=>{
        console.log('Print["File(s) in a zone"]');


    });

    sidebar.addEventListener('dragover', (ev)=>{
        console.log('Print["File(s) dragover"]');
        sidebar.classList.add('sidebar-file-drop-enter');
        ev.preventDefault();

    });    

    sidebar.addEventListener('dragleave', (ev)=>{
        console.log('Print["File(s) out"]');
        sidebar.classList.remove('sidebar-file-drop-enter');

    });    

    const uploader = (file, name) => {
        if (!window.Notebook) {
            alert('not possible to upload without notebook attached!');
            return false;
        }
        const query = `FileOperate["Upload"][<|"name"->"${name}", "data"->"${file}"|>, "${window.Notebook}"]`;

        return server.post.send(query)
    }

    sidebar.addEventListener('drop', (ev)=>{
        console.log('Print["File(s) dropped"]');
        sidebar.classList.remove('sidebar-file-drop-enter');

        // Prevent default behavior (Prevent file from being opened)
        ev.preventDefault();

        if (ev.dataTransfer.items) {
          // Use DataTransferItemList interface to access the file(s)
          [...ev.dataTransfer.items].forEach((item, i) => {
            // If dropped items aren't files, reject them
            if (item.kind === "file") {
              const file = item.getAsFile();
              console.log(file);
              fileCompressor(file, uploader);
         
            }
          }); 
        } else {
          // Use DataTransfer interface to access the file(s)
          [...ev.dataTransfer.files].forEach((file, i) => {
            fileCompressor(file, uploader);
        
          });
        }

    });     

    <?wsp If[NotebookQ[$CurrentRequest["Query", "path_decoded"]], ?>
    
    const clocks = document.getElementById('clocks');
    core.Pong = function(args, env) {
        clocks.style.transform = 'rotate('+args[0]+'deg)';
    }

    document.getElementById("abort-button").addEventListener('click', (e)=>{
        server.socket.send('NotebookAbort');
    });

    document.getElementById("evaluateall-button").addEventListener('click', (e)=>{
        if($KernelStatus !== 'good' && $KernelStatus !== 'working') {
            alert("No active kernel is attached");
            return;
        }

        server.socket.send('NotebookEvaluateAll');
    });    

    document.getElementById("evaluateinit-button").addEventListener('click', (e)=>{
        if($KernelStatus !== 'good' && $KernelStatus !== 'working') {
            alert("No active kernel is attached");
            return;
        }

        server.socket.send('NotebookEvaluateInit');
    });

    core.FrontEndUpdateFileName = function(args, env) {
        const name = interpretate(args[0])+".wl";
        const path = interpretate(args[1]);

        document.getElementById("path-path").innerText = path;
    };

    /*document.getElementById("path-filename").addEventListener("blur", (e)=>{
        document.getElementById("path-path").classList.remove('any-hidden');
        const field = document.getElementById("path-filename");
        field.classList.add('any-hidden');

        server.socket.send('NotebookRename["'+field.value+'"]');
    }, true);*/

    var lastTimeSaved = new Date(<?wsp UnixTime[JerryI`WolframJSFrontend`Notebook`Notebooks[$AssoticatedPath[$CurrentRequest["Query", "path_decoded"]], "date"]] ?> * 1000);

    const generateThumbnail = () => {

    };



       

    const datesaved = document.getElementById('date-saved');

    document.getElementById('save-button').addEventListener('click', (e)=> {
        server.socket.send('NotebookStore;');
        lastTimeSaved = new Date();
        datesaved.innerText = formatDateDiff(lastTimeSaved, new Date());  
        //generateThumbnail();
        if (server.socket.readyState != 1) alert('Connection to the server was lost!');
    });

    if (window.electronAPI) {
        window.electronAPI.call((event, id) => {
            if (id === 'Save') {
                if (server.socket.readyState != 1) alert('Connection to the server was lost!');
                server.socket.send('NotebookStore;');
                lastTimeSaved = new Date();
                datesaved.innerText = formatDateDiff(lastTimeSaved, new Date());                 
            }
        });
    }

    setInterval(function () {
        datesaved.innerText = formatDateDiff(lastTimeSaved, new Date());        
    }, 5000);

    setInterval(function () {
        console.log('autosave');
        server.socket.send('NotebookStore;');
        lastTimeSaved = new Date();
        datesaved.innerText = formatDateDiff(lastTimeSaved, new Date());        
        /*generateThumbnail();*/
    }, <?wsp JerryI`WolframJSFrontend`settings["autosave"] ?>);



    function formatDateDiff(startDate, endDate) {
      const diff = Math.abs(endDate - startDate);
      const diffInSeconds = Math.round(diff / 1000);
      const diffInMinutes = Math.round(diff / (1000 * 60));
      const diffInHours = Math.round(diff / (1000 * 60 * 60));
      const diffInDays = Math.round(diff / (1000 * 60 * 60 * 24));
      const diffInWeeks = Math.round(diff / (1000 * 60 * 60 * 24 * 7));
      const diffInMonths = Math.round(diff / (1000 * 60 * 60 * 24 * 30));
      const diffInYears = Math.round(diff / (1000 * 60 * 60 * 24 * 365));
    
      if (diffInSeconds < 60) {
        return `${diffInSeconds} secs`;
      } else if (diffInMinutes < 60) {
        return `${diffInMinutes} mins`;
      } else if (diffInHours < 24) {
        return `${diffInHours} hrs`;
      } else if (diffInDays < 7) {
        return `${diffInDays} days`;
      } else if (diffInWeeks < 4) {
        return `${diffInWeeks} weeks`;
      } else if (diffInMonths < 12) {
        return `${diffInMonths} months`;
      } else {
        return `${diffInYears} years`;
      }
    };

    <?wsp , ""] ?>

</script>