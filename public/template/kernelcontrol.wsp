<?wsp
    With[{kernel = JerryI`WolframJSFrontend`Notebook`Notebooks[$AssoticatedPath[path]]["kernel"], nid = $AssoticatedPath[path]}, 
        With[{signal = kernel["Status"]["signal"], text = kernel["Status"]["text"]}, 
?>

<script>
    var $KernelStatus = '<?wsp signal ?>';
</script>

<div id="kernel-text" style=" opacity: 1; transition: opacity 150ms linear 0s; display: flex; align-items: center; font-size: 14px; color: rgba(55, 53, 47, 0.5); height: 28px; margin-right:10px; white-space: nowrap; line-height: 1.2; ">
    <?wsp text ?>
</div>
<div id="kernel-button" class="<?wsp signal ?>-kernel" style="cursor: pointer; display: inline-flex; align-items: center; flex-shrink: 1; min-width: 0px; height: 20px; border-radius: 3px; padding-left: 6px; padding-right: 6px; font-size: 14px; line-height: 120%;  margin: 0px;">
    <div  style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; display: flex;">
        <div style="display: block;"><?wsp kernel ?></div>
    </div>
    <?wsp LoadPage["template/dropdown/kernel.wsp", {notebookID = nid}] ?>  
</div>
<div id="notebook-attached" class="no-kernel" style="display: inline-flex; align-items: center; flex-shrink: 1; min-width: 0px; height: 20px; border-radius: 3px; padding-left: 6px; padding-right: 6px; font-size: 14px; line-height: 120%;  margin: 0px; margin-left: 0.5em;">
    <div style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; display: flex;">
        <div style="display: block;"></div>
    </div>    
</div>
<div id="ws-link" class="no-kernel" style="display: inline-flex; align-items: center; flex-shrink: 1; min-width: 0px; height: 20px; border-radius: 3px; padding-left: 6px; padding-right: 6px; font-size: 14px; line-height: 120%;  margin: 0px; margin-left: 0.5em;">
    <div style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; display: flex;">
        <div style="display: block;"></div>
    </div>    
</div>

<script type="module">
    
    core.FrontEndKernelStatus = async function(args, env) {
        console.log("status update");
        
        let state = await interpretate(args[0], env);
        console.log(state);
        $KernelStatus = state['signal'];
        document.getElementById("kernel-text").innerText = state['text'];
        document.getElementById("kernel-button").className = state['signal']+'-kernel';
        if (state['signal'] != 'good') {
            server.kernelControl.wsReset();
            server.kernelControl.notebookReset();
        }
    }

    core.FrontEndWSAttached = async function(args, env) {
        document.getElementById("ws-link").className = 'good-kernel';
    } 
    core.FrontEndNotebookAttached = async function(args, env) {
        document.getElementById("notebook-attached").className = 'good-kernel';
    }
    
    server.kernelControl = {};
    server.kernelControl.wsReset = (state) => {
        document.getElementById("ws-link").className = 'load-kernel';
        if (state === 'bad') document.getElementById("ws-link").className = 'bad-kernel';
    }
    server.kernelControl.notebookReset = (state) => {
        document.getElementById("notebook-attached").className = 'load-kernel';
        if (state === 'bad') document.getElementById("notebook-attached").className = 'bad-kernel';
    }
</script>

<?wsp ]] ?>